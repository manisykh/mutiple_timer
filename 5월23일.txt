// // // // // // // // // // // // // // -----------------------------FAB 적용 버전------------------------------------------------------------------------
// // // // // // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // // // // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // // // // // // // // // // // import 'package:flutter/cupertino.dart';
// // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // import 'dart:convert';
// // // // // // // // // // // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // // // // // // // // // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // // // // // // // // // // // void main() async {
// // // // // // // // // // // // //   WidgetsFlutterBinding.ensureInitialized();
// // // // // // // // // // // // //   final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //   final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // // // // // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class MyApp extends StatelessWidget {
// // // // // // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // // // // // //   const MyApp({super.key, this.lastUsedPreset});

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // // // //     return ScreenUtilInit(
// // // // // // // // // // // // //       designSize: const Size(390, 844),
// // // // // // // // // // // // //       builder:
// // // // // // // // // // // // //           (context, child) => MaterialApp(
// // // // // // // // // // // // //             debugShowCheckedModeBanner: false,
// // // // // // // // // // // // //             title: 'Multi Player Timer',
// // // // // // // // // // // // //             theme: ThemeData(
// // // // // // // // // // // // //               scaffoldBackgroundColor: Colors.white,
// // // // // // // // // // // // //               fontFamily: 'Roboto',
// // // // // // // // // // // // //               textTheme: TextTheme(
// // // // // // // // // // // // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // // // // // // // // // // // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // // // // // // // // // // // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // // // // // // // // // // // //                 style: ElevatedButton.styleFrom(
// // // // // // // // // // // // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // // // // // // // // // // // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // // // // // // // // // // // //                 ),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class Player {
// // // // // // // // // // // // //   String name;
// // // // // // // // // // // // //   int seconds;
// // // // // // // // // // // // //   int originalSeconds;
// // // // // // // // // // // // //   Color color;
// // // // // // // // // // // // //   bool isCompleted;
// // // // // // // // // // // // //   int elapsedSeconds = 0;

// // // // // // // // // // // // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // // // // // // // // // // // //     : originalSeconds = seconds;

// // // // // // // // // // // // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // // // // // // // // // // // //   static Player fromJson(Map<String, dynamic> json) =>
// // // // // // // // // // // // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class PlayerSetupScreen extends StatefulWidget {
// // // // // // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // // // // // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // // // // // // // // // // // //   final List<Player> players = [];
// // // // // // // // // // // // //   final List<TextEditingController> nameControllers = [];
// // // // // // // // // // // // //   String? currentPresetName;

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   void initState() {
// // // // // // // // // // // // //     super.initState();
// // // // // // // // // // // // //     if (widget.lastUsedPreset != null) {
// // // // // // // // // // // // //       currentPresetName = widget.lastUsedPreset;
// // // // // // // // // // // // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // // // // // // // // // // // //     } else {
// // // // // // // // // // // // //       initializePlayers(2);
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void initializePlayers(int count) {
// // // // // // // // // // // // //     players.clear();
// // // // // // // // // // // // //     nameControllers.clear();
// // // // // // // // // // // // //     for (int i = 0; i < count; i++) {
// // // // // // // // // // // // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // // // // // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     setState(() {});
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void addPlayer() {
// // // // // // // // // // // // //     final newIndex = players.length;
// // // // // // // // // // // // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // // // // // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // // // // // // // // // // // //     setState(() {});
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void removePlayer(int index) {
// // // // // // // // // // // // //     players.removeAt(index);
// // // // // // // // // // // // //     nameControllers.removeAt(index);
// // // // // // // // // // // // //     setState(() {});
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> saveCurrentSettings(String presetName) async {
// // // // // // // // // // // // //     if (presetName.isEmpty) return;
// // // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //     final encoded = players.map((p) => p.toJson()).toList();
// // // // // // // // // // // // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // // // // // // // // // // // //     await prefs.setString('last_used_preset', presetName);
// // // // // // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // // // //     if (!names.contains(presetName)) {
// // // // // // // // // // // // //       names.add(presetName);
// // // // // // // // // // // // //       await prefs.setStringList('preset_names', names);
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     setState(() {
// // // // // // // // // // // // //       currentPresetName = presetName;
// // // // // // // // // // // // //     });
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> deletePreset(String presetName) async {
// // // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //     await prefs.remove('preset_$presetName');
// // // // // // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // // // //     names.remove(presetName);
// // // // // // // // // // // // //     await prefs.setStringList('preset_names', names);
// // // // // // // // // // // // //     final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // // // // // //     if (lastUsed == presetName) {
// // // // // // // // // // // // //       await prefs.remove('last_used_preset');
// // // // // // // // // // // // //       setState(() {
// // // // // // // // // // // // //         currentPresetName = null;
// // // // // // // // // // // // //       });
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // // // // // // // // // // // //     try {
// // // // // // // // // // // // //       final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //       final jsonString = prefs.getString('preset_$presetName');
// // // // // // // // // // // // //       if (jsonString == null) return;
// // // // // // // // // // // // //       final List decoded = jsonDecode(jsonString);
// // // // // // // // // // // // //       players.clear();
// // // // // // // // // // // // //       nameControllers.clear();
// // // // // // // // // // // // //       for (var p in decoded) {
// // // // // // // // // // // // //         final player = Player.fromJson(p);
// // // // // // // // // // // // //         players.add(player);
// // // // // // // // // // // // //         nameControllers.add(TextEditingController(text: player.name));
// // // // // // // // // // // // //       }
// // // // // // // // // // // // //       setState(() {
// // // // // // // // // // // // //         currentPresetName = presetName;
// // // // // // // // // // // // //       });
// // // // // // // // // // // // //       if (!autoLoad) {
// // // // // // // // // // // // //         await prefs.setString('last_used_preset', presetName);
// // // // // // // // // // // // //       }
// // // // // // // // // // // // //     } catch (_) {
// // // // // // // // // // // // //       ScaffoldMessenger.of(
// // // // // // // // // // // // //         context,
// // // // // // // // // // // // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void showSaveDialog() async {
// // // // // // // // // // // // //     final controller = TextEditingController();
// // // // // // // // // // // // //     await showDialog(
// // // // // // // // // // // // //       context: context,
// // // // // // // // // // // // //       builder:
// // // // // // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // // // // // //             title: const Text("설정 이름 저장"),
// // // // // // // // // // // // //             content: TextField(
// // // // // // // // // // // // //               controller: controller,
// // // // // // // // // // // // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             actions: [
// // // // // // // // // // // // //               TextButton(
// // // // // // // // // // // // //                 onPressed: () async {
// // // // // // // // // // // // //                   await saveCurrentSettings(controller.text.trim());
// // // // // // // // // // // // //                   Navigator.of(ctx).pop();
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //                 child: const Text("저장"),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ],
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void showLoadDialog() async {
// // // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // // // //     if (presetNames.isEmpty) {
// // // // // // // // // // // // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // // // // // // // // // // // //       return;
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     await showDialog(
// // // // // // // // // // // // //       context: context,
// // // // // // // // // // // // //       builder:
// // // // // // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // // // // // //             title: const Text("불러올 설정 선택"),
// // // // // // // // // // // // //             content: SingleChildScrollView(
// // // // // // // // // // // // //               child: Column(
// // // // // // // // // // // // //                 mainAxisSize: MainAxisSize.min,
// // // // // // // // // // // // //                 children:
// // // // // // // // // // // // //                     presetNames.map((name) {
// // // // // // // // // // // // //                       return ListTile(
// // // // // // // // // // // // //                         title: Text(name),
// // // // // // // // // // // // //                         trailing: IconButton(
// // // // // // // // // // // // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // // // // // // // // // // // //                           onPressed: () async {
// // // // // // // // // // // // //                             Navigator.of(ctx).pop();
// // // // // // // // // // // // //                             await deletePreset(name);
// // // // // // // // // // // // //                           },
// // // // // // // // // // // // //                         ),
// // // // // // // // // // // // //                         onTap: () async {
// // // // // // // // // // // // //                           Navigator.of(ctx).pop();
// // // // // // // // // // // // //                           await loadPreset(name);
// // // // // // // // // // // // //                         },
// // // // // // // // // // // // //                       );
// // // // // // // // // // // // //                     }).toList(),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void clearAllSettings() async {
// // // // // // // // // // // // //     initializePlayers(2);
// // // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //     await prefs.remove('last_used_preset');
// // // // // // // // // // // // //     setState(() {
// // // // // // // // // // // // //       currentPresetName = null;
// // // // // // // // // // // // //     });
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // // // //     return Scaffold(
// // // // // // // // // // // // //       body: Padding(
// // // // // // // // // // // // //         padding: EdgeInsets.all(24.w),
// // // // // // // // // // // // //         child: Column(
// // // // // // // // // // // // //           crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // // // //           children: [
// // // // // // // // // // // // //             SizedBox(height: 40.h),
// // // // // // // // // // // // //             Row(
// // // // // // // // // // // // //               crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // // // //               children: [
// // // // // // // // // // // // //                 Expanded(
// // // // // // // // // // // // //                   child: Column(
// // // // // // // // // // // // //                     crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // // // //                     children: [
// // // // // // // // // // // // //                       Text(
// // // // // // // // // // // // //                         'TimeSquad',
// // // // // // // // // // // // //                         style: TextStyle(
// // // // // // // // // // // // //                           fontSize: 36.sp,
// // // // // // // // // // // // //                           fontWeight: FontWeight.w800,
// // // // // // // // // // // // //                           letterSpacing: 1.2,
// // // // // // // // // // // // //                           color: Colors.black87,
// // // // // // // // // // // // //                         ),
// // // // // // // // // // // // //                       ),
// // // // // // // // // // // // //                       SizedBox(height: 4.h),
// // // // // // // // // // // // //                       Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// // // // // // // // // // // // //                     ],
// // // // // // // // // // // // //                   ),
// // // // // // // // // // // // //                 ),
// // // // // // // // // // // // //                 Row(
// // // // // // // // // // // // //                   mainAxisSize: MainAxisSize.min,
// // // // // // // // // // // // //                   children: [
// // // // // // // // // // // // //                     IconButton(icon: Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // // // // // // // // // // // //                     IconButton(icon: Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // // // // // // // // // // // //                     IconButton(icon: Icon(FeatherIcons.rotateCcw), onPressed: clearAllSettings),
// // // // // // // // // // // // //                   ],
// // // // // // // // // // // // //                 ),
// // // // // // // // // // // // //               ],
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             SizedBox(height: 24.h),
// // // // // // // // // // // // //             Expanded(
// // // // // // // // // // // // //               child: ReorderableListView.builder(
// // // // // // // // // // // // //                 padding: EdgeInsets.only(bottom: 120.h),
// // // // // // // // // // // // //                 buildDefaultDragHandles: false,
// // // // // // // // // // // // //                 proxyDecorator: (child, index, animation) {
// // // // // // // // // // // // //                   final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // // // // // // // // // // // //                   return ScaleTransition(
// // // // // // // // // // // // //                     scale: scale,
// // // // // // // // // // // // //                     child: Material(
// // // // // // // // // // // // //                       elevation: 0,
// // // // // // // // // // // // //                       shadowColor: Colors.transparent,
// // // // // // // // // // // // //                       color: Colors.transparent,
// // // // // // // // // // // // //                       child: child,
// // // // // // // // // // // // //                     ),
// // // // // // // // // // // // //                   );
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //                 itemCount: players.length,
// // // // // // // // // // // // //                 onReorder: (oldIndex, newIndex) {
// // // // // // // // // // // // //                   setState(() {
// // // // // // // // // // // // //                     if (newIndex > oldIndex) newIndex--;
// // // // // // // // // // // // //                     final player = players.removeAt(oldIndex);
// // // // // // // // // // // // //                     final controller = nameControllers.removeAt(oldIndex);
// // // // // // // // // // // // //                     players.insert(newIndex, player);
// // // // // // // // // // // // //                     nameControllers.insert(newIndex, controller);
// // // // // // // // // // // // //                   });
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //                 itemBuilder: (context, index) {
// // // // // // // // // // // // //                   final player = players[index];
// // // // // // // // // // // // //                   return Dismissible(
// // // // // // // // // // // // //                     key: ValueKey(player),
// // // // // // // // // // // // //                     direction: DismissDirection.startToEnd,
// // // // // // // // // // // // //                     background: Container(
// // // // // // // // // // // // //                       alignment: Alignment.centerLeft,
// // // // // // // // // // // // //                       padding: EdgeInsets.only(left: 20.w),
// // // // // // // // // // // // //                       color: Colors.redAccent,
// // // // // // // // // // // // //                       child: const Icon(Icons.delete, color: Colors.white),
// // // // // // // // // // // // //                     ),
// // // // // // // // // // // // //                     onDismissed: (_) {
// // // // // // // // // // // // //                       setState(() {
// // // // // // // // // // // // //                         players.remove(player);
// // // // // // // // // // // // //                         nameControllers.removeAt(index);
// // // // // // // // // // // // //                       });
// // // // // // // // // // // // //                     },
// // // // // // // // // // // // //                     child: ReorderableDelayedDragStartListener(
// // // // // // // // // // // // //                       key: ValueKey(player),
// // // // // // // // // // // // //                       index: index,
// // // // // // // // // // // // //                       child: Container(
// // // // // // // // // // // // //                         margin: EdgeInsets.only(bottom: 12.h),
// // // // // // // // // // // // //                         padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // // // // // // // // // // // //                         decoration: BoxDecoration(
// // // // // // // // // // // // //                           color: Color.lerp(Colors.white, player.color, 0.2),
// // // // // // // // // // // // //                           borderRadius: BorderRadius.circular(20.r),
// // // // // // // // // // // // //                         ),
// // // // // // // // // // // // //                         child: Row(
// // // // // // // // // // // // //                           children: [
// // // // // // // // // // // // //                             Container(
// // // // // // // // // // // // //                               width: 40.w,
// // // // // // // // // // // // //                               height: 40.w,
// // // // // // // // // // // // //                               alignment: Alignment.center,
// // // // // // // // // // // // //                               decoration: BoxDecoration(
// // // // // // // // // // // // //                                 color: Colors.white,
// // // // // // // // // // // // //                                 borderRadius: BorderRadius.circular(12.r),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                               child: Text(
// // // // // // // // // // // // //                                 '${index + 1}',
// // // // // // // // // // // // //                                 style: TextStyle(fontSize: 18.sp, fontWeight: FontWeight.bold),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                             ),
// // // // // // // // // // // // //                             SizedBox(width: 12.w),
// // // // // // // // // // // // //                             Expanded(
// // // // // // // // // // // // //                               child: Column(
// // // // // // // // // // // // //                                 crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // // // //                                 children: [
// // // // // // // // // // // // //                                   Container(
// // // // // // // // // // // // //                                     decoration: BoxDecoration(
// // // // // // // // // // // // //                                       color: Colors.white.withOpacity(0.6),
// // // // // // // // // // // // //                                       borderRadius: BorderRadius.circular(8.r),
// // // // // // // // // // // // //                                     ),
// // // // // // // // // // // // //                                     padding: EdgeInsets.symmetric(horizontal: 8.w, vertical: 4.h),
// // // // // // // // // // // // //                                     child: TextField(
// // // // // // // // // // // // //                                       controller: nameControllers[index],
// // // // // // // // // // // // //                                       onChanged: (val) => players[index].name = val,
// // // // // // // // // // // // //                                       style: TextStyle(
// // // // // // // // // // // // //                                         fontSize: 16.sp,
// // // // // // // // // // // // //                                         fontWeight: FontWeight.w500,
// // // // // // // // // // // // //                                       ),
// // // // // // // // // // // // //                                       decoration: const InputDecoration.collapsed(
// // // // // // // // // // // // //                                         hintText: 'Enter name',
// // // // // // // // // // // // //                                       ),
// // // // // // // // // // // // //                                     ),
// // // // // // // // // // // // //                                   ),
// // // // // // // // // // // // //                                   SizedBox(height: 8.h),
// // // // // // // // // // // // //                                   GestureDetector(
// // // // // // // // // // // // //                                     onTap: () async {
// // // // // // // // // // // // //                                       Duration selectedDuration = Duration(
// // // // // // // // // // // // //                                         seconds: players[index].originalSeconds,
// // // // // // // // // // // // //                                       );
// // // // // // // // // // // // //                                       await showModalBottomSheet(
// // // // // // // // // // // // //                                         context: context,
// // // // // // // // // // // // //                                         builder:
// // // // // // // // // // // // //                                             (context) => SizedBox(
// // // // // // // // // // // // //                                               height: 200,
// // // // // // // // // // // // //                                               child: CupertinoTimerPicker(
// // // // // // // // // // // // //                                                 mode: CupertinoTimerPickerMode.hms,
// // // // // // // // // // // // //                                                 initialTimerDuration: selectedDuration,
// // // // // // // // // // // // //                                                 onTimerDurationChanged: (Duration newDuration) {
// // // // // // // // // // // // //                                                   setState(() {
// // // // // // // // // // // // //                                                     players[index].seconds = newDuration.inSeconds;
// // // // // // // // // // // // //                                                     players[index].originalSeconds =
// // // // // // // // // // // // //                                                         newDuration.inSeconds;
// // // // // // // // // // // // //                                                   });
// // // // // // // // // // // // //                                                 },
// // // // // // // // // // // // //                                               ),
// // // // // // // // // // // // //                                             ),
// // // // // // // // // // // // //                                       );
// // // // // // // // // // // // //                                     },
// // // // // // // // // // // // //                                     child: Container(
// // // // // // // // // // // // //                                       decoration: BoxDecoration(
// // // // // // // // // // // // //                                         color: Colors.white.withOpacity(0.6),
// // // // // // // // // // // // //                                         borderRadius: BorderRadius.circular(8.r),
// // // // // // // // // // // // //                                       ),
// // // // // // // // // // // // //                                       padding: EdgeInsets.symmetric(
// // // // // // // // // // // // //                                         horizontal: 12.w,
// // // // // // // // // // // // //                                         vertical: 10.h,
// // // // // // // // // // // // //                                       ),
// // // // // // // // // // // // //                                       child: Text(
// // // // // // // // // // // // //                                         'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // // // // // // // // // // // //                                         style: TextStyle(
// // // // // // // // // // // // //                                           fontSize: 16.sp,
// // // // // // // // // // // // //                                           fontWeight: FontWeight.w500,
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                       ),
// // // // // // // // // // // // //                                     ),
// // // // // // // // // // // // //                                   ),
// // // // // // // // // // // // //                                 ],
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                             ),
// // // // // // // // // // // // //                             SizedBox(width: 8.w),
// // // // // // // // // // // // //                             ElevatedButton(
// // // // // // // // // // // // //                               onPressed: () async {
// // // // // // // // // // // // //                                 FocusScope.of(context).unfocus();
// // // // // // // // // // // // //                                 final color = await showDialog<Color>(
// // // // // // // // // // // // //                                   context: context,
// // // // // // // // // // // // //                                   builder:
// // // // // // // // // // // // //                                       (context) => AlertDialog(
// // // // // // // // // // // // //                                         title: const Text('Select Color'),
// // // // // // // // // // // // //                                         content: Wrap(
// // // // // // // // // // // // //                                           spacing: 8.w,
// // // // // // // // // // // // //                                           children:
// // // // // // // // // // // // //                                               Colors.primaries.map((c) {
// // // // // // // // // // // // //                                                 return GestureDetector(
// // // // // // // // // // // // //                                                   onTap: () => Navigator.pop(context, c),
// // // // // // // // // // // // //                                                   child: Container(
// // // // // // // // // // // // //                                                     width: 30.w,
// // // // // // // // // // // // //                                                     height: 30.w,
// // // // // // // // // // // // //                                                     decoration: BoxDecoration(
// // // // // // // // // // // // //                                                       color: c,
// // // // // // // // // // // // //                                                       borderRadius: BorderRadius.circular(15.r),
// // // // // // // // // // // // //                                                     ),
// // // // // // // // // // // // //                                                   ),
// // // // // // // // // // // // //                                                 );
// // // // // // // // // // // // //                                               }).toList(),
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                       ),
// // // // // // // // // // // // //                                 );
// // // // // // // // // // // // //                                 if (color != null) {
// // // // // // // // // // // // //                                   setState(() => players[index].color = color);
// // // // // // // // // // // // //                                 }
// // // // // // // // // // // // //                               },
// // // // // // // // // // // // //                               style: ElevatedButton.styleFrom(
// // // // // // // // // // // // //                                 backgroundColor: player.color,
// // // // // // // // // // // // //                                 foregroundColor: Colors.white,
// // // // // // // // // // // // //                                 shape: RoundedRectangleBorder(
// // // // // // // // // // // // //                                   borderRadius: BorderRadius.circular(12.r),
// // // // // // // // // // // // //                                 ),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                               child: const Text('Color'),
// // // // // // // // // // // // //                             ),
// // // // // // // // // // // // //                           ],
// // // // // // // // // // // // //                         ),
// // // // // // // // // // // // //                       ),
// // // // // // // // // // // // //                     ),
// // // // // // // // // // // // //                   );
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //           ],
// // // // // // // // // // // // //         ),
// // // // // // // // // // // // //       ),
// // // // // // // // // // // // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // // // // // // // // // // // //       floatingActionButton: Padding(
// // // // // // // // // // // // //         padding: EdgeInsets.only(bottom: 16.h),
// // // // // // // // // // // // //         child: Row(
// // // // // // // // // // // // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // // // // // // // // // // // //           children: [
// // // // // // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // // // // // //               heroTag: 'addPlayerBtn',
// // // // // // // // // // // // //               onPressed: addPlayer,
// // // // // // // // // // // // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // // // // // // // // // // // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // // // // // // // // // // // //               backgroundColor: Colors.indigo,
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // // // // // //               heroTag: 'startBtn',
// // // // // // // // // // // // //               onPressed: () {
// // // // // // // // // // // // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // // // // // // // // // // // //                   Navigator.push(
// // // // // // // // // // // // //                     context,
// // // // // // // // // // // // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // // // // // // // // // // // //                   );
// // // // // // // // // // // // //                 } else {
// // // // // // // // // // // // //                   ScaffoldMessenger.of(
// // // // // // // // // // // // //                     context,
// // // // // // // // // // // // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // // // // // // // // // // // //                 }
// // // // // // // // // // // // //               },
// // // // // // // // // // // // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // // // // // // // // // // // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // // // // // // // // // // // //               backgroundColor: Colors.teal,
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //           ],
// // // // // // // // // // // // //         ),
// // // // // // // // // // // // //       ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class TimerScreen extends StatefulWidget {
// // // // // // // // // // // // //   final List<Player> players;
// // // // // // // // // // // // //   const TimerScreen({super.key, required this.players});

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   State<TimerScreen> createState() => _TimerScreenState();
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class _TimerScreenState extends State<TimerScreen> {
// // // // // // // // // // // // //   Timer? _timer;
// // // // // // // // // // // // //   int currentIndex = 0;

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   void initState() {
// // // // // // // // // // // // //     super.initState();
// // // // // // // // // // // // //     startTimer();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void startTimer() {
// // // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // // // // // // // // // // // //       setState(() {
// // // // // // // // // // // // //         final player = widget.players[currentIndex];
// // // // // // // // // // // // //         if (player.seconds > 0) {
// // // // // // // // // // // // //           player.seconds--;
// // // // // // // // // // // // //           player.elapsedSeconds++;
// // // // // // // // // // // // //         } else {
// // // // // // // // // // // // //           player.isCompleted = true;
// // // // // // // // // // // // //           switchToNextPlayer();
// // // // // // // // // // // // //         }
// // // // // // // // // // // // //       });
// // // // // // // // // // // // //     });
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void pauseTimer() {
// // // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void switchToNextPlayer() {
// // // // // // // // // // // // //     pauseTimer();
// // // // // // // // // // // // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // // // // // // // // // // // //       showSummaryDialog();
// // // // // // // // // // // // //       return;
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     do {
// // // // // // // // // // // // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // // // // // // // // // // // //     } while (widget.players[currentIndex].isCompleted);
// // // // // // // // // // // // //     startTimer();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void resetAll() {
// // // // // // // // // // // // //     for (var p in widget.players) {
// // // // // // // // // // // // //       p.seconds = p.originalSeconds;
// // // // // // // // // // // // //       p.elapsedSeconds = 0;
// // // // // // // // // // // // //       p.isCompleted = false;
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     setState(() {
// // // // // // // // // // // // //       currentIndex = 0;
// // // // // // // // // // // // //     });
// // // // // // // // // // // // //     startTimer();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   String formatDuration(int seconds) {
// // // // // // // // // // // // //     final d = Duration(seconds: seconds);
// // // // // // // // // // // // //     final hours = d.inHours.toString().padLeft(2, '0');
// // // // // // // // // // // // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // // // // // // // // // // // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // // // // // // // // // // // //     return '$hours:$minutes:$secs';
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void showSummaryDialog() {
// // // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // // //     showDialog(
// // // // // // // // // // // // //       context: context,
// // // // // // // // // // // // //       builder:
// // // // // // // // // // // // //           (_) => AlertDialog(
// // // // // // // // // // // // //             title: const Text('Round Complete'),
// // // // // // // // // // // // //             content: Column(
// // // // // // // // // // // // //               mainAxisSize: MainAxisSize.min,
// // // // // // // // // // // // //               children:
// // // // // // // // // // // // //                   widget.players.map((p) {
// // // // // // // // // // // // //                     final formatted = formatDuration(p.elapsedSeconds);
// // // // // // // // // // // // //                     return Text('${p.name} ⏱ $formatted');
// // // // // // // // // // // // //                   }).toList(),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             actions: [
// // // // // // // // // // // // //               TextButton(
// // // // // // // // // // // // //                 onPressed: () {
// // // // // // // // // // // // //                   Navigator.of(context).pop();
// // // // // // // // // // // // //                   resetAll();
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //                 child: const Text('Next Round'),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //               TextButton(
// // // // // // // // // // // // //                 onPressed: () {
// // // // // // // // // // // // //                   resetAll();
// // // // // // // // // // // // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //                 child: const Text('Home'),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ],
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // // // //     final player = widget.players[currentIndex];
// // // // // // // // // // // // //     return Scaffold(
// // // // // // // // // // // // //       backgroundColor: player.color,
// // // // // // // // // // // // //       body: GestureDetector(
// // // // // // // // // // // // //         behavior: HitTestBehavior.opaque,
// // // // // // // // // // // // //         onTap: () {
// // // // // // // // // // // // //           setState(() {
// // // // // // // // // // // // //             pauseTimer();
// // // // // // // // // // // // //             switchToNextPlayer();
// // // // // // // // // // // // //           });
// // // // // // // // // // // // //         },
// // // // // // // // // // // // //         child: Stack(
// // // // // // // // // // // // //           children: [
// // // // // // // // // // // // //             Center(
// // // // // // // // // // // // //               child: Column(
// // // // // // // // // // // // //                 mainAxisAlignment: MainAxisAlignment.center,
// // // // // // // // // // // // //                 children: [
// // // // // // // // // // // // //                   Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // // // // // // // // // // // //                   SizedBox(height: 16.h),
// // // // // // // // // // // // //                   Text(
// // // // // // // // // // // // //                     formatDuration(player.seconds),
// // // // // // // // // // // // //                     style: TextStyle(
// // // // // // // // // // // // //                       fontSize: 64.sp,
// // // // // // // // // // // // //                       fontWeight: FontWeight.bold,
// // // // // // // // // // // // //                       color: Colors.white,
// // // // // // // // // // // // //                     ),
// // // // // // // // // // // // //                   ),
// // // // // // // // // // // // //                   SizedBox(height: 24.h),
// // // // // // // // // // // // //                   ElevatedButton(
// // // // // // // // // // // // //                     onPressed: () {
// // // // // // // // // // // // //                       setState(() {
// // // // // // // // // // // // //                         widget.players[currentIndex].isCompleted = true;
// // // // // // // // // // // // //                         pauseTimer();
// // // // // // // // // // // // //                         switchToNextPlayer();
// // // // // // // // // // // // //                       });
// // // // // // // // // // // // //                     },
// // // // // // // // // // // // //                     child: const Text('Complete'),
// // // // // // // // // // // // //                   ),
// // // // // // // // // // // // //                   SizedBox(height: 12.h),
// // // // // // // // // // // // //                   ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // // // // // // // // // // // //                 ],
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             Positioned(
// // // // // // // // // // // // //               top: 40.h,
// // // // // // // // // // // // //               right: 20.w,
// // // // // // // // // // // // //               child: IconButton(
// // // // // // // // // // // // //                 icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // // // // // // // // // // // //                 onPressed: () {
// // // // // // // // // // // // //                   pauseTimer();
// // // // // // // // // // // // //                   showDialog(
// // // // // // // // // // // // //                     context: context,
// // // // // // // // // // // // //                     builder:
// // // // // // // // // // // // //                         (context) => AlertDialog(
// // // // // // // // // // // // //                           title: const Text('홈으로 이동'),
// // // // // // // // // // // // //                           content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // // // // // // // // // // // //                           actions: [
// // // // // // // // // // // // //                             TextButton(
// // // // // // // // // // // // //                               onPressed: () {
// // // // // // // // // // // // //                                 Navigator.of(context).pop();
// // // // // // // // // // // // //                                 Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // // // //                               },
// // // // // // // // // // // // //                               child: const Text('설정 유지'),
// // // // // // // // // // // // //                             ),
// // // // // // // // // // // // //                             TextButton(
// // // // // // // // // // // // //                               onPressed: () {
// // // // // // // // // // // // //                                 resetAll();
// // // // // // // // // // // // //                                 Navigator.of(context).pop();
// // // // // // // // // // // // //                                 Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // // // //                               },
// // // // // // // // // // // // //                               child: const Text('초기화 후 이동'),
// // // // // // // // // // // // //                             ),
// // // // // // // // // // // // //                             TextButton(
// // // // // // // // // // // // //                               onPressed: () => Navigator.of(context).pop(),
// // // // // // // // // // // // //                               child: const Text('취소'),
// // // // // // // // // // // // //                             ),
// // // // // // // // // // // // //                           ],
// // // // // // // // // // // // //                         ),
// // // // // // // // // // // // //                   );
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //           ],
// // // // // // // // // // // // //         ),
// // // // // // // // // // // // //       ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }
// // // // // // // // // // // // // }

// // // // // // // // // // // // // SafeArea 적용
// // // // // // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // // // // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // // // // // // // // // // // import 'package:flutter/cupertino.dart';
// // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // import 'dart:convert';
// // // // // // // // // // // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // // // // // // // // // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // // // // // // // // // // // void main() async {
// // // // // // // // // // // // //   WidgetsFlutterBinding.ensureInitialized();
// // // // // // // // // // // // //   final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //   final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // // // // // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class MyApp extends StatelessWidget {
// // // // // // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // // // // // //   const MyApp({super.key, this.lastUsedPreset});

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // // // //     return ScreenUtilInit(
// // // // // // // // // // // // //       designSize: const Size(390, 844),
// // // // // // // // // // // // //       builder:
// // // // // // // // // // // // //           (context, child) => MaterialApp(
// // // // // // // // // // // // //             debugShowCheckedModeBanner: false,
// // // // // // // // // // // // //             title: 'Multi Player Timer',
// // // // // // // // // // // // //             theme: ThemeData(
// // // // // // // // // // // // //               scaffoldBackgroundColor: Colors.white,
// // // // // // // // // // // // //               fontFamily: 'Roboto',
// // // // // // // // // // // // //               textTheme: TextTheme(
// // // // // // // // // // // // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // // // // // // // // // // // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // // // // // // // // // // // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // // // // // // // // // // // //                 style: ElevatedButton.styleFrom(
// // // // // // // // // // // // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // // // // // // // // // // // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // // // // // // // // // // // //                 ),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class Player {
// // // // // // // // // // // // //   String name;
// // // // // // // // // // // // //   int seconds;
// // // // // // // // // // // // //   int originalSeconds;
// // // // // // // // // // // // //   Color color;
// // // // // // // // // // // // //   bool isCompleted;
// // // // // // // // // // // // //   int elapsedSeconds = 0;

// // // // // // // // // // // // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // // // // // // // // // // // //     : originalSeconds = seconds;

// // // // // // // // // // // // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // // // // // // // // // // // //   static Player fromJson(Map<String, dynamic> json) =>
// // // // // // // // // // // // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class PlayerSetupScreen extends StatefulWidget {
// // // // // // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // // // // // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // // // // // // // // // // // //   final List<Player> players = [];
// // // // // // // // // // // // //   final List<TextEditingController> nameControllers = [];
// // // // // // // // // // // // //   String? currentPresetName;

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   void initState() {
// // // // // // // // // // // // //     super.initState();
// // // // // // // // // // // // //     if (widget.lastUsedPreset != null) {
// // // // // // // // // // // // //       currentPresetName = widget.lastUsedPreset;
// // // // // // // // // // // // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // // // // // // // // // // // //     } else {
// // // // // // // // // // // // //       initializePlayers(2);
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void initializePlayers(int count) {
// // // // // // // // // // // // //     players.clear();
// // // // // // // // // // // // //     nameControllers.clear();
// // // // // // // // // // // // //     for (int i = 0; i < count; i++) {
// // // // // // // // // // // // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // // // // // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     setState(() {});
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void addPlayer() {
// // // // // // // // // // // // //     final newIndex = players.length;
// // // // // // // // // // // // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // // // // // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // // // // // // // // // // // //     setState(() {});
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void removePlayer(int index) {
// // // // // // // // // // // // //     players.removeAt(index);
// // // // // // // // // // // // //     nameControllers.removeAt(index);
// // // // // // // // // // // // //     setState(() {});
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> saveCurrentSettings(String presetName) async {
// // // // // // // // // // // // //     if (presetName.isEmpty) return;
// // // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //     final encoded = players.map((p) => p.toJson()).toList();
// // // // // // // // // // // // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // // // // // // // // // // // //     await prefs.setString('last_used_preset', presetName);
// // // // // // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // // // //     if (!names.contains(presetName)) {
// // // // // // // // // // // // //       names.add(presetName);
// // // // // // // // // // // // //       await prefs.setStringList('preset_names', names);
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     setState(() {
// // // // // // // // // // // // //       currentPresetName = presetName;
// // // // // // // // // // // // //     });
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> deletePreset(String presetName) async {
// // // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //     await prefs.remove('preset_$presetName');
// // // // // // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // // // //     names.remove(presetName);
// // // // // // // // // // // // //     await prefs.setStringList('preset_names', names);
// // // // // // // // // // // // //     final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // // // // // //     if (lastUsed == presetName) {
// // // // // // // // // // // // //       await prefs.remove('last_used_preset');
// // // // // // // // // // // // //       setState(() {
// // // // // // // // // // // // //         currentPresetName = null;
// // // // // // // // // // // // //       });
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // // // // // // // // // // // //     try {
// // // // // // // // // // // // //       final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //       final jsonString = prefs.getString('preset_$presetName');
// // // // // // // // // // // // //       if (jsonString == null) return;
// // // // // // // // // // // // //       final List decoded = jsonDecode(jsonString);
// // // // // // // // // // // // //       players.clear();
// // // // // // // // // // // // //       nameControllers.clear();
// // // // // // // // // // // // //       for (var p in decoded) {
// // // // // // // // // // // // //         final player = Player.fromJson(p);
// // // // // // // // // // // // //         players.add(player);
// // // // // // // // // // // // //         nameControllers.add(TextEditingController(text: player.name));
// // // // // // // // // // // // //       }
// // // // // // // // // // // // //       setState(() {
// // // // // // // // // // // // //         currentPresetName = presetName;
// // // // // // // // // // // // //       });
// // // // // // // // // // // // //       if (!autoLoad) {
// // // // // // // // // // // // //         await prefs.setString('last_used_preset', presetName);
// // // // // // // // // // // // //       }
// // // // // // // // // // // // //     } catch (_) {
// // // // // // // // // // // // //       ScaffoldMessenger.of(
// // // // // // // // // // // // //         context,
// // // // // // // // // // // // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void showSaveDialog() async {
// // // // // // // // // // // // //     final controller = TextEditingController();
// // // // // // // // // // // // //     await showDialog(
// // // // // // // // // // // // //       context: context,
// // // // // // // // // // // // //       builder:
// // // // // // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // // // // // //             title: const Text("설정 이름 저장"),
// // // // // // // // // // // // //             content: TextField(
// // // // // // // // // // // // //               controller: controller,
// // // // // // // // // // // // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             actions: [
// // // // // // // // // // // // //               TextButton(
// // // // // // // // // // // // //                 onPressed: () async {
// // // // // // // // // // // // //                   await saveCurrentSettings(controller.text.trim());
// // // // // // // // // // // // //                   Navigator.of(ctx).pop();
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //                 child: const Text("저장"),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ],
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void showLoadDialog() async {
// // // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // // // //     if (presetNames.isEmpty) {
// // // // // // // // // // // // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // // // // // // // // // // // //       return;
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     await showDialog(
// // // // // // // // // // // // //       context: context,
// // // // // // // // // // // // //       builder:
// // // // // // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // // // // // //             title: const Text("불러올 설정 선택"),
// // // // // // // // // // // // //             content: SingleChildScrollView(
// // // // // // // // // // // // //               child: Column(
// // // // // // // // // // // // //                 mainAxisSize: MainAxisSize.min,
// // // // // // // // // // // // //                 children:
// // // // // // // // // // // // //                     presetNames.map((name) {
// // // // // // // // // // // // //                       return ListTile(
// // // // // // // // // // // // //                         title: Text(name),
// // // // // // // // // // // // //                         trailing: IconButton(
// // // // // // // // // // // // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // // // // // // // // // // // //                           onPressed: () async {
// // // // // // // // // // // // //                             Navigator.of(ctx).pop();
// // // // // // // // // // // // //                             await deletePreset(name);
// // // // // // // // // // // // //                           },
// // // // // // // // // // // // //                         ),
// // // // // // // // // // // // //                         onTap: () async {
// // // // // // // // // // // // //                           Navigator.of(ctx).pop();
// // // // // // // // // // // // //                           await loadPreset(name);
// // // // // // // // // // // // //                         },
// // // // // // // // // // // // //                       );
// // // // // // // // // // // // //                     }).toList(),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void clearAllSettings() async {
// // // // // // // // // // // // //     initializePlayers(2);
// // // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //     await prefs.remove('last_used_preset');
// // // // // // // // // // // // //     setState(() {
// // // // // // // // // // // // //       currentPresetName = null;
// // // // // // // // // // // // //     });
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // // // //     return Scaffold(
// // // // // // // // // // // // //       body: SafeArea(
// // // // // // // // // // // // //         // Apply SafeArea here
// // // // // // // // // // // // //         child: Padding(
// // // // // // // // // // // // //           padding: EdgeInsets.all(24.w),
// // // // // // // // // // // // //           child: Column(
// // // // // // // // // // // // //             crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // // // //             children: [
// // // // // // // // // // // // //               SizedBox(height: 40.h),
// // // // // // // // // // // // //               Row(
// // // // // // // // // // // // //                 crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // // // //                 children: [
// // // // // // // // // // // // //                   Expanded(
// // // // // // // // // // // // //                     child: Column(
// // // // // // // // // // // // //                       crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // // // //                       children: [
// // // // // // // // // // // // //                         Text(
// // // // // // // // // // // // //                           'TimeSquad',
// // // // // // // // // // // // //                           style: TextStyle(
// // // // // // // // // // // // //                             fontSize: 36.sp,
// // // // // // // // // // // // //                             fontWeight: FontWeight.w800,
// // // // // // // // // // // // //                             letterSpacing: 1.2,
// // // // // // // // // // // // //                             color: Colors.black87,
// // // // // // // // // // // // //                           ),
// // // // // // // // // // // // //                         ),
// // // // // // // // // // // // //                         SizedBox(height: 4.h),
// // // // // // // // // // // // //                         Text(
// // // // // // // // // // // // //                           'Settings',
// // // // // // // // // // // // //                           style: TextStyle(fontSize: 18.sp, color: Colors.grey[700]),
// // // // // // // // // // // // //                         ),
// // // // // // // // // // // // //                       ],
// // // // // // // // // // // // //                     ),
// // // // // // // // // // // // //                   ),
// // // // // // // // // // // // //                   Row(
// // // // // // // // // // // // //                     mainAxisSize: MainAxisSize.min,
// // // // // // // // // // // // //                     children: [
// // // // // // // // // // // // //                       IconButton(icon: Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // // // // // // // // // // // //                       IconButton(icon: Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // // // // // // // // // // // //                       IconButton(icon: Icon(FeatherIcons.rotateCcw), onPressed: clearAllSettings),
// // // // // // // // // // // // //                     ],
// // // // // // // // // // // // //                   ),
// // // // // // // // // // // // //                 ],
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //               SizedBox(height: 24.h),
// // // // // // // // // // // // //               Expanded(
// // // // // // // // // // // // //                 child: ReorderableListView.builder(
// // // // // // // // // // // // //                   padding: EdgeInsets.only(bottom: 120.h),
// // // // // // // // // // // // //                   buildDefaultDragHandles: false,
// // // // // // // // // // // // //                   proxyDecorator: (child, index, animation) {
// // // // // // // // // // // // //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // // // // // // // // // // // //                     return ScaleTransition(
// // // // // // // // // // // // //                       scale: scale,
// // // // // // // // // // // // //                       child: Material(
// // // // // // // // // // // // //                         elevation: 0,
// // // // // // // // // // // // //                         shadowColor: Colors.transparent,
// // // // // // // // // // // // //                         color: Colors.transparent,
// // // // // // // // // // // // //                         child: child,
// // // // // // // // // // // // //                       ),
// // // // // // // // // // // // //                     );
// // // // // // // // // // // // //                   },
// // // // // // // // // // // // //                   itemCount: players.length,
// // // // // // // // // // // // //                   onReorder: (oldIndex, newIndex) {
// // // // // // // // // // // // //                     setState(() {
// // // // // // // // // // // // //                       if (newIndex > oldIndex) newIndex--;
// // // // // // // // // // // // //                       final player = players.removeAt(oldIndex);
// // // // // // // // // // // // //                       final controller = nameControllers.removeAt(oldIndex);
// // // // // // // // // // // // //                       players.insert(newIndex, player);
// // // // // // // // // // // // //                       nameControllers.insert(newIndex, controller);
// // // // // // // // // // // // //                     });
// // // // // // // // // // // // //                   },
// // // // // // // // // // // // //                   itemBuilder: (context, index) {
// // // // // // // // // // // // //                     final player = players[index];
// // // // // // // // // // // // //                     return Dismissible(
// // // // // // // // // // // // //                       key: ValueKey(player),
// // // // // // // // // // // // //                       direction: DismissDirection.startToEnd,
// // // // // // // // // // // // //                       background: Container(
// // // // // // // // // // // // //                         alignment: Alignment.centerLeft,
// // // // // // // // // // // // //                         padding: EdgeInsets.only(left: 20.w),
// // // // // // // // // // // // //                         color: Colors.redAccent,
// // // // // // // // // // // // //                         child: const Icon(Icons.delete, color: Colors.white),
// // // // // // // // // // // // //                       ),
// // // // // // // // // // // // //                       onDismissed: (_) {
// // // // // // // // // // // // //                         setState(() {
// // // // // // // // // // // // //                           players.remove(player);
// // // // // // // // // // // // //                           nameControllers.removeAt(index);
// // // // // // // // // // // // //                         });
// // // // // // // // // // // // //                       },
// // // // // // // // // // // // //                       child: ReorderableDelayedDragStartListener(
// // // // // // // // // // // // //                         key: ValueKey(player),
// // // // // // // // // // // // //                         index: index,
// // // // // // // // // // // // //                         child: Container(
// // // // // // // // // // // // //                           margin: EdgeInsets.only(bottom: 12.h),
// // // // // // // // // // // // //                           padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // // // // // // // // // // // //                           decoration: BoxDecoration(
// // // // // // // // // // // // //                             color: Color.lerp(Colors.white, player.color, 0.2),
// // // // // // // // // // // // //                             borderRadius: BorderRadius.circular(20.r),
// // // // // // // // // // // // //                           ),
// // // // // // // // // // // // //                           child: Row(
// // // // // // // // // // // // //                             children: [
// // // // // // // // // // // // //                               Container(
// // // // // // // // // // // // //                                 width: 40.w,
// // // // // // // // // // // // //                                 height: 40.w,
// // // // // // // // // // // // //                                 alignment: Alignment.center,
// // // // // // // // // // // // //                                 decoration: BoxDecoration(
// // // // // // // // // // // // //                                   color: Colors.white,
// // // // // // // // // // // // //                                   borderRadius: BorderRadius.circular(12.r),
// // // // // // // // // // // // //                                 ),
// // // // // // // // // // // // //                                 child: Text(
// // // // // // // // // // // // //                                   '${index + 1}',
// // // // // // // // // // // // //                                   style: TextStyle(fontSize: 18.sp, fontWeight: FontWeight.bold),
// // // // // // // // // // // // //                                 ),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                               SizedBox(width: 12.w),
// // // // // // // // // // // // //                               Expanded(
// // // // // // // // // // // // //                                 child: Column(
// // // // // // // // // // // // //                                   crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // // // //                                   children: [
// // // // // // // // // // // // //                                     Container(
// // // // // // // // // // // // //                                       decoration: BoxDecoration(
// // // // // // // // // // // // //                                         color: Colors.white.withOpacity(0.6),
// // // // // // // // // // // // //                                         borderRadius: BorderRadius.circular(8.r),
// // // // // // // // // // // // //                                       ),
// // // // // // // // // // // // //                                       padding: EdgeInsets.symmetric(horizontal: 8.w, vertical: 4.h),
// // // // // // // // // // // // //                                       child: TextField(
// // // // // // // // // // // // //                                         controller: nameControllers[index],
// // // // // // // // // // // // //                                         onChanged: (val) => players[index].name = val,
// // // // // // // // // // // // //                                         style: TextStyle(
// // // // // // // // // // // // //                                           fontSize: 16.sp,
// // // // // // // // // // // // //                                           fontWeight: FontWeight.w500,
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                         decoration: const InputDecoration.collapsed(
// // // // // // // // // // // // //                                           hintText: 'Enter name',
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                       ),
// // // // // // // // // // // // //                                     ),
// // // // // // // // // // // // //                                     SizedBox(height: 8.h),
// // // // // // // // // // // // //                                     GestureDetector(
// // // // // // // // // // // // //                                       onTap: () async {
// // // // // // // // // // // // //                                         Duration selectedDuration = Duration(
// // // // // // // // // // // // //                                           seconds: players[index].originalSeconds,
// // // // // // // // // // // // //                                         );
// // // // // // // // // // // // //                                         await showModalBottomSheet(
// // // // // // // // // // // // //                                           context: context,
// // // // // // // // // // // // //                                           builder:
// // // // // // // // // // // // //                                               (context) => SizedBox(
// // // // // // // // // // // // //                                                 height: 200,
// // // // // // // // // // // // //                                                 child: CupertinoTimerPicker(
// // // // // // // // // // // // //                                                   mode: CupertinoTimerPickerMode.hms,
// // // // // // // // // // // // //                                                   initialTimerDuration: selectedDuration,
// // // // // // // // // // // // //                                                   onTimerDurationChanged: (Duration newDuration) {
// // // // // // // // // // // // //                                                     setState(() {
// // // // // // // // // // // // //                                                       players[index].seconds =
// // // // // // // // // // // // //                                                           newDuration.inSeconds;
// // // // // // // // // // // // //                                                       players[index].originalSeconds =
// // // // // // // // // // // // //                                                           newDuration.inSeconds;
// // // // // // // // // // // // //                                                     });
// // // // // // // // // // // // //                                                   },
// // // // // // // // // // // // //                                                 ),
// // // // // // // // // // // // //                                               ),
// // // // // // // // // // // // //                                         );
// // // // // // // // // // // // //                                       },
// // // // // // // // // // // // //                                       child: Container(
// // // // // // // // // // // // //                                         decoration: BoxDecoration(
// // // // // // // // // // // // //                                           color: Colors.white.withOpacity(0.6),
// // // // // // // // // // // // //                                           borderRadius: BorderRadius.circular(8.r),
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                         padding: EdgeInsets.symmetric(
// // // // // // // // // // // // //                                           horizontal: 12.w,
// // // // // // // // // // // // //                                           vertical: 10.h,
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                         child: Text(
// // // // // // // // // // // // //                                           'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // // // // // // // // // // // //                                           style: TextStyle(
// // // // // // // // // // // // //                                             fontSize: 16.sp,
// // // // // // // // // // // // //                                             fontWeight: FontWeight.w500,
// // // // // // // // // // // // //                                           ),
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                       ),
// // // // // // // // // // // // //                                     ),
// // // // // // // // // // // // //                                   ],
// // // // // // // // // // // // //                                 ),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                               SizedBox(width: 8.w),
// // // // // // // // // // // // //                               ElevatedButton(
// // // // // // // // // // // // //                                 onPressed: () async {
// // // // // // // // // // // // //                                   FocusScope.of(context).unfocus();
// // // // // // // // // // // // //                                   final color = await showDialog<Color>(
// // // // // // // // // // // // //                                     context: context,
// // // // // // // // // // // // //                                     builder:
// // // // // // // // // // // // //                                         (context) => AlertDialog(
// // // // // // // // // // // // //                                           title: const Text('Select Color'),
// // // // // // // // // // // // //                                           content: Wrap(
// // // // // // // // // // // // //                                             spacing: 8.w,
// // // // // // // // // // // // //                                             children:
// // // // // // // // // // // // //                                                 Colors.primaries.map((c) {
// // // // // // // // // // // // //                                                   return GestureDetector(
// // // // // // // // // // // // //                                                     onTap: () => Navigator.pop(context, c),
// // // // // // // // // // // // //                                                     child: Container(
// // // // // // // // // // // // //                                                       width: 30.w,
// // // // // // // // // // // // //                                                       height: 30.w,
// // // // // // // // // // // // //                                                       decoration: BoxDecoration(
// // // // // // // // // // // // //                                                         color: c,
// // // // // // // // // // // // //                                                         borderRadius: BorderRadius.circular(15.r),
// // // // // // // // // // // // //                                                       ),
// // // // // // // // // // // // //                                                     ),
// // // // // // // // // // // // //                                                   );
// // // // // // // // // // // // //                                                 }).toList(),
// // // // // // // // // // // // //                                           ),
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                   );
// // // // // // // // // // // // //                                   if (color != null) {
// // // // // // // // // // // // //                                     setState(() => players[index].color = color);
// // // // // // // // // // // // //                                   }
// // // // // // // // // // // // //                                 },
// // // // // // // // // // // // //                                 style: ElevatedButton.styleFrom(
// // // // // // // // // // // // //                                   backgroundColor: player.color,
// // // // // // // // // // // // //                                   foregroundColor: Colors.white,
// // // // // // // // // // // // //                                   shape: RoundedRectangleBorder(
// // // // // // // // // // // // //                                     borderRadius: BorderRadius.circular(12.r),
// // // // // // // // // // // // //                                   ),
// // // // // // // // // // // // //                                 ),
// // // // // // // // // // // // //                                 child: const Text('Color'),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                             ],
// // // // // // // // // // // // //                           ),
// // // // // // // // // // // // //                         ),
// // // // // // // // // // // // //                       ),
// // // // // // // // // // // // //                     );
// // // // // // // // // // // // //                   },
// // // // // // // // // // // // //                 ),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ],
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //         ),
// // // // // // // // // // // // //       ),
// // // // // // // // // // // // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // // // // // // // // // // // //       floatingActionButton: Padding(
// // // // // // // // // // // // //         padding: EdgeInsets.only(bottom: 16.h),
// // // // // // // // // // // // //         child: Row(
// // // // // // // // // // // // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // // // // // // // // // // // //           children: [
// // // // // // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // // // // // //               heroTag: 'addPlayerBtn',
// // // // // // // // // // // // //               onPressed: addPlayer,
// // // // // // // // // // // // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // // // // // // // // // // // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // // // // // // // // // // // //               backgroundColor: Colors.indigo,
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // // // // // //               heroTag: 'startBtn',
// // // // // // // // // // // // //               onPressed: () {
// // // // // // // // // // // // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // // // // // // // // // // // //                   Navigator.push(
// // // // // // // // // // // // //                     context,
// // // // // // // // // // // // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // // // // // // // // // // // //                   );
// // // // // // // // // // // // //                 } else {
// // // // // // // // // // // // //                   ScaffoldMessenger.of(
// // // // // // // // // // // // //                     context,
// // // // // // // // // // // // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // // // // // // // // // // // //                 }
// // // // // // // // // // // // //               },
// // // // // // // // // // // // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // // // // // // // // // // // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // // // // // // // // // // // //               backgroundColor: Colors.teal,
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //           ],
// // // // // // // // // // // // //         ),
// // // // // // // // // // // // //       ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class TimerScreen extends StatefulWidget {
// // // // // // // // // // // // //   final List<Player> players;
// // // // // // // // // // // // //   const TimerScreen({super.key, required this.players});

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   State<TimerScreen> createState() => _TimerScreenState();
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class _TimerScreenState extends State<TimerScreen> {
// // // // // // // // // // // // //   Timer? _timer;
// // // // // // // // // // // // //   int currentIndex = 0;

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   void initState() {
// // // // // // // // // // // // //     super.initState();
// // // // // // // // // // // // //     startTimer();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void startTimer() {
// // // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // // // // // // // // // // // //       setState(() {
// // // // // // // // // // // // //         final player = widget.players[currentIndex];
// // // // // // // // // // // // //         if (player.seconds > 0) {
// // // // // // // // // // // // //           player.seconds--;
// // // // // // // // // // // // //           player.elapsedSeconds++;
// // // // // // // // // // // // //         } else {
// // // // // // // // // // // // //           player.isCompleted = true;
// // // // // // // // // // // // //           switchToNextPlayer();
// // // // // // // // // // // // //         }
// // // // // // // // // // // // //       });
// // // // // // // // // // // // //     });
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void pauseTimer() {
// // // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void switchToNextPlayer() {
// // // // // // // // // // // // //     pauseTimer();
// // // // // // // // // // // // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // // // // // // // // // // // //       showSummaryDialog();
// // // // // // // // // // // // //       return;
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     do {
// // // // // // // // // // // // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // // // // // // // // // // // //     } while (widget.players[currentIndex].isCompleted);
// // // // // // // // // // // // //     startTimer();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void resetAll() {
// // // // // // // // // // // // //     for (var p in widget.players) {
// // // // // // // // // // // // //       p.seconds = p.originalSeconds;
// // // // // // // // // // // // //       p.elapsedSeconds = 0;
// // // // // // // // // // // // //       p.isCompleted = false;
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     setState(() {
// // // // // // // // // // // // //       currentIndex = 0;
// // // // // // // // // // // // //     });
// // // // // // // // // // // // //     startTimer();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   String formatDuration(int seconds) {
// // // // // // // // // // // // //     final d = Duration(seconds: seconds);
// // // // // // // // // // // // //     final hours = d.inHours.toString().padLeft(2, '0');
// // // // // // // // // // // // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // // // // // // // // // // // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // // // // // // // // // // // //     return '$hours:$minutes:$secs';
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void showSummaryDialog() {
// // // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // // //     showDialog(
// // // // // // // // // // // // //       context: context,
// // // // // // // // // // // // //       builder:
// // // // // // // // // // // // //           (_) => AlertDialog(
// // // // // // // // // // // // //             title: const Text('Round Complete'),
// // // // // // // // // // // // //             content: Column(
// // // // // // // // // // // // //               mainAxisSize: MainAxisSize.min,
// // // // // // // // // // // // //               children:
// // // // // // // // // // // // //                   widget.players.map((p) {
// // // // // // // // // // // // //                     final formatted = formatDuration(p.elapsedSeconds);
// // // // // // // // // // // // //                     return Text('${p.name} ⏱ $formatted');
// // // // // // // // // // // // //                   }).toList(),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             actions: [
// // // // // // // // // // // // //               TextButton(
// // // // // // // // // // // // //                 onPressed: () {
// // // // // // // // // // // // //                   Navigator.of(context).pop();
// // // // // // // // // // // // //                   resetAll();
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //                 child: const Text('Next Round'),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //               TextButton(
// // // // // // // // // // // // //                 onPressed: () {
// // // // // // // // // // // // //                   resetAll();
// // // // // // // // // // // // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //                 child: const Text('Home'),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ],
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // // // //     final player = widget.players[currentIndex];
// // // // // // // // // // // // //     return Scaffold(
// // // // // // // // // // // // //       backgroundColor: player.color,
// // // // // // // // // // // // //       body: SafeArea(
// // // // // // // // // // // // //         // Apply SafeArea here
// // // // // // // // // // // // //         child: GestureDetector(
// // // // // // // // // // // // //           behavior: HitTestBehavior.opaque,
// // // // // // // // // // // // //           onTap: () {
// // // // // // // // // // // // //             setState(() {
// // // // // // // // // // // // //               pauseTimer();
// // // // // // // // // // // // //               switchToNextPlayer();
// // // // // // // // // // // // //             });
// // // // // // // // // // // // //           },
// // // // // // // // // // // // //           child: Stack(
// // // // // // // // // // // // //             children: [
// // // // // // // // // // // // //               Center(
// // // // // // // // // // // // //                 child: Column(
// // // // // // // // // // // // //                   mainAxisAlignment: MainAxisAlignment.center,
// // // // // // // // // // // // //                   children: [
// // // // // // // // // // // // //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // // // // // // // // // // // //                     SizedBox(height: 16.h),
// // // // // // // // // // // // //                     Text(
// // // // // // // // // // // // //                       formatDuration(player.seconds),
// // // // // // // // // // // // //                       style: TextStyle(
// // // // // // // // // // // // //                         fontSize: 64.sp,
// // // // // // // // // // // // //                         fontWeight: FontWeight.bold,
// // // // // // // // // // // // //                         color: Colors.white,
// // // // // // // // // // // // //                       ),
// // // // // // // // // // // // //                     ),
// // // // // // // // // // // // //                     SizedBox(height: 24.h),
// // // // // // // // // // // // //                     ElevatedButton(
// // // // // // // // // // // // //                       onPressed: () {
// // // // // // // // // // // // //                         setState(() {
// // // // // // // // // // // // //                           widget.players[currentIndex].isCompleted = true;
// // // // // // // // // // // // //                           pauseTimer();
// // // // // // // // // // // // //                           switchToNextPlayer();
// // // // // // // // // // // // //                         });
// // // // // // // // // // // // //                       },
// // // // // // // // // // // // //                       child: const Text('Complete'),
// // // // // // // // // // // // //                     ),
// // // // // // // // // // // // //                     SizedBox(height: 12.h),
// // // // // // // // // // // // //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // // // // // // // // // // // //                   ],
// // // // // // // // // // // // //                 ),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //               Positioned(
// // // // // // // // // // // // //                 top: 20.h, // Adjusted top padding
// // // // // // // // // // // // //                 right: 20.w,
// // // // // // // // // // // // //                 child: IconButton(
// // // // // // // // // // // // //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // // // // // // // // // // // //                   onPressed: () {
// // // // // // // // // // // // //                     pauseTimer();
// // // // // // // // // // // // //                     showDialog(
// // // // // // // // // // // // //                       context: context,
// // // // // // // // // // // // //                       builder:
// // // // // // // // // // // // //                           (context) => AlertDialog(
// // // // // // // // // // // // //                             title: const Text('홈으로 이동'),
// // // // // // // // // // // // //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // // // // // // // // // // // //                             actions: [
// // // // // // // // // // // // //                               TextButton(
// // // // // // // // // // // // //                                 onPressed: () {
// // // // // // // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // // // //                                 },
// // // // // // // // // // // // //                                 child: const Text('설정 유지'),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                               TextButton(
// // // // // // // // // // // // //                                 onPressed: () {
// // // // // // // // // // // // //                                   resetAll();
// // // // // // // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // // // //                                 },
// // // // // // // // // // // // //                                 child: const Text('초기화 후 이동'),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                               TextButton(
// // // // // // // // // // // // //                                 onPressed: () => Navigator.of(context).pop(),
// // // // // // // // // // // // //                                 child: const Text('취소'),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                             ],
// // // // // // // // // // // // //                           ),
// // // // // // // // // // // // //                     );
// // // // // // // // // // // // //                   },
// // // // // // // // // // // // //                 ),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ],
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //         ),
// // // // // // // // // // // // //       ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }
// // // // // // // // // // // // // }
// // // // // // // // // // // // // // SafeArea+아이콘 Layer 변경
// // // // // // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // // // // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // // // // // // // // // // // import 'package:flutter/cupertino.dart';
// // // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // // import 'dart:convert';
// // // // // // // // // // // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // // // // // // // // // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // // // // // // // // // // // void main() async {
// // // // // // // // // // // // //   WidgetsFlutterBinding.ensureInitialized();
// // // // // // // // // // // // //   final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //   final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // // // // // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class MyApp extends StatelessWidget {
// // // // // // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // // // // // //   const MyApp({super.key, this.lastUsedPreset});

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // // // //     return ScreenUtilInit(
// // // // // // // // // // // // //       designSize: const Size(390, 844),
// // // // // // // // // // // // //       builder:
// // // // // // // // // // // // //           (context, child) => MaterialApp(
// // // // // // // // // // // // //             debugShowCheckedModeBanner: false,
// // // // // // // // // // // // //             title: 'Multi Player Timer',
// // // // // // // // // // // // //             theme: ThemeData(
// // // // // // // // // // // // //               scaffoldBackgroundColor: Colors.white,
// // // // // // // // // // // // //               fontFamily: 'Roboto',
// // // // // // // // // // // // //               textTheme: TextTheme(
// // // // // // // // // // // // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // // // // // // // // // // // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // // // // // // // // // // // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // // // // // // // // // // // //                 style: ElevatedButton.styleFrom(
// // // // // // // // // // // // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // // // // // // // // // // // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // // // // // // // // // // // //                 ),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class Player {
// // // // // // // // // // // // //   String name;
// // // // // // // // // // // // //   int seconds;
// // // // // // // // // // // // //   int originalSeconds;
// // // // // // // // // // // // //   Color color;
// // // // // // // // // // // // //   bool isCompleted;
// // // // // // // // // // // // //   int elapsedSeconds = 0;

// // // // // // // // // // // // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // // // // // // // // // // // //     : originalSeconds = seconds;

// // // // // // // // // // // // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // // // // // // // // // // // //   static Player fromJson(Map<String, dynamic> json) =>
// // // // // // // // // // // // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class PlayerSetupScreen extends StatefulWidget {
// // // // // // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // // // // // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // // // // // // // // // // // //   final List<Player> players = [];
// // // // // // // // // // // // //   final List<TextEditingController> nameControllers = [];
// // // // // // // // // // // // //   String? currentPresetName;

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   void initState() {
// // // // // // // // // // // // //     super.initState();
// // // // // // // // // // // // //     if (widget.lastUsedPreset != null) {
// // // // // // // // // // // // //       currentPresetName = widget.lastUsedPreset;
// // // // // // // // // // // // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // // // // // // // // // // // //     } else {
// // // // // // // // // // // // //       initializePlayers(2);
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void initializePlayers(int count) {
// // // // // // // // // // // // //     players.clear();
// // // // // // // // // // // // //     nameControllers.clear();
// // // // // // // // // // // // //     for (int i = 0; i < count; i++) {
// // // // // // // // // // // // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // // // // // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     setState(() {});
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void addPlayer() {
// // // // // // // // // // // // //     final newIndex = players.length;
// // // // // // // // // // // // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // // // // // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // // // // // // // // // // // //     setState(() {});
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void removePlayer(int index) {
// // // // // // // // // // // // //     players.removeAt(index);
// // // // // // // // // // // // //     nameControllers.removeAt(index);
// // // // // // // // // // // // //     setState(() {});
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> saveCurrentSettings(String presetName) async {
// // // // // // // // // // // // //     if (presetName.isEmpty) return;
// // // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //     final encoded = players.map((p) => p.toJson()).toList();
// // // // // // // // // // // // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // // // // // // // // // // // //     await prefs.setString('last_used_preset', presetName);
// // // // // // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // // // //     if (!names.contains(presetName)) {
// // // // // // // // // // // // //       names.add(presetName);
// // // // // // // // // // // // //       await prefs.setStringList('preset_names', names);
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     setState(() {
// // // // // // // // // // // // //       currentPresetName = presetName;
// // // // // // // // // // // // //     });
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> deletePreset(String presetName) async {
// // // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //     await prefs.remove('preset_$presetName');
// // // // // // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // // // //     names.remove(presetName);
// // // // // // // // // // // // //     await prefs.setStringList('preset_names', names);
// // // // // // // // // // // // //     final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // // // // // //     if (lastUsed == presetName) {
// // // // // // // // // // // // //       await prefs.remove('last_used_preset');
// // // // // // // // // // // // //       setState(() {
// // // // // // // // // // // // //         currentPresetName = null;
// // // // // // // // // // // // //       });
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // // // // // // // // // // // //     try {
// // // // // // // // // // // // //       final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //       final jsonString = prefs.getString('preset_$presetName');
// // // // // // // // // // // // //       if (jsonString == null) return;
// // // // // // // // // // // // //       final List decoded = jsonDecode(jsonString);
// // // // // // // // // // // // //       players.clear();
// // // // // // // // // // // // //       nameControllers.clear();
// // // // // // // // // // // // //       for (var p in decoded) {
// // // // // // // // // // // // //         final player = Player.fromJson(p);
// // // // // // // // // // // // //         players.add(player);
// // // // // // // // // // // // //         nameControllers.add(TextEditingController(text: player.name));
// // // // // // // // // // // // //       }
// // // // // // // // // // // // //       setState(() {
// // // // // // // // // // // // //         currentPresetName = presetName;
// // // // // // // // // // // // //       });
// // // // // // // // // // // // //       if (!autoLoad) {
// // // // // // // // // // // // //         await prefs.setString('last_used_preset', presetName);
// // // // // // // // // // // // //       }
// // // // // // // // // // // // //     } catch (_) {
// // // // // // // // // // // // //       ScaffoldMessenger.of(
// // // // // // // // // // // // //         context,
// // // // // // // // // // // // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void showSaveDialog() async {
// // // // // // // // // // // // //     final controller = TextEditingController();
// // // // // // // // // // // // //     await showDialog(
// // // // // // // // // // // // //       context: context,
// // // // // // // // // // // // //       builder:
// // // // // // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // // // // // //             title: const Text("설정 이름 저장"),
// // // // // // // // // // // // //             content: TextField(
// // // // // // // // // // // // //               controller: controller,
// // // // // // // // // // // // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             actions: [
// // // // // // // // // // // // //               TextButton(
// // // // // // // // // // // // //                 onPressed: () async {
// // // // // // // // // // // // //                   await saveCurrentSettings(controller.text.trim());
// // // // // // // // // // // // //                   Navigator.of(ctx).pop();
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //                 child: const Text("저장"),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ],
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void showLoadDialog() async {
// // // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // // // //     if (presetNames.isEmpty) {
// // // // // // // // // // // // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // // // // // // // // // // // //       return;
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     await showDialog(
// // // // // // // // // // // // //       context: context,
// // // // // // // // // // // // //       builder:
// // // // // // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // // // // // //             title: const Text("불러올 설정 선택"),
// // // // // // // // // // // // //             content: SingleChildScrollView(
// // // // // // // // // // // // //               child: Column(
// // // // // // // // // // // // //                 mainAxisSize: MainAxisSize.min,
// // // // // // // // // // // // //                 children:
// // // // // // // // // // // // //                     presetNames.map((name) {
// // // // // // // // // // // // //                       return ListTile(
// // // // // // // // // // // // //                         title: Text(name),
// // // // // // // // // // // // //                         trailing: IconButton(
// // // // // // // // // // // // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // // // // // // // // // // // //                           onPressed: () async {
// // // // // // // // // // // // //                             Navigator.of(ctx).pop();
// // // // // // // // // // // // //                             await deletePreset(name);
// // // // // // // // // // // // //                           },
// // // // // // // // // // // // //                         ),
// // // // // // // // // // // // //                         onTap: () async {
// // // // // // // // // // // // //                           Navigator.of(ctx).pop();
// // // // // // // // // // // // //                           await loadPreset(name);
// // // // // // // // // // // // //                         },
// // // // // // // // // // // // //                       );
// // // // // // // // // // // // //                     }).toList(),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void clearAllSettings() async {
// // // // // // // // // // // // //     initializePlayers(2);
// // // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // // //     await prefs.remove('last_used_preset');
// // // // // // // // // // // // //     setState(() {
// // // // // // // // // // // // //       currentPresetName = null;
// // // // // // // // // // // // //     });
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // // // //     return Scaffold(
// // // // // // // // // // // // //       body: SafeArea(
// // // // // // // // // // // // //         child: Padding(
// // // // // // // // // // // // //           padding: EdgeInsets.all(24.w),
// // // // // // // // // // // // //           child: Column(
// // // // // // // // // // // // //             crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // // // //             children: [
// // // // // // // // // // // // //               SizedBox(height: 40.h),
// // // // // // // // // // // // //               Text(
// // // // // // // // // // // // //                 'TimeSquad',
// // // // // // // // // // // // //                 style: TextStyle(
// // // // // // // // // // // // //                   fontSize: 36.sp,
// // // // // // // // // // // // //                   fontWeight: FontWeight.w800,
// // // // // // // // // // // // //                   letterSpacing: 1.2,
// // // // // // // // // // // // //                   color: Colors.black87,
// // // // // // // // // // // // //                 ),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //               SizedBox(height: 4.h), // Space between "TimeSquad" and the next line
// // // // // // // // // // // // //               Row(
// // // // // // // // // // // // //                 // This Row contains "Settings" and the icons
// // // // // // // // // // // // //                 children: [
// // // // // // // // // // // // //                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// // // // // // // // // // // // //                   const Spacer(), // Pushes the icons to the right
// // // // // // // // // // // // //                   Row(
// // // // // // // // // // // // //                     // This Row groups the icons
// // // // // // // // // // // // //                     mainAxisSize: MainAxisSize.min, // Ensures this row only takes necessary space
// // // // // // // // // // // // //                     children: [
// // // // // // // // // // // // //                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // // // // // // // // // // // //                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // // // // // // // // // // // //                       IconButton(
// // // // // // // // // // // // //                         icon: const Icon(FeatherIcons.rotateCcw),
// // // // // // // // // // // // //                         onPressed: clearAllSettings,
// // // // // // // // // // // // //                       ),
// // // // // // // // // // // // //                     ],
// // // // // // // // // // // // //                   ),
// // // // // // // // // // // // //                 ],
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //               SizedBox(height: 24.h),
// // // // // // // // // // // // //               Expanded(
// // // // // // // // // // // // //                 child: ReorderableListView.builder(
// // // // // // // // // // // // //                   padding: EdgeInsets.only(bottom: 120.h),
// // // // // // // // // // // // //                   buildDefaultDragHandles: false,
// // // // // // // // // // // // //                   proxyDecorator: (child, index, animation) {
// // // // // // // // // // // // //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // // // // // // // // // // // //                     return ScaleTransition(
// // // // // // // // // // // // //                       scale: scale,
// // // // // // // // // // // // //                       child: Material(
// // // // // // // // // // // // //                         elevation: 0,
// // // // // // // // // // // // //                         shadowColor: Colors.transparent,
// // // // // // // // // // // // //                         color: Colors.transparent,
// // // // // // // // // // // // //                         child: child,
// // // // // // // // // // // // //                       ),
// // // // // // // // // // // // //                     );
// // // // // // // // // // // // //                   },
// // // // // // // // // // // // //                   itemCount: players.length,
// // // // // // // // // // // // //                   onReorder: (oldIndex, newIndex) {
// // // // // // // // // // // // //                     setState(() {
// // // // // // // // // // // // //                       if (newIndex > oldIndex) newIndex--;
// // // // // // // // // // // // //                       final player = players.removeAt(oldIndex);
// // // // // // // // // // // // //                       final controller = nameControllers.removeAt(oldIndex);
// // // // // // // // // // // // //                       players.insert(newIndex, player);
// // // // // // // // // // // // //                       nameControllers.insert(newIndex, controller);
// // // // // // // // // // // // //                     });
// // // // // // // // // // // // //                   },
// // // // // // // // // // // // //                   itemBuilder: (context, index) {
// // // // // // // // // // // // //                     final player = players[index];
// // // // // // // // // // // // //                     return Dismissible(
// // // // // // // // // // // // //                       key: ValueKey(player),
// // // // // // // // // // // // //                       direction: DismissDirection.startToEnd,
// // // // // // // // // // // // //                       background: Container(
// // // // // // // // // // // // //                         alignment: Alignment.centerLeft,
// // // // // // // // // // // // //                         padding: EdgeInsets.only(left: 20.w),
// // // // // // // // // // // // //                         color: Colors.redAccent,
// // // // // // // // // // // // //                         child: const Icon(Icons.delete, color: Colors.white),
// // // // // // // // // // // // //                       ),
// // // // // // // // // // // // //                       onDismissed: (_) {
// // // // // // // // // // // // //                         setState(() {
// // // // // // // // // // // // //                           players.remove(player);
// // // // // // // // // // // // //                           nameControllers.removeAt(index);
// // // // // // // // // // // // //                         });
// // // // // // // // // // // // //                       },
// // // // // // // // // // // // //                       child: ReorderableDelayedDragStartListener(
// // // // // // // // // // // // //                         key: ValueKey(player),
// // // // // // // // // // // // //                         index: index,
// // // // // // // // // // // // //                         child: Container(
// // // // // // // // // // // // //                           margin: EdgeInsets.only(bottom: 12.h),
// // // // // // // // // // // // //                           padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // // // // // // // // // // // //                           decoration: BoxDecoration(
// // // // // // // // // // // // //                             color: Color.lerp(Colors.white, player.color, 0.2),
// // // // // // // // // // // // //                             borderRadius: BorderRadius.circular(20.r),
// // // // // // // // // // // // //                           ),
// // // // // // // // // // // // //                           child: Row(
// // // // // // // // // // // // //                             children: [
// // // // // // // // // // // // //                               Container(
// // // // // // // // // // // // //                                 width: 40.w,
// // // // // // // // // // // // //                                 height: 40.w,
// // // // // // // // // // // // //                                 alignment: Alignment.center,
// // // // // // // // // // // // //                                 decoration: BoxDecoration(
// // // // // // // // // // // // //                                   color: Colors.white,
// // // // // // // // // // // // //                                   borderRadius: BorderRadius.circular(12.r),
// // // // // // // // // // // // //                                 ),
// // // // // // // // // // // // //                                 child: Text(
// // // // // // // // // // // // //                                   '${index + 1}',
// // // // // // // // // // // // //                                   style: TextStyle(fontSize: 18.sp, fontWeight: FontWeight.bold),
// // // // // // // // // // // // //                                 ),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                               SizedBox(width: 12.w),
// // // // // // // // // // // // //                               Expanded(
// // // // // // // // // // // // //                                 child: Column(
// // // // // // // // // // // // //                                   crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // // // //                                   children: [
// // // // // // // // // // // // //                                     Container(
// // // // // // // // // // // // //                                       decoration: BoxDecoration(
// // // // // // // // // // // // //                                         color: Colors.white.withOpacity(0.6),
// // // // // // // // // // // // //                                         borderRadius: BorderRadius.circular(8.r),
// // // // // // // // // // // // //                                       ),
// // // // // // // // // // // // //                                       padding: EdgeInsets.symmetric(horizontal: 8.w, vertical: 4.h),
// // // // // // // // // // // // //                                       child: TextField(
// // // // // // // // // // // // //                                         controller: nameControllers[index],
// // // // // // // // // // // // //                                         onChanged: (val) => players[index].name = val,
// // // // // // // // // // // // //                                         style: TextStyle(
// // // // // // // // // // // // //                                           fontSize: 16.sp,
// // // // // // // // // // // // //                                           fontWeight: FontWeight.w500,
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                         decoration: const InputDecoration.collapsed(
// // // // // // // // // // // // //                                           hintText: 'Enter name',
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                       ),
// // // // // // // // // // // // //                                     ),
// // // // // // // // // // // // //                                     SizedBox(height: 8.h),
// // // // // // // // // // // // //                                     GestureDetector(
// // // // // // // // // // // // //                                       onTap: () async {
// // // // // // // // // // // // //                                         Duration selectedDuration = Duration(
// // // // // // // // // // // // //                                           seconds: players[index].originalSeconds,
// // // // // // // // // // // // //                                         );
// // // // // // // // // // // // //                                         await showModalBottomSheet(
// // // // // // // // // // // // //                                           context: context,
// // // // // // // // // // // // //                                           builder:
// // // // // // // // // // // // //                                               (context) => SizedBox(
// // // // // // // // // // // // //                                                 height: 200,
// // // // // // // // // // // // //                                                 child: CupertinoTimerPicker(
// // // // // // // // // // // // //                                                   mode: CupertinoTimerPickerMode.hms,
// // // // // // // // // // // // //                                                   initialTimerDuration: selectedDuration,
// // // // // // // // // // // // //                                                   onTimerDurationChanged: (Duration newDuration) {
// // // // // // // // // // // // //                                                     setState(() {
// // // // // // // // // // // // //                                                       players[index].seconds =
// // // // // // // // // // // // //                                                           newDuration.inSeconds;
// // // // // // // // // // // // //                                                       players[index].originalSeconds =
// // // // // // // // // // // // //                                                           newDuration.inSeconds;
// // // // // // // // // // // // //                                                     });
// // // // // // // // // // // // //                                                   },
// // // // // // // // // // // // //                                                 ),
// // // // // // // // // // // // //                                               ),
// // // // // // // // // // // // //                                         );
// // // // // // // // // // // // //                                       },
// // // // // // // // // // // // //                                       child: Container(
// // // // // // // // // // // // //                                         decoration: BoxDecoration(
// // // // // // // // // // // // //                                           color: Colors.white.withOpacity(0.6),
// // // // // // // // // // // // //                                           borderRadius: BorderRadius.circular(8.r),
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                         padding: EdgeInsets.symmetric(
// // // // // // // // // // // // //                                           horizontal: 12.w,
// // // // // // // // // // // // //                                           vertical: 10.h,
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                         child: Text(
// // // // // // // // // // // // //                                           'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // // // // // // // // // // // //                                           style: TextStyle(
// // // // // // // // // // // // //                                             fontSize: 16.sp,
// // // // // // // // // // // // //                                             fontWeight: FontWeight.w500,
// // // // // // // // // // // // //                                           ),
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                       ),
// // // // // // // // // // // // //                                     ),
// // // // // // // // // // // // //                                   ],
// // // // // // // // // // // // //                                 ),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                               SizedBox(width: 8.w),
// // // // // // // // // // // // //                               ElevatedButton(
// // // // // // // // // // // // //                                 onPressed: () async {
// // // // // // // // // // // // //                                   FocusScope.of(context).unfocus();
// // // // // // // // // // // // //                                   final color = await showDialog<Color>(
// // // // // // // // // // // // //                                     context: context,
// // // // // // // // // // // // //                                     builder:
// // // // // // // // // // // // //                                         (context) => AlertDialog(
// // // // // // // // // // // // //                                           title: const Text('Select Color'),
// // // // // // // // // // // // //                                           content: Wrap(
// // // // // // // // // // // // //                                             spacing: 8.w,
// // // // // // // // // // // // //                                             children:
// // // // // // // // // // // // //                                                 Colors.primaries.map((c) {
// // // // // // // // // // // // //                                                   return GestureDetector(
// // // // // // // // // // // // //                                                     onTap: () => Navigator.pop(context, c),
// // // // // // // // // // // // //                                                     child: Container(
// // // // // // // // // // // // //                                                       width: 30.w,
// // // // // // // // // // // // //                                                       height: 30.w,
// // // // // // // // // // // // //                                                       decoration: BoxDecoration(
// // // // // // // // // // // // //                                                         color: c,
// // // // // // // // // // // // //                                                         borderRadius: BorderRadius.circular(15.r),
// // // // // // // // // // // // //                                                       ),
// // // // // // // // // // // // //                                                     ),
// // // // // // // // // // // // //                                                   );
// // // // // // // // // // // // //                                                 }).toList(),
// // // // // // // // // // // // //                                           ),
// // // // // // // // // // // // //                                         ),
// // // // // // // // // // // // //                                   );
// // // // // // // // // // // // //                                   if (color != null) {
// // // // // // // // // // // // //                                     setState(() => players[index].color = color);
// // // // // // // // // // // // //                                   }
// // // // // // // // // // // // //                                 },
// // // // // // // // // // // // //                                 style: ElevatedButton.styleFrom(
// // // // // // // // // // // // //                                   backgroundColor: player.color,
// // // // // // // // // // // // //                                   foregroundColor: Colors.white,
// // // // // // // // // // // // //                                   shape: RoundedRectangleBorder(
// // // // // // // // // // // // //                                     borderRadius: BorderRadius.circular(12.r),
// // // // // // // // // // // // //                                   ),
// // // // // // // // // // // // //                                 ),
// // // // // // // // // // // // //                                 child: const Text('Color'),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                             ],
// // // // // // // // // // // // //                           ),
// // // // // // // // // // // // //                         ),
// // // // // // // // // // // // //                       ),
// // // // // // // // // // // // //                     );
// // // // // // // // // // // // //                   },
// // // // // // // // // // // // //                 ),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ],
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //         ),
// // // // // // // // // // // // //       ),
// // // // // // // // // // // // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // // // // // // // // // // // //       floatingActionButton: Padding(
// // // // // // // // // // // // //         padding: EdgeInsets.only(bottom: 16.h),
// // // // // // // // // // // // //         child: Row(
// // // // // // // // // // // // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // // // // // // // // // // // //           children: [
// // // // // // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // // // // // //               heroTag: 'addPlayerBtn',
// // // // // // // // // // // // //               onPressed: addPlayer,
// // // // // // // // // // // // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // // // // // // // // // // // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // // // // // // // // // // // //               backgroundColor: Colors.indigo,
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // // // // // //               heroTag: 'startBtn',
// // // // // // // // // // // // //               onPressed: () {
// // // // // // // // // // // // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // // // // // // // // // // // //                   Navigator.push(
// // // // // // // // // // // // //                     context,
// // // // // // // // // // // // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // // // // // // // // // // // //                   );
// // // // // // // // // // // // //                 } else {
// // // // // // // // // // // // //                   ScaffoldMessenger.of(
// // // // // // // // // // // // //                     context,
// // // // // // // // // // // // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // // // // // // // // // // // //                 }
// // // // // // // // // // // // //               },
// // // // // // // // // // // // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // // // // // // // // // // // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // // // // // // // // // // // //               backgroundColor: Colors.teal,
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //           ],
// // // // // // // // // // // // //         ),
// // // // // // // // // // // // //       ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class TimerScreen extends StatefulWidget {
// // // // // // // // // // // // //   final List<Player> players;
// // // // // // // // // // // // //   const TimerScreen({super.key, required this.players});

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   State<TimerScreen> createState() => _TimerScreenState();
// // // // // // // // // // // // // }

// // // // // // // // // // // // // class _TimerScreenState extends State<TimerScreen> {
// // // // // // // // // // // // //   Timer? _timer;
// // // // // // // // // // // // //   int currentIndex = 0;

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   void initState() {
// // // // // // // // // // // // //     super.initState();
// // // // // // // // // // // // //     startTimer();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void startTimer() {
// // // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // // // // // // // // // // // //       setState(() {
// // // // // // // // // // // // //         final player = widget.players[currentIndex];
// // // // // // // // // // // // //         if (player.seconds > 0) {
// // // // // // // // // // // // //           player.seconds--;
// // // // // // // // // // // // //           player.elapsedSeconds++;
// // // // // // // // // // // // //         } else {
// // // // // // // // // // // // //           player.isCompleted = true;
// // // // // // // // // // // // //           switchToNextPlayer();
// // // // // // // // // // // // //         }
// // // // // // // // // // // // //       });
// // // // // // // // // // // // //     });
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void pauseTimer() {
// // // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void switchToNextPlayer() {
// // // // // // // // // // // // //     pauseTimer();
// // // // // // // // // // // // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // // // // // // // // // // // //       showSummaryDialog();
// // // // // // // // // // // // //       return;
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     do {
// // // // // // // // // // // // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // // // // // // // // // // // //     } while (widget.players[currentIndex].isCompleted);
// // // // // // // // // // // // //     startTimer();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void resetAll() {
// // // // // // // // // // // // //     for (var p in widget.players) {
// // // // // // // // // // // // //       p.seconds = p.originalSeconds;
// // // // // // // // // // // // //       p.elapsedSeconds = 0;
// // // // // // // // // // // // //       p.isCompleted = false;
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     setState(() {
// // // // // // // // // // // // //       currentIndex = 0;
// // // // // // // // // // // // //     });
// // // // // // // // // // // // //     startTimer();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   String formatDuration(int seconds) {
// // // // // // // // // // // // //     final d = Duration(seconds: seconds);
// // // // // // // // // // // // //     final hours = d.inHours.toString().padLeft(2, '0');
// // // // // // // // // // // // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // // // // // // // // // // // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // // // // // // // // // // // //     return '$hours:$minutes:$secs';
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   void showSummaryDialog() {
// // // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // // //     showDialog(
// // // // // // // // // // // // //       context: context,
// // // // // // // // // // // // //       builder:
// // // // // // // // // // // // //           (_) => AlertDialog(
// // // // // // // // // // // // //             title: const Text('Round Complete'),
// // // // // // // // // // // // //             content: Column(
// // // // // // // // // // // // //               mainAxisSize: MainAxisSize.min,
// // // // // // // // // // // // //               children:
// // // // // // // // // // // // //                   widget.players.map((p) {
// // // // // // // // // // // // //                     final formatted = formatDuration(p.elapsedSeconds);
// // // // // // // // // // // // //                     return Text('${p.name} ⏱ $formatted');
// // // // // // // // // // // // //                   }).toList(),
// // // // // // // // // // // // //             ),
// // // // // // // // // // // // //             actions: [
// // // // // // // // // // // // //               TextButton(
// // // // // // // // // // // // //                 onPressed: () {
// // // // // // // // // // // // //                   Navigator.of(context).pop();
// // // // // // // // // // // // //                   resetAll();
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //                 child: const Text('Next Round'),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //               TextButton(
// // // // // // // // // // // // //                 onPressed: () {
// // // // // // // // // // // // //                   resetAll();
// // // // // // // // // // // // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // // // //                 },
// // // // // // // // // // // // //                 child: const Text('Home'),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ],
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // // //   }

// // // // // // // // // // // // //   @override
// // // // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // // // //     final player = widget.players[currentIndex];
// // // // // // // // // // // // //     return Scaffold(
// // // // // // // // // // // // //       backgroundColor: player.color,
// // // // // // // // // // // // //       body: SafeArea(
// // // // // // // // // // // // //         child: GestureDetector(
// // // // // // // // // // // // //           behavior: HitTestBehavior.opaque,
// // // // // // // // // // // // //           onTap: () {
// // // // // // // // // // // // //             setState(() {
// // // // // // // // // // // // //               pauseTimer();
// // // // // // // // // // // // //               switchToNextPlayer();
// // // // // // // // // // // // //             });
// // // // // // // // // // // // //           },
// // // // // // // // // // // // //           child: Stack(
// // // // // // // // // // // // //             children: [
// // // // // // // // // // // // //               Center(
// // // // // // // // // // // // //                 child: Column(
// // // // // // // // // // // // //                   mainAxisAlignment: MainAxisAlignment.center,
// // // // // // // // // // // // //                   children: [
// // // // // // // // // // // // //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // // // // // // // // // // // //                     SizedBox(height: 16.h),
// // // // // // // // // // // // //                     Text(
// // // // // // // // // // // // //                       formatDuration(player.seconds),
// // // // // // // // // // // // //                       style: TextStyle(
// // // // // // // // // // // // //                         fontSize: 64.sp,
// // // // // // // // // // // // //                         fontWeight: FontWeight.bold,
// // // // // // // // // // // // //                         color: Colors.white,
// // // // // // // // // // // // //                       ),
// // // // // // // // // // // // //                     ),
// // // // // // // // // // // // //                     SizedBox(height: 24.h),
// // // // // // // // // // // // //                     ElevatedButton(
// // // // // // // // // // // // //                       onPressed: () {
// // // // // // // // // // // // //                         setState(() {
// // // // // // // // // // // // //                           widget.players[currentIndex].isCompleted = true;
// // // // // // // // // // // // //                           pauseTimer();
// // // // // // // // // // // // //                           switchToNextPlayer();
// // // // // // // // // // // // //                         });
// // // // // // // // // // // // //                       },
// // // // // // // // // // // // //                       child: const Text('Complete'),
// // // // // // // // // // // // //                     ),
// // // // // // // // // // // // //                     SizedBox(height: 12.h),
// // // // // // // // // // // // //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // // // // // // // // // // // //                   ],
// // // // // // // // // // // // //                 ),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //               Positioned(
// // // // // // // // // // // // //                 top: 20.h,
// // // // // // // // // // // // //                 right: 20.w,
// // // // // // // // // // // // //                 child: IconButton(
// // // // // // // // // // // // //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // // // // // // // // // // // //                   onPressed: () {
// // // // // // // // // // // // //                     pauseTimer();
// // // // // // // // // // // // //                     showDialog(
// // // // // // // // // // // // //                       context: context,
// // // // // // // // // // // // //                       builder:
// // // // // // // // // // // // //                           (context) => AlertDialog(
// // // // // // // // // // // // //                             title: const Text('홈으로 이동'),
// // // // // // // // // // // // //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // // // // // // // // // // // //                             actions: [
// // // // // // // // // // // // //                               TextButton(
// // // // // // // // // // // // //                                 onPressed: () {
// // // // // // // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // // // //                                 },
// // // // // // // // // // // // //                                 child: const Text('설정 유지'),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                               TextButton(
// // // // // // // // // // // // //                                 onPressed: () {
// // // // // // // // // // // // //                                   resetAll();
// // // // // // // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // // // //                                 },
// // // // // // // // // // // // //                                 child: const Text('초기화 후 이동'),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                               TextButton(
// // // // // // // // // // // // //                                 onPressed: () => Navigator.of(context).pop(),
// // // // // // // // // // // // //                                 child: const Text('취소'),
// // // // // // // // // // // // //                               ),
// // // // // // // // // // // // //                             ],
// // // // // // // // // // // // //                           ),
// // // // // // // // // // // // //                     );
// // // // // // // // // // // // //                   },
// // // // // // // // // // // // //                 ),
// // // // // // // // // // // // //               ),
// // // // // // // // // // // // //             ],
// // // // // // // // // // // // //           ),
// // // // // // // // // // // // //         ),
// // // // // // // // // // // // //       ),
// // // // // // // // // // // // //     );
// // // // // // // // // // // // //   }
// // // // // // // // // // // // // }

// // // // // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // // // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // // // // // // // // // // import 'package:flutter/cupertino.dart';
// // // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // // import 'dart:convert';
// // // // // // // // // // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // // // // // // // // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // // // // // // // // // // void main() async {
// // // // // // // // // // // //   WidgetsFlutterBinding.ensureInitialized();
// // // // // // // // // // // //   final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // //   final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // // // // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // // // // // // // // // // }

// // // // // // // // // // // // class MyApp extends StatelessWidget {
// // // // // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // // // // //   const MyApp({super.key, this.lastUsedPreset});

// // // // // // // // // // // //   @override
// // // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // // //     return ScreenUtilInit(
// // // // // // // // // // // //       designSize: const Size(390, 844),
// // // // // // // // // // // //       builder:
// // // // // // // // // // // //           (context, child) => MaterialApp(
// // // // // // // // // // // //             debugShowCheckedModeBanner: false,
// // // // // // // // // // // //             title: 'Multi Player Timer',
// // // // // // // // // // // //             theme: ThemeData(
// // // // // // // // // // // //               scaffoldBackgroundColor: Colors.white,
// // // // // // // // // // // //               fontFamily: 'Roboto',
// // // // // // // // // // // //               textTheme: TextTheme(
// // // // // // // // // // // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // // // // // // // // // // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // // // // // // // // // // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // // // // // // // // // // //               ),
// // // // // // // // // // // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // // // // // // // // // // //                 style: ElevatedButton.styleFrom(
// // // // // // // // // // // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // // // // // // // // // // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // // // // // // // // // // //                 ),
// // // // // // // // // // // //               ),
// // // // // // // // // // // //             ),
// // // // // // // // // // // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // // // // // // // // // // //           ),
// // // // // // // // // // // //     );
// // // // // // // // // // // //   }
// // // // // // // // // // // // }

// // // // // // // // // // // // class Player {
// // // // // // // // // // // //   String name;
// // // // // // // // // // // //   int seconds;
// // // // // // // // // // // //   int originalSeconds;
// // // // // // // // // // // //   Color color;
// // // // // // // // // // // //   bool isCompleted;
// // // // // // // // // // // //   int elapsedSeconds = 0;

// // // // // // // // // // // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // // // // // // // // // // //     : originalSeconds = seconds;

// // // // // // // // // // // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // // // // // // // // // // //   static Player fromJson(Map<String, dynamic> json) =>
// // // // // // // // // // // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // // // // // // // // // // }

// // // // // // // // // // // // class PlayerSetupScreen extends StatefulWidget {
// // // // // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // // // // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // // // // // // // // // // //   @override
// // // // // // // // // // // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // // // // // // // // // // }

// // // // // // // // // // // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // // // // // // // // // // //   final List<Player> players = [];
// // // // // // // // // // // //   final List<TextEditingController> nameControllers = [];
// // // // // // // // // // // //   String? currentPresetName;

// // // // // // // // // // // //   @override
// // // // // // // // // // // //   void initState() {
// // // // // // // // // // // //     super.initState();
// // // // // // // // // // // //     if (widget.lastUsedPreset != null) {
// // // // // // // // // // // //       currentPresetName = widget.lastUsedPreset;
// // // // // // // // // // // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // // // // // // // // // // //     } else {
// // // // // // // // // // // //       initializePlayers(2);
// // // // // // // // // // // //     }
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void initializePlayers(int count) {
// // // // // // // // // // // //     players.clear();
// // // // // // // // // // // //     nameControllers.clear();
// // // // // // // // // // // //     for (int i = 0; i < count; i++) {
// // // // // // // // // // // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // // // // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // // // // // // // // // // //     }
// // // // // // // // // // // //     setState(() {});
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void addPlayer() {
// // // // // // // // // // // //     final newIndex = players.length;
// // // // // // // // // // // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // // // // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // // // // // // // // // // //     setState(() {});
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void removePlayer(int index) {
// // // // // // // // // // // //     players.removeAt(index);
// // // // // // // // // // // //     nameControllers.removeAt(index);
// // // // // // // // // // // //     setState(() {});
// // // // // // // // // // // //   }

// // // // // // // // // // // //   Future<void> saveCurrentSettings(String presetName) async {
// // // // // // // // // // // //     if (presetName.isEmpty) return;
// // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // //     final encoded = players.map((p) => p.toJson()).toList();
// // // // // // // // // // // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // // // // // // // // // // //     await prefs.setString('last_used_preset', presetName);
// // // // // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // // //     if (!names.contains(presetName)) {
// // // // // // // // // // // //       names.add(presetName);
// // // // // // // // // // // //       await prefs.setStringList('preset_names', names);
// // // // // // // // // // // //     }
// // // // // // // // // // // //     setState(() {
// // // // // // // // // // // //       currentPresetName = presetName;
// // // // // // // // // // // //     });
// // // // // // // // // // // //   }

// // // // // // // // // // // //   Future<void> deletePreset(String presetName) async {
// // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // //     await prefs.remove('preset_$presetName');
// // // // // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // // //     names.remove(presetName);
// // // // // // // // // // // //     await prefs.setStringList('preset_names', names);
// // // // // // // // // // // //     final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // // // // //     if (lastUsed == presetName) {
// // // // // // // // // // // //       await prefs.remove('last_used_preset');
// // // // // // // // // // // //       setState(() {
// // // // // // // // // // // //         currentPresetName = null;
// // // // // // // // // // // //       });
// // // // // // // // // // // //     }
// // // // // // // // // // // //   }

// // // // // // // // // // // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // // // // // // // // // // //     try {
// // // // // // // // // // // //       final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // //       final jsonString = prefs.getString('preset_$presetName');
// // // // // // // // // // // //       if (jsonString == null) return;
// // // // // // // // // // // //       final List decoded = jsonDecode(jsonString);
// // // // // // // // // // // //       players.clear();
// // // // // // // // // // // //       nameControllers.clear();
// // // // // // // // // // // //       for (var p in decoded) {
// // // // // // // // // // // //         final player = Player.fromJson(p);
// // // // // // // // // // // //         players.add(player);
// // // // // // // // // // // //         nameControllers.add(TextEditingController(text: player.name));
// // // // // // // // // // // //       }
// // // // // // // // // // // //       setState(() {
// // // // // // // // // // // //         currentPresetName = presetName;
// // // // // // // // // // // //       });
// // // // // // // // // // // //       if (!autoLoad) {
// // // // // // // // // // // //         await prefs.setString('last_used_preset', presetName);
// // // // // // // // // // // //       }
// // // // // // // // // // // //     } catch (_) {
// // // // // // // // // // // //       ScaffoldMessenger.of(
// // // // // // // // // // // //         context,
// // // // // // // // // // // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // // // // // // // // // // //     }
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void showSaveDialog() async {
// // // // // // // // // // // //     final controller = TextEditingController();
// // // // // // // // // // // //     await showDialog(
// // // // // // // // // // // //       context: context,
// // // // // // // // // // // //       builder:
// // // // // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // // // // //             title: const Text("설정 이름 저장"),
// // // // // // // // // // // //             content: TextField(
// // // // // // // // // // // //               controller: controller,
// // // // // // // // // // // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // // // // // // // // // // //             ),
// // // // // // // // // // // //             actions: [
// // // // // // // // // // // //               TextButton(
// // // // // // // // // // // //                 onPressed: () async {
// // // // // // // // // // // //                   await saveCurrentSettings(controller.text.trim());
// // // // // // // // // // // //                   Navigator.of(ctx).pop();
// // // // // // // // // // // //                 },
// // // // // // // // // // // //                 child: const Text("저장"),
// // // // // // // // // // // //               ),
// // // // // // // // // // // //             ],
// // // // // // // // // // // //           ),
// // // // // // // // // // // //     );
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void showLoadDialog() async {
// // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // // //     if (presetNames.isEmpty) {
// // // // // // // // // // // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // // // // // // // // // // //       return;
// // // // // // // // // // // //     }
// // // // // // // // // // // //     await showDialog(
// // // // // // // // // // // //       context: context,
// // // // // // // // // // // //       builder:
// // // // // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // // // // //             title: const Text("불러올 설정 선택"),
// // // // // // // // // // // //             content: SingleChildScrollView(
// // // // // // // // // // // //               child: Column(
// // // // // // // // // // // //                 mainAxisSize: MainAxisSize.min,
// // // // // // // // // // // //                 children:
// // // // // // // // // // // //                     presetNames.map((name) {
// // // // // // // // // // // //                       return ListTile(
// // // // // // // // // // // //                         title: Text(name),
// // // // // // // // // // // //                         trailing: IconButton(
// // // // // // // // // // // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // // // // // // // // // // //                           onPressed: () async {
// // // // // // // // // // // //                             Navigator.of(ctx).pop();
// // // // // // // // // // // //                             await deletePreset(name);
// // // // // // // // // // // //                           },
// // // // // // // // // // // //                         ),
// // // // // // // // // // // //                         onTap: () async {
// // // // // // // // // // // //                           Navigator.of(ctx).pop();
// // // // // // // // // // // //                           await loadPreset(name);
// // // // // // // // // // // //                         },
// // // // // // // // // // // //                       );
// // // // // // // // // // // //                     }).toList(),
// // // // // // // // // // // //               ),
// // // // // // // // // // // //             ),
// // // // // // // // // // // //           ),
// // // // // // // // // // // //     );
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void clearAllSettings() async {
// // // // // // // // // // // //     initializePlayers(2);
// // // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // // //     await prefs.remove('last_used_preset');
// // // // // // // // // // // //     setState(() {
// // // // // // // // // // // //       currentPresetName = null;
// // // // // // // // // // // //     });
// // // // // // // // // // // //   }

// // // // // // // // // // // //   @override
// // // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // // //     return Scaffold(
// // // // // // // // // // // //       body: SafeArea(
// // // // // // // // // // // //         child: Padding(
// // // // // // // // // // // //           padding: EdgeInsets.all(24.w),
// // // // // // // // // // // //           child: Column(
// // // // // // // // // // // //             crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // // //             children: [
// // // // // // // // // // // //               SizedBox(height: 40.h),
// // // // // // // // // // // //               Text(
// // // // // // // // // // // //                 'TimeSquad',
// // // // // // // // // // // //                 style: TextStyle(
// // // // // // // // // // // //                   fontSize: 36.sp,
// // // // // // // // // // // //                   fontWeight: FontWeight.w800,
// // // // // // // // // // // //                   letterSpacing: 1.2,
// // // // // // // // // // // //                   color: Colors.black87,
// // // // // // // // // // // //                 ),
// // // // // // // // // // // //               ),
// // // // // // // // // // // //               SizedBox(height: 4.h), // Space between "TimeSquad" and the line below
// // // // // // // // // // // //               Row(
// // // // // // // // // // // //                 // This Row contains "Settings" and the icons
// // // // // // // // // // // //                 children: [
// // // // // // // // // // // //                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// // // // // // // // // // // //                   const Spacer(), // Pushes the icons to the right
// // // // // // // // // // // //                   Row(
// // // // // // // // // // // //                     // This Row groups the icons
// // // // // // // // // // // //                     mainAxisSize: MainAxisSize.min, // Ensures this row only takes necessary space
// // // // // // // // // // // //                     children: [
// // // // // // // // // // // //                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // // // // // // // // // // //                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // // // // // // // // // // //                       IconButton(
// // // // // // // // // // // //                         icon: const Icon(FeatherIcons.rotateCcw),
// // // // // // // // // // // //                         onPressed: clearAllSettings,
// // // // // // // // // // // //                       ),
// // // // // // // // // // // //                     ],
// // // // // // // // // // // //                   ),
// // // // // // // // // // // //                 ],
// // // // // // // // // // // //               ),
// // // // // // // // // // // //               SizedBox(height: 24.h),
// // // // // // // // // // // //               Expanded(
// // // // // // // // // // // //                 child: ReorderableListView.builder(
// // // // // // // // // // // //                   padding: EdgeInsets.only(bottom: 120.h),
// // // // // // // // // // // //                   buildDefaultDragHandles: false,
// // // // // // // // // // // //                   proxyDecorator: (child, index, animation) {
// // // // // // // // // // // //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // // // // // // // // // // //                     return ScaleTransition(
// // // // // // // // // // // //                       scale: scale,
// // // // // // // // // // // //                       child: Material(
// // // // // // // // // // // //                         elevation: 0,
// // // // // // // // // // // //                         shadowColor: Colors.transparent,
// // // // // // // // // // // //                         color: Colors.transparent,
// // // // // // // // // // // //                         child: child,
// // // // // // // // // // // //                       ),
// // // // // // // // // // // //                     );
// // // // // // // // // // // //                   },
// // // // // // // // // // // //                   itemCount: players.length,
// // // // // // // // // // // //                   onReorder: (oldIndex, newIndex) {
// // // // // // // // // // // //                     setState(() {
// // // // // // // // // // // //                       if (newIndex > oldIndex) newIndex--;
// // // // // // // // // // // //                       final player = players.removeAt(oldIndex);
// // // // // // // // // // // //                       final controller = nameControllers.removeAt(oldIndex);
// // // // // // // // // // // //                       players.insert(newIndex, player);
// // // // // // // // // // // //                       nameControllers.insert(newIndex, controller);
// // // // // // // // // // // //                     });
// // // // // // // // // // // //                   },
// // // // // // // // // // // //                   itemBuilder: (context, index) {
// // // // // // // // // // // //                     final player = players[index];
// // // // // // // // // // // //                     return Dismissible(
// // // // // // // // // // // //                       key: ValueKey(player),
// // // // // // // // // // // //                       direction: DismissDirection.startToEnd,
// // // // // // // // // // // //                       // --- FIX START ---
// // // // // // // // // // // //                       background: Container(
// // // // // // // // // // // //                         margin: EdgeInsets.only(
// // // // // // // // // // // //                           bottom: 12.h,
// // // // // // // // // // // //                         ), // Apply the same margin as the player card
// // // // // // // // // // // //                         child: ClipRRect(
// // // // // // // // // // // //                           // Clip to the same border radius as the player card
// // // // // // // // // // // //                           borderRadius: BorderRadius.circular(20.r),
// // // // // // // // // // // //                           child: Container(
// // // // // // // // // // // //                             alignment: Alignment.centerLeft,
// // // // // // // // // // // //                             padding: EdgeInsets.only(left: 20.w),
// // // // // // // // // // // //                             color: Colors.redAccent,
// // // // // // // // // // // //                             child: const Icon(Icons.delete, color: Colors.white),
// // // // // // // // // // // //                           ),
// // // // // // // // // // // //                         ),
// // // // // // // // // // // //                       ),
// // // // // // // // // // // //                       // --- FIX END ---
// // // // // // // // // // // //                       onDismissed: (_) {
// // // // // // // // // // // //                         setState(() {
// // // // // // // // // // // //                           players.remove(player);
// // // // // // // // // // // //                           nameControllers.removeAt(index);
// // // // // // // // // // // //                         });
// // // // // // // // // // // //                       },
// // // // // // // // // // // //                       child: ReorderableDelayedDragStartListener(
// // // // // // // // // // // //                         key: ValueKey(player),
// // // // // // // // // // // //                         index: index,
// // // // // // // // // // // //                         child: Container(
// // // // // // // // // // // //                           margin: EdgeInsets.only(bottom: 12.h),
// // // // // // // // // // // //                           padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // // // // // // // // // // //                           decoration: BoxDecoration(
// // // // // // // // // // // //                             color: Color.lerp(Colors.white, player.color, 0.2),
// // // // // // // // // // // //                             borderRadius: BorderRadius.circular(20.r), // This radius
// // // // // // // // // // // //                           ),
// // // // // // // // // // // //                           child: Row(
// // // // // // // // // // // //                             children: [
// // // // // // // // // // // //                               Container(
// // // // // // // // // // // //                                 width: 40.w,
// // // // // // // // // // // //                                 height: 40.w,
// // // // // // // // // // // //                                 alignment: Alignment.center,
// // // // // // // // // // // //                                 decoration: BoxDecoration(
// // // // // // // // // // // //                                   color: Colors.white,
// // // // // // // // // // // //                                   borderRadius: BorderRadius.circular(12.r),
// // // // // // // // // // // //                                 ),
// // // // // // // // // // // //                                 child: Text(
// // // // // // // // // // // //                                   '${index + 1}',
// // // // // // // // // // // //                                   style: TextStyle(fontSize: 18.sp, fontWeight: FontWeight.bold),
// // // // // // // // // // // //                                 ),
// // // // // // // // // // // //                               ),
// // // // // // // // // // // //                               SizedBox(width: 12.w),
// // // // // // // // // // // //                               Expanded(
// // // // // // // // // // // //                                 child: Column(
// // // // // // // // // // // //                                   crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // // //                                   children: [
// // // // // // // // // // // //                                     Container(
// // // // // // // // // // // //                                       decoration: BoxDecoration(
// // // // // // // // // // // //                                         color: Colors.white.withOpacity(0.6),
// // // // // // // // // // // //                                         borderRadius: BorderRadius.circular(8.r),
// // // // // // // // // // // //                                       ),
// // // // // // // // // // // //                                       padding: EdgeInsets.symmetric(horizontal: 8.w, vertical: 4.h),
// // // // // // // // // // // //                                       child: TextField(
// // // // // // // // // // // //                                         controller: nameControllers[index],
// // // // // // // // // // // //                                         onChanged: (val) => players[index].name = val,
// // // // // // // // // // // //                                         style: TextStyle(
// // // // // // // // // // // //                                           fontSize: 16.sp,
// // // // // // // // // // // //                                           fontWeight: FontWeight.w500,
// // // // // // // // // // // //                                         ),
// // // // // // // // // // // //                                         decoration: const InputDecoration.collapsed(
// // // // // // // // // // // //                                           hintText: 'Enter name',
// // // // // // // // // // // //                                         ),
// // // // // // // // // // // //                                       ),
// // // // // // // // // // // //                                     ),
// // // // // // // // // // // //                                     SizedBox(height: 8.h),
// // // // // // // // // // // //                                     GestureDetector(
// // // // // // // // // // // //                                       onTap: () async {
// // // // // // // // // // // //                                         Duration selectedDuration = Duration(
// // // // // // // // // // // //                                           seconds: players[index].originalSeconds,
// // // // // // // // // // // //                                         );
// // // // // // // // // // // //                                         await showModalBottomSheet(
// // // // // // // // // // // //                                           context: context,
// // // // // // // // // // // //                                           builder:
// // // // // // // // // // // //                                               (context) => SizedBox(
// // // // // // // // // // // //                                                 height: 200,
// // // // // // // // // // // //                                                 child: CupertinoTimerPicker(
// // // // // // // // // // // //                                                   mode: CupertinoTimerPickerMode.hms,
// // // // // // // // // // // //                                                   initialTimerDuration: selectedDuration,
// // // // // // // // // // // //                                                   onTimerDurationChanged: (Duration newDuration) {
// // // // // // // // // // // //                                                     setState(() {
// // // // // // // // // // // //                                                       players[index].seconds =
// // // // // // // // // // // //                                                           newDuration.inSeconds;
// // // // // // // // // // // //                                                       players[index].originalSeconds =
// // // // // // // // // // // //                                                           newDuration.inSeconds;
// // // // // // // // // // // //                                                     });
// // // // // // // // // // // //                                                   },
// // // // // // // // // // // //                                                 ),
// // // // // // // // // // // //                                               ),
// // // // // // // // // // // //                                         );
// // // // // // // // // // // //                                       },
// // // // // // // // // // // //                                       child: Container(
// // // // // // // // // // // //                                         decoration: BoxDecoration(
// // // // // // // // // // // //                                           color: Colors.white.withOpacity(0.6),
// // // // // // // // // // // //                                           borderRadius: BorderRadius.circular(8.r),
// // // // // // // // // // // //                                         ),
// // // // // // // // // // // //                                         padding: EdgeInsets.symmetric(
// // // // // // // // // // // //                                           horizontal: 12.w,
// // // // // // // // // // // //                                           vertical: 10.h,
// // // // // // // // // // // //                                         ),
// // // // // // // // // // // //                                         child: Text(
// // // // // // // // // // // //                                           'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // // // // // // // // // // //                                           style: TextStyle(
// // // // // // // // // // // //                                             fontSize: 16.sp,
// // // // // // // // // // // //                                             fontWeight: FontWeight.w500,
// // // // // // // // // // // //                                           ),
// // // // // // // // // // // //                                         ),
// // // // // // // // // // // //                                       ),
// // // // // // // // // // // //                                     ),
// // // // // // // // // // // //                                   ],
// // // // // // // // // // // //                                 ),
// // // // // // // // // // // //                               ),
// // // // // // // // // // // //                               SizedBox(width: 8.w),
// // // // // // // // // // // //                               ElevatedButton(
// // // // // // // // // // // //                                 onPressed: () async {
// // // // // // // // // // // //                                   FocusScope.of(context).unfocus();
// // // // // // // // // // // //                                   final color = await showDialog<Color>(
// // // // // // // // // // // //                                     context: context,
// // // // // // // // // // // //                                     builder:
// // // // // // // // // // // //                                         (context) => AlertDialog(
// // // // // // // // // // // //                                           title: const Text('Select Color'),
// // // // // // // // // // // //                                           content: Wrap(
// // // // // // // // // // // //                                             spacing: 8.w,
// // // // // // // // // // // //                                             children:
// // // // // // // // // // // //                                                 Colors.primaries.map((c) {
// // // // // // // // // // // //                                                   return GestureDetector(
// // // // // // // // // // // //                                                     onTap: () => Navigator.pop(context, c),
// // // // // // // // // // // //                                                     child: Container(
// // // // // // // // // // // //                                                       width: 30.w,
// // // // // // // // // // // //                                                       height: 30.w,
// // // // // // // // // // // //                                                       decoration: BoxDecoration(
// // // // // // // // // // // //                                                         color: c,
// // // // // // // // // // // //                                                         borderRadius: BorderRadius.circular(15.r),
// // // // // // // // // // // //                                                       ),
// // // // // // // // // // // //                                                     ),
// // // // // // // // // // // //                                                   );
// // // // // // // // // // // //                                                 }).toList(),
// // // // // // // // // // // //                                           ),
// // // // // // // // // // // //                                         ),
// // // // // // // // // // // //                                   );
// // // // // // // // // // // //                                   if (color != null) {
// // // // // // // // // // // //                                     setState(() => players[index].color = color);
// // // // // // // // // // // //                                   }
// // // // // // // // // // // //                                 },
// // // // // // // // // // // //                                 style: ElevatedButton.styleFrom(
// // // // // // // // // // // //                                   backgroundColor: player.color,
// // // // // // // // // // // //                                   foregroundColor: Colors.white,
// // // // // // // // // // // //                                   shape: RoundedRectangleBorder(
// // // // // // // // // // // //                                     borderRadius: BorderRadius.circular(12.r),
// // // // // // // // // // // //                                   ),
// // // // // // // // // // // //                                 ),
// // // // // // // // // // // //                                 child: const Text('Color'),
// // // // // // // // // // // //                               ),
// // // // // // // // // // // //                             ],
// // // // // // // // // // // //                           ),
// // // // // // // // // // // //                         ),
// // // // // // // // // // // //                       ),
// // // // // // // // // // // //                     );
// // // // // // // // // // // //                   },
// // // // // // // // // // // //                 ),
// // // // // // // // // // // //               ),
// // // // // // // // // // // //             ],
// // // // // // // // // // // //           ),
// // // // // // // // // // // //         ),
// // // // // // // // // // // //       ),
// // // // // // // // // // // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // // // // // // // // // // //       floatingActionButton: Padding(
// // // // // // // // // // // //         padding: EdgeInsets.only(bottom: 16.h),
// // // // // // // // // // // //         child: Row(
// // // // // // // // // // // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // // // // // // // // // // //           children: [
// // // // // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // // // // //               heroTag: 'addPlayerBtn',
// // // // // // // // // // // //               onPressed: addPlayer,
// // // // // // // // // // // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // // // // // // // // // // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // // // // // // // // // // //               backgroundColor: Colors.indigo,
// // // // // // // // // // // //             ),
// // // // // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // // // // //               heroTag: 'startBtn',
// // // // // // // // // // // //               onPressed: () {
// // // // // // // // // // // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // // // // // // // // // // //                   Navigator.push(
// // // // // // // // // // // //                     context,
// // // // // // // // // // // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // // // // // // // // // // //                   );
// // // // // // // // // // // //                 } else {
// // // // // // // // // // // //                   ScaffoldMessenger.of(
// // // // // // // // // // // //                     context,
// // // // // // // // // // // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // // // // // // // // // // //                 }
// // // // // // // // // // // //               },
// // // // // // // // // // // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // // // // // // // // // // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // // // // // // // // // // //               backgroundColor: Colors.teal,
// // // // // // // // // // // //             ),
// // // // // // // // // // // //           ],
// // // // // // // // // // // //         ),
// // // // // // // // // // // //       ),
// // // // // // // // // // // //     );
// // // // // // // // // // // //   }
// // // // // // // // // // // // }

// // // // // // // // // // // // class TimerScreen extends StatefulWidget {
// // // // // // // // // // // //   final List<Player> players;
// // // // // // // // // // // //   const TimerScreen({super.key, required this.players});

// // // // // // // // // // // //   @override
// // // // // // // // // // // //   State<TimerScreen> createState() => _TimerScreenState();
// // // // // // // // // // // // }

// // // // // // // // // // // // class _TimerScreenState extends State<TimerScreen> {
// // // // // // // // // // // //   Timer? _timer;
// // // // // // // // // // // //   int currentIndex = 0;

// // // // // // // // // // // //   @override
// // // // // // // // // // // //   void initState() {
// // // // // // // // // // // //     super.initState();
// // // // // // // // // // // //     startTimer();
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void startTimer() {
// // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // // // // // // // // // // //       setState(() {
// // // // // // // // // // // //         final player = widget.players[currentIndex];
// // // // // // // // // // // //         if (player.seconds > 0) {
// // // // // // // // // // // //           player.seconds--;
// // // // // // // // // // // //           player.elapsedSeconds++;
// // // // // // // // // // // //         } else {
// // // // // // // // // // // //           player.isCompleted = true;
// // // // // // // // // // // //           switchToNextPlayer();
// // // // // // // // // // // //         }
// // // // // // // // // // // //       });
// // // // // // // // // // // //     });
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void pauseTimer() {
// // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void switchToNextPlayer() {
// // // // // // // // // // // //     pauseTimer();
// // // // // // // // // // // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // // // // // // // // // // //       showSummaryDialog();
// // // // // // // // // // // //       return;
// // // // // // // // // // // //     }
// // // // // // // // // // // //     do {
// // // // // // // // // // // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // // // // // // // // // // //     } while (widget.players[currentIndex].isCompleted);
// // // // // // // // // // // //     startTimer();
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void resetAll() {
// // // // // // // // // // // //     for (var p in widget.players) {
// // // // // // // // // // // //       p.seconds = p.originalSeconds;
// // // // // // // // // // // //       p.elapsedSeconds = 0;
// // // // // // // // // // // //       p.isCompleted = false;
// // // // // // // // // // // //     }
// // // // // // // // // // // //     setState(() {
// // // // // // // // // // // //       currentIndex = 0;
// // // // // // // // // // // //     });
// // // // // // // // // // // //     startTimer();
// // // // // // // // // // // //   }

// // // // // // // // // // // //   String formatDuration(int seconds) {
// // // // // // // // // // // //     final d = Duration(seconds: seconds);
// // // // // // // // // // // //     final hours = d.inHours.toString().padLeft(2, '0');
// // // // // // // // // // // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // // // // // // // // // // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // // // // // // // // // // //     return '$hours:$minutes:$secs';
// // // // // // // // // // // //   }

// // // // // // // // // // // //   void showSummaryDialog() {
// // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // //     showDialog(
// // // // // // // // // // // //       context: context,
// // // // // // // // // // // //       builder:
// // // // // // // // // // // //           (_) => AlertDialog(
// // // // // // // // // // // //             title: const Text('Round Complete'),
// // // // // // // // // // // //             content: Column(
// // // // // // // // // // // //               mainAxisSize: MainAxisSize.min,
// // // // // // // // // // // //               children:
// // // // // // // // // // // //                   widget.players.map((p) {
// // // // // // // // // // // //                     final formatted = formatDuration(p.elapsedSeconds);
// // // // // // // // // // // //                     return Text('${p.name} ⏱ $formatted');
// // // // // // // // // // // //                   }).toList(),
// // // // // // // // // // // //             ),
// // // // // // // // // // // //             actions: [
// // // // // // // // // // // //               TextButton(
// // // // // // // // // // // //                 onPressed: () {
// // // // // // // // // // // //                   Navigator.of(context).pop();
// // // // // // // // // // // //                   resetAll();
// // // // // // // // // // // //                 },
// // // // // // // // // // // //                 child: const Text('Next Round'),
// // // // // // // // // // // //               ),
// // // // // // // // // // // //               TextButton(
// // // // // // // // // // // //                 onPressed: () {
// // // // // // // // // // // //                   resetAll();
// // // // // // // // // // // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // // //                 },
// // // // // // // // // // // //                 child: const Text('Home'),
// // // // // // // // // // // //               ),
// // // // // // // // // // // //             ],
// // // // // // // // // // // //           ),
// // // // // // // // // // // //     );
// // // // // // // // // // // //   }

// // // // // // // // // // // //   @override
// // // // // // // // // // // //   void dispose() {
// // // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // // //     super.dispose();
// // // // // // // // // // // //   }

// // // // // // // // // // // //   @override
// // // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // // //     final player = widget.players[currentIndex];
// // // // // // // // // // // //     return Scaffold(
// // // // // // // // // // // //       backgroundColor: player.color,
// // // // // // // // // // // //       body: SafeArea(
// // // // // // // // // // // //         child: GestureDetector(
// // // // // // // // // // // //           behavior: HitTestBehavior.opaque,
// // // // // // // // // // // //           onTap: () {
// // // // // // // // // // // //             setState(() {
// // // // // // // // // // // //               pauseTimer();
// // // // // // // // // // // //               switchToNextPlayer();
// // // // // // // // // // // //             });
// // // // // // // // // // // //           },
// // // // // // // // // // // //           child: Stack(
// // // // // // // // // // // //             children: [
// // // // // // // // // // // //               Center(
// // // // // // // // // // // //                 child: Column(
// // // // // // // // // // // //                   mainAxisAlignment: MainAxisAlignment.center,
// // // // // // // // // // // //                   children: [
// // // // // // // // // // // //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // // // // // // // // // // //                     SizedBox(height: 16.h),
// // // // // // // // // // // //                     Text(
// // // // // // // // // // // //                       formatDuration(player.seconds),
// // // // // // // // // // // //                       style: TextStyle(
// // // // // // // // // // // //                         fontSize: 64.sp,
// // // // // // // // // // // //                         fontWeight: FontWeight.bold,
// // // // // // // // // // // //                         color: Colors.white,
// // // // // // // // // // // //                       ),
// // // // // // // // // // // //                     ),
// // // // // // // // // // // //                     SizedBox(height: 24.h),
// // // // // // // // // // // //                     ElevatedButton(
// // // // // // // // // // // //                       onPressed: () {
// // // // // // // // // // // //                         setState(() {
// // // // // // // // // // // //                           widget.players[currentIndex].isCompleted = true;
// // // // // // // // // // // //                           pauseTimer();
// // // // // // // // // // // //                           switchToNextPlayer();
// // // // // // // // // // // //                         });
// // // // // // // // // // // //                       },
// // // // // // // // // // // //                       child: const Text('Complete'),
// // // // // // // // // // // //                     ),
// // // // // // // // // // // //                     SizedBox(height: 12.h),
// // // // // // // // // // // //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // // // // // // // // // // //                   ],
// // // // // // // // // // // //                 ),
// // // // // // // // // // // //               ),
// // // // // // // // // // // //               Positioned(
// // // // // // // // // // // //                 top: 20.h,
// // // // // // // // // // // //                 right: 20.w,
// // // // // // // // // // // //                 child: IconButton(
// // // // // // // // // // // //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // // // // // // // // // // //                   onPressed: () {
// // // // // // // // // // // //                     pauseTimer();
// // // // // // // // // // // //                     showDialog(
// // // // // // // // // // // //                       context: context,
// // // // // // // // // // // //                       builder:
// // // // // // // // // // // //                           (context) => AlertDialog(
// // // // // // // // // // // //                             title: const Text('홈으로 이동'),
// // // // // // // // // // // //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // // // // // // // // // // //                             actions: [
// // // // // // // // // // // //                               TextButton(
// // // // // // // // // // // //                                 onPressed: () {
// // // // // // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // // //                                 },
// // // // // // // // // // // //                                 child: const Text('설정 유지'),
// // // // // // // // // // // //                               ),
// // // // // // // // // // // //                               TextButton(
// // // // // // // // // // // //                                 onPressed: () {
// // // // // // // // // // // //                                   resetAll();
// // // // // // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // // //                                 },
// // // // // // // // // // // //                                 child: const Text('초기화 후 이동'),
// // // // // // // // // // // //                               ),
// // // // // // // // // // // //                               TextButton(
// // // // // // // // // // // //                                 onPressed: () => Navigator.of(context).pop(),
// // // // // // // // // // // //                                 child: const Text('취소'),
// // // // // // // // // // // //                               ),
// // // // // // // // // // // //                             ],
// // // // // // // // // // // //                           ),
// // // // // // // // // // // //                     );
// // // // // // // // // // // //                   },
// // // // // // // // // // // //                 ),
// // // // // // // // // // // //               ),
// // // // // // // // // // // //             ],
// // // // // // // // // // // //           ),
// // // // // // // // // // // //         ),
// // // // // // // // // // // //       ),
// // // // // // // // // // // //     );
// // // // // // // // // // // //   }
// // // // // // // // // // // // }

// // // // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // // // // // // // // // import 'package:flutter/cupertino.dart';
// // // // // // // // // // // import 'dart:async';
// // // // // // // // // // // import 'dart:convert';
// // // // // // // // // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // // // // // // // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // // // // // // // // // void main() async {
// // // // // // // // // // //   WidgetsFlutterBinding.ensureInitialized();
// // // // // // // // // // //   final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // //   final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // // // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // // // // // // // // // }

// // // // // // // // // // // class MyApp extends StatelessWidget {
// // // // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // // // //   const MyApp({super.key, this.lastUsedPreset});

// // // // // // // // // // //   @override
// // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // //     return ScreenUtilInit(
// // // // // // // // // // //       designSize: const Size(390, 844),
// // // // // // // // // // //       builder:
// // // // // // // // // // //           (context, child) => MaterialApp(
// // // // // // // // // // //             debugShowCheckedModeBanner: false,
// // // // // // // // // // //             title: 'Multi Player Timer',
// // // // // // // // // // //             theme: ThemeData(
// // // // // // // // // // //               scaffoldBackgroundColor: Colors.white,
// // // // // // // // // // //               fontFamily: 'Roboto',
// // // // // // // // // // //               textTheme: TextTheme(
// // // // // // // // // // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // // // // // // // // // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // // // // // // // // // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // // // // // // // // // //               ),
// // // // // // // // // // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // // // // // // // // // //                 style: ElevatedButton.styleFrom(
// // // // // // // // // // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // // // // // // // // // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // // // // // // // // // //                 ),
// // // // // // // // // // //               ),
// // // // // // // // // // //             ),
// // // // // // // // // // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // // // // // // // // // //           ),
// // // // // // // // // // //     );
// // // // // // // // // // //   }
// // // // // // // // // // // }

// // // // // // // // // // // class Player {
// // // // // // // // // // //   String name;
// // // // // // // // // // //   int seconds;
// // // // // // // // // // //   int originalSeconds;
// // // // // // // // // // //   Color color;
// // // // // // // // // // //   bool isCompleted;
// // // // // // // // // // //   int elapsedSeconds = 0;

// // // // // // // // // // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // // // // // // // // // //     : originalSeconds = seconds;

// // // // // // // // // // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // // // // // // // // // //   static Player fromJson(Map<String, dynamic> json) =>
// // // // // // // // // // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // // // // // // // // // }

// // // // // // // // // // // class PlayerSetupScreen extends StatefulWidget {
// // // // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // // // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // // // // // // // // // //   @override
// // // // // // // // // // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // // // // // // // // // }

// // // // // // // // // // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // // // // // // // // // //   final List<Player> players = [];
// // // // // // // // // // //   final List<TextEditingController> nameControllers = [];
// // // // // // // // // // //   String? currentPresetName;

// // // // // // // // // // //   @override
// // // // // // // // // // //   void initState() {
// // // // // // // // // // //     super.initState();
// // // // // // // // // // //     if (widget.lastUsedPreset != null) {
// // // // // // // // // // //       currentPresetName = widget.lastUsedPreset;
// // // // // // // // // // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // // // // // // // // // //     } else {
// // // // // // // // // // //       initializePlayers(2);
// // // // // // // // // // //     }
// // // // // // // // // // //   }

// // // // // // // // // // //   void initializePlayers(int count) {
// // // // // // // // // // //     players.clear();
// // // // // // // // // // //     nameControllers.clear();
// // // // // // // // // // //     for (int i = 0; i < count; i++) {
// // // // // // // // // // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // // // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // // // // // // // // // //     }
// // // // // // // // // // //     setState(() {});
// // // // // // // // // // //   }

// // // // // // // // // // //   void addPlayer() {
// // // // // // // // // // //     final newIndex = players.length;
// // // // // // // // // // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // // // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // // // // // // // // // //     setState(() {});
// // // // // // // // // // //   }

// // // // // // // // // // //   void removePlayer(int index) {
// // // // // // // // // // //     players.removeAt(index);
// // // // // // // // // // //     nameControllers.removeAt(index);
// // // // // // // // // // //     setState(() {});
// // // // // // // // // // //   }

// // // // // // // // // // //   Future<void> saveCurrentSettings(String presetName) async {
// // // // // // // // // // //     if (presetName.isEmpty) return;
// // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // //     final encoded = players.map((p) => p.toJson()).toList();
// // // // // // // // // // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // // // // // // // // // //     await prefs.setString('last_used_preset', presetName);
// // // // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // //     if (!names.contains(presetName)) {
// // // // // // // // // // //       names.add(presetName);
// // // // // // // // // // //       await prefs.setStringList('preset_names', names);
// // // // // // // // // // //     }
// // // // // // // // // // //     setState(() {
// // // // // // // // // // //       currentPresetName = presetName;
// // // // // // // // // // //     });
// // // // // // // // // // //   }

// // // // // // // // // // //   Future<void> deletePreset(String presetName) async {
// // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // //     await prefs.remove('preset_$presetName');
// // // // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // //     names.remove(presetName);
// // // // // // // // // // //     await prefs.setStringList('preset_names', names);
// // // // // // // // // // //     final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // // // //     if (lastUsed == presetName) {
// // // // // // // // // // //       await prefs.remove('last_used_preset');
// // // // // // // // // // //       setState(() {
// // // // // // // // // // //         currentPresetName = null;
// // // // // // // // // // //       });
// // // // // // // // // // //     }
// // // // // // // // // // //   }

// // // // // // // // // // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // // // // // // // // // //     try {
// // // // // // // // // // //       final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // //       final jsonString = prefs.getString('preset_$presetName');
// // // // // // // // // // //       if (jsonString == null) return;
// // // // // // // // // // //       final List decoded = jsonDecode(jsonString);
// // // // // // // // // // //       players.clear();
// // // // // // // // // // //       nameControllers.clear();
// // // // // // // // // // //       for (var p in decoded) {
// // // // // // // // // // //         final player = Player.fromJson(p);
// // // // // // // // // // //         players.add(player);
// // // // // // // // // // //         nameControllers.add(TextEditingController(text: player.name));
// // // // // // // // // // //       }
// // // // // // // // // // //       setState(() {
// // // // // // // // // // //         currentPresetName = presetName;
// // // // // // // // // // //       });
// // // // // // // // // // //       if (!autoLoad) {
// // // // // // // // // // //         await prefs.setString('last_used_preset', presetName);
// // // // // // // // // // //       }
// // // // // // // // // // //     } catch (_) {
// // // // // // // // // // //       ScaffoldMessenger.of(
// // // // // // // // // // //         context,
// // // // // // // // // // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // // // // // // // // // //     }
// // // // // // // // // // //   }

// // // // // // // // // // //   void showSaveDialog() async {
// // // // // // // // // // //     final controller = TextEditingController();
// // // // // // // // // // //     await showDialog(
// // // // // // // // // // //       context: context,
// // // // // // // // // // //       builder:
// // // // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // // // //             title: const Text("설정 이름 저장"),
// // // // // // // // // // //             content: TextField(
// // // // // // // // // // //               controller: controller,
// // // // // // // // // // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // // // // // // // // // //             ),
// // // // // // // // // // //             actions: [
// // // // // // // // // // //               TextButton(
// // // // // // // // // // //                 onPressed: () async {
// // // // // // // // // // //                   await saveCurrentSettings(controller.text.trim());
// // // // // // // // // // //                   Navigator.of(ctx).pop();
// // // // // // // // // // //                 },
// // // // // // // // // // //                 child: const Text("저장"),
// // // // // // // // // // //               ),
// // // // // // // // // // //             ],
// // // // // // // // // // //           ),
// // // // // // // // // // //     );
// // // // // // // // // // //   }

// // // // // // // // // // //   void showLoadDialog() async {
// // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // // //     if (presetNames.isEmpty) {
// // // // // // // // // // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // // // // // // // // // //       return;
// // // // // // // // // // //     }
// // // // // // // // // // //     await showDialog(
// // // // // // // // // // //       context: context,
// // // // // // // // // // //       builder:
// // // // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // // // //             title: const Text("불러올 설정 선택"),
// // // // // // // // // // //             content: SingleChildScrollView(
// // // // // // // // // // //               child: Column(
// // // // // // // // // // //                 mainAxisSize: MainAxisSize.min,
// // // // // // // // // // //                 children:
// // // // // // // // // // //                     presetNames.map((name) {
// // // // // // // // // // //                       return ListTile(
// // // // // // // // // // //                         title: Text(name),
// // // // // // // // // // //                         trailing: IconButton(
// // // // // // // // // // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // // // // // // // // // //                           onPressed: () async {
// // // // // // // // // // //                             Navigator.of(ctx).pop();
// // // // // // // // // // //                             await deletePreset(name);
// // // // // // // // // // //                           },
// // // // // // // // // // //                         ),
// // // // // // // // // // //                         onTap: () async {
// // // // // // // // // // //                           Navigator.of(ctx).pop();
// // // // // // // // // // //                           await loadPreset(name);
// // // // // // // // // // //                         },
// // // // // // // // // // //                       );
// // // // // // // // // // //                     }).toList(),
// // // // // // // // // // //               ),
// // // // // // // // // // //             ),
// // // // // // // // // // //           ),
// // // // // // // // // // //     );
// // // // // // // // // // //   }

// // // // // // // // // // //   void clearAllSettings() async {
// // // // // // // // // // //     initializePlayers(2);
// // // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // // //     await prefs.remove('last_used_preset');
// // // // // // // // // // //     setState(() {
// // // // // // // // // // //       currentPresetName = null;
// // // // // // // // // // //     });
// // // // // // // // // // //   }

// // // // // // // // // // //   @override
// // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // //     return Scaffold(
// // // // // // // // // // //       body: SafeArea(
// // // // // // // // // // //         child: Padding(
// // // // // // // // // // //           padding: EdgeInsets.all(24.w),
// // // // // // // // // // //           child: Column(
// // // // // // // // // // //             crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // //             children: [
// // // // // // // // // // //               SizedBox(height: 40.h),
// // // // // // // // // // //               Text(
// // // // // // // // // // //                 'TimeSquad',
// // // // // // // // // // //                 style: TextStyle(
// // // // // // // // // // //                   fontSize: 36.sp,
// // // // // // // // // // //                   fontWeight: FontWeight.w800,
// // // // // // // // // // //                   letterSpacing: 1.2,
// // // // // // // // // // //                   color: Colors.black87,
// // // // // // // // // // //                 ),
// // // // // // // // // // //               ),
// // // // // // // // // // //               SizedBox(height: 4.h),
// // // // // // // // // // //               Row(
// // // // // // // // // // //                 children: [
// // // // // // // // // // //                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// // // // // // // // // // //                   const Spacer(),
// // // // // // // // // // //                   Row(
// // // // // // // // // // //                     mainAxisSize: MainAxisSize.min,
// // // // // // // // // // //                     children: [
// // // // // // // // // // //                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // // // // // // // // // //                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // // // // // // // // // //                       IconButton(
// // // // // // // // // // //                         icon: const Icon(FeatherIcons.rotateCcw),
// // // // // // // // // // //                         onPressed: clearAllSettings,
// // // // // // // // // // //                       ),
// // // // // // // // // // //                     ],
// // // // // // // // // // //                   ),
// // // // // // // // // // //                 ],
// // // // // // // // // // //               ),
// // // // // // // // // // //               SizedBox(height: 24.h),
// // // // // // // // // // //               Expanded(
// // // // // // // // // // //                 child: ReorderableListView.builder(
// // // // // // // // // // //                   padding: EdgeInsets.only(bottom: 120.h),
// // // // // // // // // // //                   buildDefaultDragHandles: false,
// // // // // // // // // // //                   proxyDecorator: (child, index, animation) {
// // // // // // // // // // //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // // // // // // // // // //                     return ScaleTransition(
// // // // // // // // // // //                       scale: scale,
// // // // // // // // // // //                       child: Material(
// // // // // // // // // // //                         elevation: 0,
// // // // // // // // // // //                         shadowColor: Colors.transparent,
// // // // // // // // // // //                         color: Colors.transparent,
// // // // // // // // // // //                         child: child,
// // // // // // // // // // //                       ),
// // // // // // // // // // //                     );
// // // // // // // // // // //                   },
// // // // // // // // // // //                   itemCount: players.length,
// // // // // // // // // // //                   onReorder: (oldIndex, newIndex) {
// // // // // // // // // // //                     setState(() {
// // // // // // // // // // //                       if (newIndex > oldIndex) newIndex--;
// // // // // // // // // // //                       final player = players.removeAt(oldIndex);
// // // // // // // // // // //                       final controller = nameControllers.removeAt(oldIndex);
// // // // // // // // // // //                       players.insert(newIndex, player);
// // // // // // // // // // //                       nameControllers.insert(newIndex, controller);
// // // // // // // // // // //                     });
// // // // // // // // // // //                   },
// // // // // // // // // // //                   itemBuilder: (context, index) {
// // // // // // // // // // //                     final player = players[index];
// // // // // // // // // // //                     const double borderRadius = 20.0;

// // // // // // // // // // //                     return ReorderableDelayedDragStartListener(
// // // // // // // // // // //                       // <--- REORDERED: This should be the direct child
// // // // // // // // // // //                       key: ValueKey(player),
// // // // // // // // // // //                       index: index,
// // // // // // // // // // //                       child: Dismissible(
// // // // // // // // // // //                         key: ValueKey(player),
// // // // // // // // // // //                         direction: DismissDirection.startToEnd,
// // // // // // // // // // //                         background: Container(
// // // // // // // // // // //                           margin: EdgeInsets.only(bottom: 12.h),
// // // // // // // // // // //                           child: ClipRRect(
// // // // // // // // // // //                             borderRadius: BorderRadius.circular(borderRadius.r),
// // // // // // // // // // //                             child: Container(
// // // // // // // // // // //                               alignment: Alignment.centerLeft,
// // // // // // // // // // //                               padding: EdgeInsets.only(left: 20.w),
// // // // // // // // // // //                               color: Colors.redAccent,
// // // // // // // // // // //                               child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // // // // // // // // // //                             ),
// // // // // // // // // // //                           ),
// // // // // // // // // // //                         ),
// // // // // // // // // // //                         onDismissed: (_) {
// // // // // // // // // // //                           setState(() {
// // // // // // // // // // //                             players.remove(player);
// // // // // // // // // // //                             nameControllers.removeAt(index);
// // // // // // // // // // //                           });
// // // // // // // // // // //                         },
// // // // // // // // // // //                         child: Container(
// // // // // // // // // // //                           // This is the player card itself
// // // // // // // // // // //                           margin: EdgeInsets.only(bottom: 12.h),
// // // // // // // // // // //                           child: ClipRRect(
// // // // // // // // // // //                             borderRadius: BorderRadius.circular(borderRadius.r),
// // // // // // // // // // //                             child: Container(
// // // // // // // // // // //                               padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // // // // // // // // // //                               decoration: BoxDecoration(
// // // // // // // // // // //                                 color: Color.lerp(Colors.white, player.color, 0.2),
// // // // // // // // // // //                               ),
// // // // // // // // // // //                               child: Row(
// // // // // // // // // // //                                 children: [
// // // // // // // // // // //                                   Container(
// // // // // // // // // // //                                     width: 40.w,
// // // // // // // // // // //                                     height: 40.w,
// // // // // // // // // // //                                     alignment: Alignment.center,
// // // // // // // // // // //                                     decoration: BoxDecoration(
// // // // // // // // // // //                                       color: Colors.white,
// // // // // // // // // // //                                       borderRadius: BorderRadius.circular(12.r),
// // // // // // // // // // //                                     ),
// // // // // // // // // // //                                     child: Text(
// // // // // // // // // // //                                       '${index + 1}',
// // // // // // // // // // //                                       style: TextStyle(
// // // // // // // // // // //                                         fontSize: 18.sp,
// // // // // // // // // // //                                         fontWeight: FontWeight.bold,
// // // // // // // // // // //                                       ),
// // // // // // // // // // //                                     ),
// // // // // // // // // // //                                   ),
// // // // // // // // // // //                                   SizedBox(width: 12.w),
// // // // // // // // // // //                                   Expanded(
// // // // // // // // // // //                                     child: Column(
// // // // // // // // // // //                                       crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // // //                                       children: [
// // // // // // // // // // //                                         Container(
// // // // // // // // // // //                                           decoration: BoxDecoration(
// // // // // // // // // // //                                             color: Colors.white.withOpacity(0.6),
// // // // // // // // // // //                                             borderRadius: BorderRadius.circular(8.r),
// // // // // // // // // // //                                           ),
// // // // // // // // // // //                                           padding: EdgeInsets.symmetric(
// // // // // // // // // // //                                             horizontal: 8.w,
// // // // // // // // // // //                                             vertical: 4.h,
// // // // // // // // // // //                                           ),
// // // // // // // // // // //                                           child: TextField(
// // // // // // // // // // //                                             controller: nameControllers[index],
// // // // // // // // // // //                                             onChanged: (val) => players[index].name = val,
// // // // // // // // // // //                                             style: TextStyle(
// // // // // // // // // // //                                               fontSize: 16.sp,
// // // // // // // // // // //                                               fontWeight: FontWeight.w500,
// // // // // // // // // // //                                             ),
// // // // // // // // // // //                                             decoration: const InputDecoration.collapsed(
// // // // // // // // // // //                                               hintText: 'Enter name',
// // // // // // // // // // //                                             ),
// // // // // // // // // // //                                           ),
// // // // // // // // // // //                                         ),
// // // // // // // // // // //                                         SizedBox(height: 8.h),
// // // // // // // // // // //                                         GestureDetector(
// // // // // // // // // // //                                           onTap: () async {
// // // // // // // // // // //                                             Duration selectedDuration = Duration(
// // // // // // // // // // //                                               seconds: players[index].originalSeconds,
// // // // // // // // // // //                                             );
// // // // // // // // // // //                                             await showModalBottomSheet(
// // // // // // // // // // //                                               context: context,
// // // // // // // // // // //                                               builder:
// // // // // // // // // // //                                                   (context) => SizedBox(
// // // // // // // // // // //                                                     height: 200,
// // // // // // // // // // //                                                     child: CupertinoTimerPicker(
// // // // // // // // // // //                                                       mode: CupertinoTimerPickerMode.hms,
// // // // // // // // // // //                                                       initialTimerDuration: selectedDuration,
// // // // // // // // // // //                                                       onTimerDurationChanged: (
// // // // // // // // // // //                                                         Duration newDuration,
// // // // // // // // // // //                                                       ) {
// // // // // // // // // // //                                                         setState(() {
// // // // // // // // // // //                                                           players[index].seconds =
// // // // // // // // // // //                                                               newDuration.inSeconds;
// // // // // // // // // // //                                                           players[index].originalSeconds =
// // // // // // // // // // //                                                               newDuration.inSeconds;
// // // // // // // // // // //                                                         });
// // // // // // // // // // //                                                       },
// // // // // // // // // // //                                                     ),
// // // // // // // // // // //                                                   ),
// // // // // // // // // // //                                             );
// // // // // // // // // // //                                           },
// // // // // // // // // // //                                           child: Container(
// // // // // // // // // // //                                             decoration: BoxDecoration(
// // // // // // // // // // //                                               color: Colors.white.withOpacity(0.6),
// // // // // // // // // // //                                               borderRadius: BorderRadius.circular(8.r),
// // // // // // // // // // //                                             ),
// // // // // // // // // // //                                             padding: EdgeInsets.symmetric(
// // // // // // // // // // //                                               horizontal: 12.w,
// // // // // // // // // // //                                               vertical: 10.h,
// // // // // // // // // // //                                             ),
// // // // // // // // // // //                                             child: Text(
// // // // // // // // // // //                                               'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // // // // // // // // // //                                               style: TextStyle(
// // // // // // // // // // //                                                 fontSize: 16.sp,
// // // // // // // // // // //                                                 fontWeight: FontWeight.w500,
// // // // // // // // // // //                                               ),
// // // // // // // // // // //                                             ),
// // // // // // // // // // //                                           ),
// // // // // // // // // // //                                         ),
// // // // // // // // // // //                                       ],
// // // // // // // // // // //                                     ),
// // // // // // // // // // //                                   ),
// // // // // // // // // // //                                   SizedBox(width: 8.w),
// // // // // // // // // // //                                   ElevatedButton(
// // // // // // // // // // //                                     onPressed: () async {
// // // // // // // // // // //                                       FocusScope.of(context).unfocus();
// // // // // // // // // // //                                       final color = await showDialog<Color>(
// // // // // // // // // // //                                         context: context,
// // // // // // // // // // //                                         builder:
// // // // // // // // // // //                                             (context) => AlertDialog(
// // // // // // // // // // //                                               title: const Text('Select Color'),
// // // // // // // // // // //                                               content: Wrap(
// // // // // // // // // // //                                                 spacing: 8.w,
// // // // // // // // // // //                                                 children:
// // // // // // // // // // //                                                     Colors.primaries.map((c) {
// // // // // // // // // // //                                                       return GestureDetector(
// // // // // // // // // // //                                                         onTap: () => Navigator.pop(context, c),
// // // // // // // // // // //                                                         child: Container(
// // // // // // // // // // //                                                           width: 30.w,
// // // // // // // // // // //                                                           height: 30.w,
// // // // // // // // // // //                                                           decoration: BoxDecoration(
// // // // // // // // // // //                                                             color: c,
// // // // // // // // // // //                                                             borderRadius: BorderRadius.circular(
// // // // // // // // // // //                                                               15.r,
// // // // // // // // // // //                                                             ),
// // // // // // // // // // //                                                           ),
// // // // // // // // // // //                                                         ),
// // // // // // // // // // //                                                       );
// // // // // // // // // // //                                                     }).toList(),
// // // // // // // // // // //                                               ),
// // // // // // // // // // //                                             ),
// // // // // // // // // // //                                       );
// // // // // // // // // // //                                       if (color != null) {
// // // // // // // // // // //                                         setState(() => players[index].color = color);
// // // // // // // // // // //                                       }
// // // // // // // // // // //                                     },
// // // // // // // // // // //                                     style: ElevatedButton.styleFrom(
// // // // // // // // // // //                                       backgroundColor: player.color,
// // // // // // // // // // //                                       foregroundColor: Colors.white,
// // // // // // // // // // //                                       shape: RoundedRectangleBorder(
// // // // // // // // // // //                                         borderRadius: BorderRadius.circular(12.r),
// // // // // // // // // // //                                       ),
// // // // // // // // // // //                                     ),
// // // // // // // // // // //                                     child: const Text('Color'),
// // // // // // // // // // //                                   ),
// // // // // // // // // // //                                 ],
// // // // // // // // // // //                               ),
// // // // // // // // // // //                             ),
// // // // // // // // // // //                           ),
// // // // // // // // // // //                         ),
// // // // // // // // // // //                       ),
// // // // // // // // // // //                     );
// // // // // // // // // // //                   },
// // // // // // // // // // //                 ),
// // // // // // // // // // //               ),
// // // // // // // // // // //             ],
// // // // // // // // // // //           ),
// // // // // // // // // // //         ),
// // // // // // // // // // //       ),
// // // // // // // // // // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // // // // // // // // // //       floatingActionButton: Padding(
// // // // // // // // // // //         padding: EdgeInsets.only(bottom: 16.h),
// // // // // // // // // // //         child: Row(
// // // // // // // // // // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // // // // // // // // // //           children: [
// // // // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // // // //               heroTag: 'addPlayerBtn',
// // // // // // // // // // //               onPressed: addPlayer,
// // // // // // // // // // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // // // // // // // // // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // // // // // // // // // //               backgroundColor: Colors.indigo,
// // // // // // // // // // //             ),
// // // // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // // // //               heroTag: 'startBtn',
// // // // // // // // // // //               onPressed: () {
// // // // // // // // // // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // // // // // // // // // //                   Navigator.push(
// // // // // // // // // // //                     context,
// // // // // // // // // // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // // // // // // // // // //                   );
// // // // // // // // // // //                 } else {
// // // // // // // // // // //                   ScaffoldMessenger.of(
// // // // // // // // // // //                     context,
// // // // // // // // // // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // // // // // // // // // //                 }
// // // // // // // // // // //               },
// // // // // // // // // // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // // // // // // // // // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // // // // // // // // // //               backgroundColor: Colors.teal,
// // // // // // // // // // //             ),
// // // // // // // // // // //           ],
// // // // // // // // // // //         ),
// // // // // // // // // // //       ),
// // // // // // // // // // //     );
// // // // // // // // // // //   }
// // // // // // // // // // // }

// // // // // // // // // // // class TimerScreen extends StatefulWidget {
// // // // // // // // // // //   final List<Player> players;
// // // // // // // // // // //   const TimerScreen({super.key, required this.players});

// // // // // // // // // // //   @override
// // // // // // // // // // //   State<TimerScreen> createState() => _TimerScreenState();
// // // // // // // // // // // }

// // // // // // // // // // // class _TimerScreenState extends State<TimerScreen> {
// // // // // // // // // // //   Timer? _timer;
// // // // // // // // // // //   int currentIndex = 0;

// // // // // // // // // // //   @override
// // // // // // // // // // //   void initState() {
// // // // // // // // // // //     super.initState();
// // // // // // // // // // //     startTimer();
// // // // // // // // // // //   }

// // // // // // // // // // //   void startTimer() {
// // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // // // // // // // // // //       setState(() {
// // // // // // // // // // //         final player = widget.players[currentIndex];
// // // // // // // // // // //         if (player.seconds > 0) {
// // // // // // // // // // //           player.seconds--;
// // // // // // // // // // //           player.elapsedSeconds++;
// // // // // // // // // // //         } else {
// // // // // // // // // // //           player.isCompleted = true;
// // // // // // // // // // //           switchToNextPlayer();
// // // // // // // // // // //         }
// // // // // // // // // // //       });
// // // // // // // // // // //     });
// // // // // // // // // // //   }

// // // // // // // // // // //   void pauseTimer() {
// // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // //   }

// // // // // // // // // // //   void switchToNextPlayer() {
// // // // // // // // // // //     pauseTimer();
// // // // // // // // // // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // // // // // // // // // //       showSummaryDialog();
// // // // // // // // // // //       return;
// // // // // // // // // // //     }
// // // // // // // // // // //     do {
// // // // // // // // // // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // // // // // // // // // //     } while (widget.players[currentIndex].isCompleted);
// // // // // // // // // // //     startTimer();
// // // // // // // // // // //   }

// // // // // // // // // // //   void resetAll() {
// // // // // // // // // // //     for (var p in widget.players) {
// // // // // // // // // // //       p.seconds = p.originalSeconds;
// // // // // // // // // // //       p.elapsedSeconds = 0;
// // // // // // // // // // //       p.isCompleted = false;
// // // // // // // // // // //     }
// // // // // // // // // // //     setState(() {
// // // // // // // // // // //       currentIndex = 0;
// // // // // // // // // // //     });
// // // // // // // // // // //     startTimer();
// // // // // // // // // // //   }

// // // // // // // // // // //   String formatDuration(int seconds) {
// // // // // // // // // // //     final d = Duration(seconds: seconds);
// // // // // // // // // // //     final hours = d.inHours.toString().padLeft(2, '0');
// // // // // // // // // // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // // // // // // // // // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // // // // // // // // // //     return '$hours:$minutes:$secs';
// // // // // // // // // // //   }

// // // // // // // // // // //   void showSummaryDialog() {
// // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // //     showDialog(
// // // // // // // // // // //       context: context,
// // // // // // // // // // //       builder:
// // // // // // // // // // //           (_) => AlertDialog(
// // // // // // // // // // //             title: const Text('Round Complete'),
// // // // // // // // // // //             content: Column(
// // // // // // // // // // //               mainAxisSize: MainAxisSize.min,
// // // // // // // // // // //               children:
// // // // // // // // // // //                   widget.players.map((p) {
// // // // // // // // // // //                     final formatted = formatDuration(p.elapsedSeconds);
// // // // // // // // // // //                     return Text('${p.name} ⏱ $formatted');
// // // // // // // // // // //                   }).toList(),
// // // // // // // // // // //             ),
// // // // // // // // // // //             actions: [
// // // // // // // // // // //               TextButton(
// // // // // // // // // // //                 onPressed: () {
// // // // // // // // // // //                   Navigator.of(context).pop();
// // // // // // // // // // //                   resetAll();
// // // // // // // // // // //                 },
// // // // // // // // // // //                 child: const Text('Next Round'),
// // // // // // // // // // //               ),
// // // // // // // // // // //               TextButton(
// // // // // // // // // // //                 onPressed: () {
// // // // // // // // // // //                   resetAll();
// // // // // // // // // // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // //                 },
// // // // // // // // // // //                 child: const Text('Home'),
// // // // // // // // // // //               ),
// // // // // // // // // // //             ],
// // // // // // // // // // //           ),
// // // // // // // // // // //     );
// // // // // // // // // // //   }

// // // // // // // // // // //   @override
// // // // // // // // // // //   void dispose() {
// // // // // // // // // // //     _timer?.cancel();
// // // // // // // // // // //     super.dispose();
// // // // // // // // // // //   }

// // // // // // // // // // //   @override
// // // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // // //     final player = widget.players[currentIndex];
// // // // // // // // // // //     return Scaffold(
// // // // // // // // // // //       backgroundColor: player.color,
// // // // // // // // // // //       body: SafeArea(
// // // // // // // // // // //         child: GestureDetector(
// // // // // // // // // // //           behavior: HitTestBehavior.opaque,
// // // // // // // // // // //           onTap: () {
// // // // // // // // // // //             setState(() {
// // // // // // // // // // //               pauseTimer();
// // // // // // // // // // //               switchToNextPlayer();
// // // // // // // // // // //             });
// // // // // // // // // // //           },
// // // // // // // // // // //           child: Stack(
// // // // // // // // // // //             children: [
// // // // // // // // // // //               Center(
// // // // // // // // // // //                 child: Column(
// // // // // // // // // // //                   mainAxisAlignment: MainAxisAlignment.center,
// // // // // // // // // // //                   children: [
// // // // // // // // // // //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // // // // // // // // // //                     SizedBox(height: 16.h),
// // // // // // // // // // //                     Text(
// // // // // // // // // // //                       formatDuration(player.seconds),
// // // // // // // // // // //                       style: TextStyle(
// // // // // // // // // // //                         fontSize: 64.sp,
// // // // // // // // // // //                         fontWeight: FontWeight.bold,
// // // // // // // // // // //                         color: Colors.white,
// // // // // // // // // // //                       ),
// // // // // // // // // // //                     ),
// // // // // // // // // // //                     SizedBox(height: 24.h),
// // // // // // // // // // //                     ElevatedButton(
// // // // // // // // // // //                       onPressed: () {
// // // // // // // // // // //                         setState(() {
// // // // // // // // // // //                           widget.players[currentIndex].isCompleted = true;
// // // // // // // // // // //                           pauseTimer();
// // // // // // // // // // //                           switchToNextPlayer();
// // // // // // // // // // //                         });
// // // // // // // // // // //                       },
// // // // // // // // // // //                       child: const Text('Complete'),
// // // // // // // // // // //                     ),
// // // // // // // // // // //                     SizedBox(height: 12.h),
// // // // // // // // // // //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // // // // // // // // // //                   ],
// // // // // // // // // // //                 ),
// // // // // // // // // // //               ),
// // // // // // // // // // //               Positioned(
// // // // // // // // // // //                 top: 20.h,
// // // // // // // // // // //                 right: 20.w,
// // // // // // // // // // //                 child: IconButton(
// // // // // // // // // // //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // // // // // // // // // //                   onPressed: () {
// // // // // // // // // // //                     pauseTimer();
// // // // // // // // // // //                     showDialog(
// // // // // // // // // // //                       context: context,
// // // // // // // // // // //                       builder:
// // // // // // // // // // //                           (context) => AlertDialog(
// // // // // // // // // // //                             title: const Text('홈으로 이동'),
// // // // // // // // // // //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // // // // // // // // // //                             actions: [
// // // // // // // // // // //                               TextButton(
// // // // // // // // // // //                                 onPressed: () {
// // // // // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // //                                 },
// // // // // // // // // // //                                 child: const Text('설정 유지'),
// // // // // // // // // // //                               ),
// // // // // // // // // // //                               TextButton(
// // // // // // // // // // //                                 onPressed: () {
// // // // // // // // // // //                                   resetAll();
// // // // // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // // //                                 },
// // // // // // // // // // //                                 child: const Text('초기화 후 이동'),
// // // // // // // // // // //                               ),
// // // // // // // // // // //                               TextButton(
// // // // // // // // // // //                                 onPressed: () => Navigator.of(context).pop(),
// // // // // // // // // // //                                 child: const Text('취소'),
// // // // // // // // // // //                               ),
// // // // // // // // // // //                             ],
// // // // // // // // // // //                           ),
// // // // // // // // // // //                     );
// // // // // // // // // // //                   },
// // // // // // // // // // //                 ),
// // // // // // // // // // //               ),
// // // // // // // // // // //             ],
// // // // // // // // // // //           ),
// // // // // // // // // // //         ),
// // // // // // // // // // //       ),
// // // // // // // // // // //     );
// // // // // // // // // // //   }
// // // // // // // // // // // }

// // // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // // // // // // // // import 'package:flutter/cupertino.dart';
// // // // // // // // // // import 'dart:async';
// // // // // // // // // // import 'dart:convert';
// // // // // // // // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // // // // // // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // // // // // // // // void main() async {
// // // // // // // // // //   WidgetsFlutterBinding.ensureInitialized();
// // // // // // // // // //   final prefs = await SharedPreferences.getInstance();
// // // // // // // // // //   final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // // // // // // // // }

// // // // // // // // // // class MyApp extends StatelessWidget {
// // // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // // //   const MyApp({super.key, this.lastUsedPreset});

// // // // // // // // // //   @override
// // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // //     return ScreenUtilInit(
// // // // // // // // // //       designSize: const Size(390, 844),
// // // // // // // // // //       builder:
// // // // // // // // // //           (context, child) => MaterialApp(
// // // // // // // // // //             debugShowCheckedModeBanner: false,
// // // // // // // // // //             title: 'Multi Player Timer',
// // // // // // // // // //             theme: ThemeData(
// // // // // // // // // //               scaffoldBackgroundColor: Colors.white,
// // // // // // // // // //               fontFamily: 'Roboto',
// // // // // // // // // //               textTheme: TextTheme(
// // // // // // // // // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // // // // // // // // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // // // // // // // // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // // // // // // // // //               ),
// // // // // // // // // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // // // // // // // // //                 style: ElevatedButton.styleFrom(
// // // // // // // // // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // // // // // // // // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // // // // // // // // //                 ),
// // // // // // // // // //               ),
// // // // // // // // // //             ),
// // // // // // // // // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // // // // // // // // //           ),
// // // // // // // // // //     );
// // // // // // // // // //   }
// // // // // // // // // // }

// // // // // // // // // // class Player {
// // // // // // // // // //   String name;
// // // // // // // // // //   int seconds;
// // // // // // // // // //   int originalSeconds;
// // // // // // // // // //   Color color;
// // // // // // // // // //   bool isCompleted;
// // // // // // // // // //   int elapsedSeconds = 0;

// // // // // // // // // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // // // // // // // // //     : originalSeconds = seconds;

// // // // // // // // // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // // // // // // // // //   static Player fromJson(Map<String, dynamic> json) =>
// // // // // // // // // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // // // // // // // // }

// // // // // // // // // // class PlayerSetupScreen extends StatefulWidget {
// // // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // // // // // // // // //   @override
// // // // // // // // // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // // // // // // // // }

// // // // // // // // // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // // // // // // // // //   final List<Player> players = [];
// // // // // // // // // //   final List<TextEditingController> nameControllers = [];
// // // // // // // // // //   String? currentPresetName;

// // // // // // // // // //   @override
// // // // // // // // // //   void initState() {
// // // // // // // // // //     super.initState();
// // // // // // // // // //     if (widget.lastUsedPreset != null) {
// // // // // // // // // //       currentPresetName = widget.lastUsedPreset;
// // // // // // // // // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // // // // // // // // //     } else {
// // // // // // // // // //       initializePlayers(2);
// // // // // // // // // //     }
// // // // // // // // // //   }

// // // // // // // // // //   void initializePlayers(int count) {
// // // // // // // // // //     players.clear();
// // // // // // // // // //     nameControllers.clear();
// // // // // // // // // //     for (int i = 0; i < count; i++) {
// // // // // // // // // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // // // // // // // // //     }
// // // // // // // // // //     setState(() {});
// // // // // // // // // //   }

// // // // // // // // // //   void addPlayer() {
// // // // // // // // // //     final newIndex = players.length;
// // // // // // // // // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // // // // // // // // //     setState(() {});
// // // // // // // // // //   }

// // // // // // // // // //   void removePlayer(int index) {
// // // // // // // // // //     players.removeAt(index);
// // // // // // // // // //     nameControllers.removeAt(index);
// // // // // // // // // //     setState(() {});
// // // // // // // // // //   }

// // // // // // // // // //   Future<void> saveCurrentSettings(String presetName) async {
// // // // // // // // // //     if (presetName.isEmpty) return;
// // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // //     final encoded = players.map((p) => p.toJson()).toList();
// // // // // // // // // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // // // // // // // // //     await prefs.setString('last_used_preset', presetName);
// // // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // //     if (!names.contains(presetName)) {
// // // // // // // // // //       names.add(presetName);
// // // // // // // // // //       await prefs.setStringList('preset_names', names);
// // // // // // // // // //     }
// // // // // // // // // //     setState(() {
// // // // // // // // // //       currentPresetName = presetName;
// // // // // // // // // //     });
// // // // // // // // // //   }

// // // // // // // // // //   Future<void> deletePreset(String presetName) async {
// // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // //     await prefs.remove('preset_$presetName');
// // // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // //     names.remove(presetName);
// // // // // // // // // //     await prefs.setStringList('preset_names', names);
// // // // // // // // // //     final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // // //     if (lastUsed == presetName) {
// // // // // // // // // //       await prefs.remove('last_used_preset');
// // // // // // // // // //       setState(() {
// // // // // // // // // //         currentPresetName = null;
// // // // // // // // // //       });
// // // // // // // // // //     }
// // // // // // // // // //   }

// // // // // // // // // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // // // // // // // // //     try {
// // // // // // // // // //       final prefs = await SharedPreferences.getInstance();
// // // // // // // // // //       final jsonString = prefs.getString('preset_$presetName');
// // // // // // // // // //       if (jsonString == null) return;
// // // // // // // // // //       final List decoded = jsonDecode(jsonString);
// // // // // // // // // //       players.clear();
// // // // // // // // // //       nameControllers.clear();
// // // // // // // // // //       for (var p in decoded) {
// // // // // // // // // //         final player = Player.fromJson(p);
// // // // // // // // // //         players.add(player);
// // // // // // // // // //         nameControllers.add(TextEditingController(text: player.name));
// // // // // // // // // //       }
// // // // // // // // // //       setState(() {
// // // // // // // // // //         currentPresetName = presetName;
// // // // // // // // // //       });
// // // // // // // // // //       if (!autoLoad) {
// // // // // // // // // //         await prefs.setString('last_used_preset', presetName);
// // // // // // // // // //       }
// // // // // // // // // //     } catch (_) {
// // // // // // // // // //       ScaffoldMessenger.of(
// // // // // // // // // //         context,
// // // // // // // // // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // // // // // // // // //     }
// // // // // // // // // //   }

// // // // // // // // // //   void showSaveDialog() async {
// // // // // // // // // //     final controller = TextEditingController();
// // // // // // // // // //     await showDialog(
// // // // // // // // // //       context: context,
// // // // // // // // // //       builder:
// // // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // // //             title: const Text("설정 이름 저장"),
// // // // // // // // // //             content: TextField(
// // // // // // // // // //               controller: controller,
// // // // // // // // // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // // // // // // // // //             ),
// // // // // // // // // //             actions: [
// // // // // // // // // //               TextButton(
// // // // // // // // // //                 onPressed: () async {
// // // // // // // // // //                   await saveCurrentSettings(controller.text.trim());
// // // // // // // // // //                   Navigator.of(ctx).pop();
// // // // // // // // // //                 },
// // // // // // // // // //                 child: const Text("저장"),
// // // // // // // // // //               ),
// // // // // // // // // //             ],
// // // // // // // // // //           ),
// // // // // // // // // //     );
// // // // // // // // // //   }

// // // // // // // // // //   void showLoadDialog() async {
// // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // // // // // // // // //     if (presetNames.isEmpty) {
// // // // // // // // // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // // // // // // // // //       return;
// // // // // // // // // //     }
// // // // // // // // // //     await showDialog(
// // // // // // // // // //       context: context,
// // // // // // // // // //       builder:
// // // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // // //             title: const Text("불러올 설정 선택"),
// // // // // // // // // //             content: SingleChildScrollView(
// // // // // // // // // //               child: Column(
// // // // // // // // // //                 mainAxisSize: MainAxisSize.min,
// // // // // // // // // //                 children:
// // // // // // // // // //                     presetNames.map((name) {
// // // // // // // // // //                       return ListTile(
// // // // // // // // // //                         title: Text(name),
// // // // // // // // // //                         trailing: IconButton(
// // // // // // // // // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // // // // // // // // //                           onPressed: () async {
// // // // // // // // // //                             Navigator.of(ctx).pop();
// // // // // // // // // //                             await deletePreset(name);
// // // // // // // // // //                           },
// // // // // // // // // //                         ),
// // // // // // // // // //                         onTap: () async {
// // // // // // // // // //                           Navigator.of(ctx).pop();
// // // // // // // // // //                           await loadPreset(name);
// // // // // // // // // //                         },
// // // // // // // // // //                       );
// // // // // // // // // //                     }).toList(),
// // // // // // // // // //               ),
// // // // // // // // // //             ),
// // // // // // // // // //           ),
// // // // // // // // // //     );
// // // // // // // // // //   }

// // // // // // // // // //   void clearAllSettings() async {
// // // // // // // // // //     initializePlayers(2);
// // // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // // //     await prefs.remove('last_used_preset');
// // // // // // // // // //     setState(() {
// // // // // // // // // //       currentPresetName = null;
// // // // // // // // // //     });
// // // // // // // // // //   }

// // // // // // // // // //   @override
// // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // //     return Scaffold(
// // // // // // // // // //       body: SafeArea(
// // // // // // // // // //         child: Padding(
// // // // // // // // // //           padding: EdgeInsets.all(24.w),
// // // // // // // // // //           child: Column(
// // // // // // // // // //             crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // //             children: [
// // // // // // // // // //               SizedBox(height: 40.h),
// // // // // // // // // //               Text(
// // // // // // // // // //                 'TimeSquad',
// // // // // // // // // //                 style: TextStyle(
// // // // // // // // // //                   fontSize: 36.sp,
// // // // // // // // // //                   fontWeight: FontWeight.w800,
// // // // // // // // // //                   letterSpacing: 1.2,
// // // // // // // // // //                   color: Colors.black87,
// // // // // // // // // //                 ),
// // // // // // // // // //               ),
// // // // // // // // // //               SizedBox(height: 4.h),
// // // // // // // // // //               Row(
// // // // // // // // // //                 children: [
// // // // // // // // // //                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// // // // // // // // // //                   const Spacer(),
// // // // // // // // // //                   Row(
// // // // // // // // // //                     mainAxisSize: MainAxisSize.min,
// // // // // // // // // //                     children: [
// // // // // // // // // //                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // // // // // // // // //                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // // // // // // // // //                       IconButton(
// // // // // // // // // //                         icon: const Icon(FeatherIcons.rotateCcw),
// // // // // // // // // //                         onPressed: clearAllSettings,
// // // // // // // // // //                       ),
// // // // // // // // // //                     ],
// // // // // // // // // //                   ),
// // // // // // // // // //                 ],
// // // // // // // // // //               ),
// // // // // // // // // //               SizedBox(height: 24.h),
// // // // // // // // // //               Expanded(
// // // // // // // // // //                 child: ReorderableListView.builder(
// // // // // // // // // //                   padding: EdgeInsets.only(bottom: 120.h),
// // // // // // // // // //                   buildDefaultDragHandles: false,
// // // // // // // // // //                   proxyDecorator: (child, index, animation) {
// // // // // // // // // //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // // // // // // // // //                     return ScaleTransition(
// // // // // // // // // //                       scale: scale,
// // // // // // // // // //                       child: Material(
// // // // // // // // // //                         elevation: 0,
// // // // // // // // // //                         shadowColor: Colors.transparent,
// // // // // // // // // //                         color: Colors.transparent,
// // // // // // // // // //                         child: child,
// // // // // // // // // //                       ),
// // // // // // // // // //                     );
// // // // // // // // // //                   },
// // // // // // // // // //                   itemCount: players.length,
// // // // // // // // // //                   onReorder: (oldIndex, newIndex) {
// // // // // // // // // //                     setState(() {
// // // // // // // // // //                       if (newIndex > oldIndex) newIndex--;
// // // // // // // // // //                       final player = players.removeAt(oldIndex);
// // // // // // // // // //                       final controller = nameControllers.removeAt(oldIndex);
// // // // // // // // // //                       players.insert(newIndex, player);
// // // // // // // // // //                       nameControllers.insert(newIndex, controller);
// // // // // // // // // //                     });
// // // // // // // // // //                   },
// // // // // // // // // //                   itemBuilder: (context, index) {
// // // // // // // // // //                     final player = players[index];
// // // // // // // // // //                     const double borderRadius = 20.0;

// // // // // // // // // //                     return ReorderableDelayedDragStartListener(
// // // // // // // // // //                       key: ValueKey(player),
// // // // // // // // // //                       index: index,
// // // // // // // // // //                       child: Dismissible(
// // // // // // // // // //                         key: ValueKey(player),
// // // // // // // // // //                         direction: DismissDirection.startToEnd,
// // // // // // // // // //                         // Dismissible의 background에도 ClipRRect와 동일한 margin을 적용
// // // // // // // // // //                         background: Container(
// // // // // // // // // //                           margin: EdgeInsets.only(bottom: 12.h),
// // // // // // // // // //                           child: ClipRRect(
// // // // // // // // // //                             borderRadius: BorderRadius.circular(borderRadius.r),
// // // // // // // // // //                             child: Container(
// // // // // // // // // //                               alignment: Alignment.centerLeft,
// // // // // // // // // //                               padding: EdgeInsets.only(left: 20.w),
// // // // // // // // // //                               color: Colors.redAccent,
// // // // // // // // // //                               child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // // // // // // // // //                             ),
// // // // // // // // // //                           ),
// // // // // // // // // //                         ),
// // // // // // // // // //                         onDismissed: (_) {
// // // // // // // // // //                           setState(() {
// // // // // // // // // //                             players.remove(player);
// // // // // // // // // //                             nameControllers.removeAt(index);
// // // // // // // // // //                           });
// // // // // // // // // //                         },
// // // // // // // // // //                         // Player Card (Dismissible의 child)
// // // // // // // // // //                         child: Container(
// // // // // // // // // //                           margin: EdgeInsets.only(bottom: 12.h), // Consistent margin
// // // // // // // // // //                           child: ClipRRect(
// // // // // // // // // //                             borderRadius: BorderRadius.circular(borderRadius.r),
// // // // // // // // // //                             child: Container(
// // // // // // // // // //                               padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // // // // // // // // //                               decoration: BoxDecoration(
// // // // // // // // // //                                 color: Color.lerp(Colors.white, player.color, 0.2),
// // // // // // // // // //                               ),
// // // // // // // // // //                               child: Row(
// // // // // // // // // //                                 children: [
// // // // // // // // // //                                   Container(
// // // // // // // // // //                                     width: 40.w,
// // // // // // // // // //                                     height: 40.w,
// // // // // // // // // //                                     alignment: Alignment.center,
// // // // // // // // // //                                     decoration: BoxDecoration(
// // // // // // // // // //                                       color: Colors.white,
// // // // // // // // // //                                       borderRadius: BorderRadius.circular(12.r),
// // // // // // // // // //                                     ),
// // // // // // // // // //                                     child: Text(
// // // // // // // // // //                                       '${index + 1}',
// // // // // // // // // //                                       style: TextStyle(
// // // // // // // // // //                                         fontSize: 18.sp,
// // // // // // // // // //                                         fontWeight: FontWeight.bold,
// // // // // // // // // //                                       ),
// // // // // // // // // //                                     ),
// // // // // // // // // //                                   ),
// // // // // // // // // //                                   SizedBox(width: 12.w),
// // // // // // // // // //                                   Expanded(
// // // // // // // // // //                                     child: Column(
// // // // // // // // // //                                       crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // // //                                       children: [
// // // // // // // // // //                                         Container(
// // // // // // // // // //                                           decoration: BoxDecoration(
// // // // // // // // // //                                             color: Colors.white.withOpacity(0.6),
// // // // // // // // // //                                             borderRadius: BorderRadius.circular(8.r),
// // // // // // // // // //                                           ),
// // // // // // // // // //                                           padding: EdgeInsets.symmetric(
// // // // // // // // // //                                             horizontal: 8.w,
// // // // // // // // // //                                             vertical: 4.h,
// // // // // // // // // //                                           ),
// // // // // // // // // //                                           child: TextField(
// // // // // // // // // //                                             controller: nameControllers[index],
// // // // // // // // // //                                             onChanged: (val) => players[index].name = val,
// // // // // // // // // //                                             style: TextStyle(
// // // // // // // // // //                                               fontSize: 16.sp,
// // // // // // // // // //                                               fontWeight: FontWeight.w500,
// // // // // // // // // //                                             ),
// // // // // // // // // //                                             decoration: const InputDecoration.collapsed(
// // // // // // // // // //                                               hintText: 'Enter name',
// // // // // // // // // //                                             ),
// // // // // // // // // //                                           ),
// // // // // // // // // //                                         ),
// // // // // // // // // //                                         SizedBox(height: 8.h),
// // // // // // // // // //                                         GestureDetector(
// // // // // // // // // //                                           onTap: () async {
// // // // // // // // // //                                             Duration selectedDuration = Duration(
// // // // // // // // // //                                               seconds: players[index].originalSeconds,
// // // // // // // // // //                                             );
// // // // // // // // // //                                             await showModalBottomSheet(
// // // // // // // // // //                                               context: context,
// // // // // // // // // //                                               builder:
// // // // // // // // // //                                                   (context) => SizedBox(
// // // // // // // // // //                                                     height: 200,
// // // // // // // // // //                                                     child: CupertinoTimerPicker(
// // // // // // // // // //                                                       mode: CupertinoTimerPickerMode.hms,
// // // // // // // // // //                                                       initialTimerDuration: selectedDuration,
// // // // // // // // // //                                                       onTimerDurationChanged: (
// // // // // // // // // //                                                         Duration newDuration,
// // // // // // // // // //                                                       ) {
// // // // // // // // // //                                                         setState(() {
// // // // // // // // // //                                                           players[index].seconds =
// // // // // // // // // //                                                               newDuration.inSeconds;
// // // // // // // // // //                                                           players[index].originalSeconds =
// // // // // // // // // //                                                               newDuration.inSeconds;
// // // // // // // // // //                                                         });
// // // // // // // // // //                                                       },
// // // // // // // // // //                                                     ),
// // // // // // // // // //                                                   ),
// // // // // // // // // //                                             );
// // // // // // // // // //                                           },
// // // // // // // // // //                                           child: Container(
// // // // // // // // // //                                             decoration: BoxDecoration(
// // // // // // // // // //                                               color: Colors.white.withOpacity(0.6),
// // // // // // // // // //                                               borderRadius: BorderRadius.circular(8.r),
// // // // // // // // // //                                             ),
// // // // // // // // // //                                             padding: EdgeInsets.symmetric(
// // // // // // // // // //                                               horizontal: 12.w,
// // // // // // // // // //                                               vertical: 10.h,
// // // // // // // // // //                                             ),
// // // // // // // // // //                                             child: Text(
// // // // // // // // // //                                               'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // // // // // // // // //                                               style: TextStyle(
// // // // // // // // // //                                                 fontSize: 16.sp,
// // // // // // // // // //                                                 fontWeight: FontWeight.w500,
// // // // // // // // // //                                               ),
// // // // // // // // // //                                             ),
// // // // // // // // // //                                           ),
// // // // // // // // // //                                         ),
// // // // // // // // // //                                       ],
// // // // // // // // // //                                     ),
// // // // // // // // // //                                   ),
// // // // // // // // // //                                   SizedBox(width: 8.w),
// // // // // // // // // //                                   ElevatedButton(
// // // // // // // // // //                                     onPressed: () async {
// // // // // // // // // //                                       FocusScope.of(context).unfocus();
// // // // // // // // // //                                       final color = await showDialog<Color>(
// // // // // // // // // //                                         context: context,
// // // // // // // // // //                                         builder:
// // // // // // // // // //                                             (context) => AlertDialog(
// // // // // // // // // //                                               title: const Text('Select Color'),
// // // // // // // // // //                                               content: Wrap(
// // // // // // // // // //                                                 spacing: 8.w,
// // // // // // // // // //                                                 children:
// // // // // // // // // //                                                     Colors.primaries.map((c) {
// // // // // // // // // //                                                       return GestureDetector(
// // // // // // // // // //                                                         onTap: () => Navigator.pop(context, c),
// // // // // // // // // //                                                         child: Container(
// // // // // // // // // //                                                           width: 30.w,
// // // // // // // // // //                                                           height: 30.w,
// // // // // // // // // //                                                           decoration: BoxDecoration(
// // // // // // // // // //                                                             color: c,
// // // // // // // // // //                                                             borderRadius: BorderRadius.circular(
// // // // // // // // // //                                                               15.r,
// // // // // // // // // //                                                             ),
// // // // // // // // // //                                                           ),
// // // // // // // // // //                                                         ),
// // // // // // // // // //                                                       );
// // // // // // // // // //                                                     }).toList(),
// // // // // // // // // //                                               ),
// // // // // // // // // //                                             ),
// // // // // // // // // //                                       );
// // // // // // // // // //                                       if (color != null) {
// // // // // // // // // //                                         setState(() => players[index].color = color);
// // // // // // // // // //                                       }
// // // // // // // // // //                                     },
// // // // // // // // // //                                     style: ElevatedButton.styleFrom(
// // // // // // // // // //                                       backgroundColor: player.color,
// // // // // // // // // //                                       foregroundColor: Colors.white,
// // // // // // // // // //                                       shape: RoundedRectangleBorder(
// // // // // // // // // //                                         borderRadius: BorderRadius.circular(12.r),
// // // // // // // // // //                                       ),
// // // // // // // // // //                                     ),
// // // // // // // // // //                                     child: const Text('Color'),
// // // // // // // // // //                                   ),
// // // // // // // // // //                                 ],
// // // // // // // // // //                               ),
// // // // // // // // // //                             ),
// // // // // // // // // //                           ),
// // // // // // // // // //                         ),
// // // // // // // // // //                       ),
// // // // // // // // // //                     );
// // // // // // // // // //                   },
// // // // // // // // // //                 ),
// // // // // // // // // //               ),
// // // // // // // // // //             ],
// // // // // // // // // //           ),
// // // // // // // // // //         ),
// // // // // // // // // //       ),
// // // // // // // // // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // // // // // // // // //       floatingActionButton: Padding(
// // // // // // // // // //         padding: EdgeInsets.only(bottom: 16.h),
// // // // // // // // // //         child: Row(
// // // // // // // // // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // // // // // // // // //           children: [
// // // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // // //               heroTag: 'addPlayerBtn',
// // // // // // // // // //               onPressed: addPlayer,
// // // // // // // // // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // // // // // // // // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // // // // // // // // //               backgroundColor: Colors.indigo,
// // // // // // // // // //             ),
// // // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // // //               heroTag: 'startBtn',
// // // // // // // // // //               onPressed: () {
// // // // // // // // // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // // // // // // // // //                   Navigator.push(
// // // // // // // // // //                     context,
// // // // // // // // // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // // // // // // // // //                   );
// // // // // // // // // //                 } else {
// // // // // // // // // //                   ScaffoldMessenger.of(
// // // // // // // // // //                     context,
// // // // // // // // // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // // // // // // // // //                 }
// // // // // // // // // //               },
// // // // // // // // // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // // // // // // // // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // // // // // // // // //               backgroundColor: Colors.teal,
// // // // // // // // // //             ),
// // // // // // // // // //           ],
// // // // // // // // // //         ),
// // // // // // // // // //       ),
// // // // // // // // // //     );
// // // // // // // // // //   }
// // // // // // // // // // }

// // // // // // // // // // class TimerScreen extends StatefulWidget {
// // // // // // // // // //   final List<Player> players;
// // // // // // // // // //   const TimerScreen({super.key, required this.players});

// // // // // // // // // //   @override
// // // // // // // // // //   State<TimerScreen> createState() => _TimerScreenState();
// // // // // // // // // // }

// // // // // // // // // // class _TimerScreenState extends State<TimerScreen> {
// // // // // // // // // //   Timer? _timer;
// // // // // // // // // //   int currentIndex = 0;

// // // // // // // // // //   @override
// // // // // // // // // //   void initState() {
// // // // // // // // // //     super.initState();
// // // // // // // // // //     startTimer();
// // // // // // // // // //   }

// // // // // // // // // //   void startTimer() {
// // // // // // // // // //     _timer?.cancel();
// // // // // // // // // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // // // // // // // // //       setState(() {
// // // // // // // // // //         final player = widget.players[currentIndex];
// // // // // // // // // //         if (player.seconds > 0) {
// // // // // // // // // //           player.seconds--;
// // // // // // // // // //           player.elapsedSeconds++;
// // // // // // // // // //         } else {
// // // // // // // // // //           player.isCompleted = true;
// // // // // // // // // //           switchToNextPlayer();
// // // // // // // // // //         }
// // // // // // // // // //       });
// // // // // // // // // //     });
// // // // // // // // // //   }

// // // // // // // // // //   void pauseTimer() {
// // // // // // // // // //     _timer?.cancel();
// // // // // // // // // //   }

// // // // // // // // // //   void switchToNextPlayer() {
// // // // // // // // // //     pauseTimer();
// // // // // // // // // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // // // // // // // // //       showSummaryDialog();
// // // // // // // // // //       return;
// // // // // // // // // //     }
// // // // // // // // // //     do {
// // // // // // // // // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // // // // // // // // //     } while (widget.players[currentIndex].isCompleted);
// // // // // // // // // //     startTimer();
// // // // // // // // // //   }

// // // // // // // // // //   void resetAll() {
// // // // // // // // // //     for (var p in widget.players) {
// // // // // // // // // //       p.seconds = p.originalSeconds;
// // // // // // // // // //       p.elapsedSeconds = 0;
// // // // // // // // // //       p.isCompleted = false;
// // // // // // // // // //     }
// // // // // // // // // //     setState(() {
// // // // // // // // // //       currentIndex = 0;
// // // // // // // // // //     });
// // // // // // // // // //     startTimer();
// // // // // // // // // //   }

// // // // // // // // // //   String formatDuration(int seconds) {
// // // // // // // // // //     final d = Duration(seconds: seconds);
// // // // // // // // // //     final hours = d.inHours.toString().padLeft(2, '0');
// // // // // // // // // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // // // // // // // // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // // // // // // // // //     return '$hours:$minutes:$secs';
// // // // // // // // // //   }

// // // // // // // // // //   void showSummaryDialog() {
// // // // // // // // // //     _timer?.cancel();
// // // // // // // // // //     showDialog(
// // // // // // // // // //       context: context,
// // // // // // // // // //       builder:
// // // // // // // // // //           (_) => AlertDialog(
// // // // // // // // // //             title: const Text('Round Complete'),
// // // // // // // // // //             content: Column(
// // // // // // // // // //               mainAxisSize: MainAxisSize.min,
// // // // // // // // // //               children:
// // // // // // // // // //                   widget.players.map((p) {
// // // // // // // // // //                     final formatted = formatDuration(p.elapsedSeconds);
// // // // // // // // // //                     return Text('${p.name} ⏱ $formatted');
// // // // // // // // // //                   }).toList(),
// // // // // // // // // //             ),
// // // // // // // // // //             actions: [
// // // // // // // // // //               TextButton(
// // // // // // // // // //                 onPressed: () {
// // // // // // // // // //                   Navigator.of(context).pop();
// // // // // // // // // //                   resetAll();
// // // // // // // // // //                 },
// // // // // // // // // //                 child: const Text('Next Round'),
// // // // // // // // // //               ),
// // // // // // // // // //               TextButton(
// // // // // // // // // //                 onPressed: () {
// // // // // // // // // //                   resetAll();
// // // // // // // // // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // //                 },
// // // // // // // // // //                 child: const Text('Home'),
// // // // // // // // // //               ),
// // // // // // // // // //             ],
// // // // // // // // // //           ),
// // // // // // // // // //     );
// // // // // // // // // //   }

// // // // // // // // // //   @override
// // // // // // // // // //   void dispose() {
// // // // // // // // // //     _timer?.cancel();
// // // // // // // // // //     super.dispose();
// // // // // // // // // //   }

// // // // // // // // // //   @override
// // // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // // //     final player = widget.players[currentIndex];
// // // // // // // // // //     return Scaffold(
// // // // // // // // // //       backgroundColor: player.color,
// // // // // // // // // //       body: SafeArea(
// // // // // // // // // //         child: GestureDetector(
// // // // // // // // // //           behavior: HitTestBehavior.opaque,
// // // // // // // // // //           onTap: () {
// // // // // // // // // //             setState(() {
// // // // // // // // // //               pauseTimer();
// // // // // // // // // //               switchToNextPlayer();
// // // // // // // // // //             });
// // // // // // // // // //           },
// // // // // // // // // //           child: Stack(
// // // // // // // // // //             children: [
// // // // // // // // // //               Center(
// // // // // // // // // //                 child: Column(
// // // // // // // // // //                   mainAxisAlignment: MainAxisAlignment.center,
// // // // // // // // // //                   children: [
// // // // // // // // // //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // // // // // // // // //                     SizedBox(height: 16.h),
// // // // // // // // // //                     Text(
// // // // // // // // // //                       formatDuration(player.seconds),
// // // // // // // // // //                       style: TextStyle(
// // // // // // // // // //                         fontSize: 64.sp,
// // // // // // // // // //                         fontWeight: FontWeight.bold,
// // // // // // // // // //                         color: Colors.white,
// // // // // // // // // //                       ),
// // // // // // // // // //                     ),
// // // // // // // // // //                     SizedBox(height: 24.h),
// // // // // // // // // //                     ElevatedButton(
// // // // // // // // // //                       onPressed: () {
// // // // // // // // // //                         setState(() {
// // // // // // // // // //                           widget.players[currentIndex].isCompleted = true;
// // // // // // // // // //                           pauseTimer();
// // // // // // // // // //                           switchToNextPlayer();
// // // // // // // // // //                         });
// // // // // // // // // //                       },
// // // // // // // // // //                       child: const Text('Complete'),
// // // // // // // // // //                     ),
// // // // // // // // // //                     SizedBox(height: 12.h),
// // // // // // // // // //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // // // // // // // // //                   ],
// // // // // // // // // //                 ),
// // // // // // // // // //               ),
// // // // // // // // // //               Positioned(
// // // // // // // // // //                 top: 20.h,
// // // // // // // // // //                 right: 20.w,
// // // // // // // // // //                 child: IconButton(
// // // // // // // // // //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // // // // // // // // //                   onPressed: () {
// // // // // // // // // //                     pauseTimer();
// // // // // // // // // //                     showDialog(
// // // // // // // // // //                       context: context,
// // // // // // // // // //                       builder:
// // // // // // // // // //                           (context) => AlertDialog(
// // // // // // // // // //                             title: const Text('홈으로 이동'),
// // // // // // // // // //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // // // // // // // // //                             actions: [
// // // // // // // // // //                               TextButton(
// // // // // // // // // //                                 onPressed: () {
// // // // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // //                                 },
// // // // // // // // // //                                 child: const Text('설정 유지'),
// // // // // // // // // //                               ),
// // // // // // // // // //                               TextButton(
// // // // // // // // // //                                 onPressed: () {
// // // // // // // // // //                                   resetAll();
// // // // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // // //                                 },
// // // // // // // // // //                                 child: const Text('초기화 후 이동'),
// // // // // // // // // //                               ),
// // // // // // // // // //                               TextButton(
// // // // // // // // // //                                 onPressed: () => Navigator.of(context).pop(),
// // // // // // // // // //                                 child: const Text('취소'),
// // // // // // // // // //                               ),
// // // // // // // // // //                             ],
// // // // // // // // // //                           ),
// // // // // // // // // //                     );
// // // // // // // // // //                   },
// // // // // // // // // //                 ),
// // // // // // // // // //               ),
// // // // // // // // // //             ],
// // // // // // // // // //           ),
// // // // // // // // // //         ),
// // // // // // // // // //       ),
// // // // // // // // // //     );
// // // // // // // // // //   }
// // // // // // // // // // }

// // // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // // // // // // // import 'package:flutter/cupertino.dart';
// // // // // // // // // import 'dart:async';
// // // // // // // // // import 'dart:convert';
// // // // // // // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // // // // // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // // // // // // // void main() async {
// // // // // // // // //   WidgetsFlutterBinding.ensureInitialized();
// // // // // // // // //   final prefs = await SharedPreferences.getInstance();
// // // // // // // // //   final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // // // // // // // }

// // // // // // // // // class MyApp extends StatelessWidget {
// // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // //   const MyApp({super.key, this.lastUsedPreset});

// // // // // // // // //   @override
// // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // //     return ScreenUtilInit(
// // // // // // // // //       designSize: const Size(390, 844),
// // // // // // // // //       builder:
// // // // // // // // //           (context, child) => MaterialApp(
// // // // // // // // //             debugShowCheckedModeBanner: false,
// // // // // // // // //             title: 'Multi Player Timer',
// // // // // // // // //             theme: ThemeData(
// // // // // // // // //               scaffoldBackgroundColor: Colors.white,
// // // // // // // // //               fontFamily: 'Roboto',
// // // // // // // // //               textTheme: TextTheme(
// // // // // // // // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // // // // // // // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // // // // // // // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // // // // // // // //               ),
// // // // // // // // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // // // // // // // //                 style: ElevatedButton.styleFrom(
// // // // // // // // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // // // // // // // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // // // // // // // //                 ),
// // // // // // // // //               ),
// // // // // // // // //             ),
// // // // // // // // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // // // // // // // //           ),
// // // // // // // // //     );
// // // // // // // // //   }
// // // // // // // // // }

// // // // // // // // // class Player {
// // // // // // // // //   String name;
// // // // // // // // //   int seconds;
// // // // // // // // //   int originalSeconds;
// // // // // // // // //   Color color;
// // // // // // // // //   bool isCompleted;
// // // // // // // // //   int elapsedSeconds = 0;

// // // // // // // // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // // // // // // // //     : originalSeconds = seconds;

// // // // // // // // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // // // // // // // //   static Player fromJson(Map<String, dynamic> json) =>
// // // // // // // // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // // // // // // // }

// // // // // // // // // class PlayerSetupScreen extends StatefulWidget {
// // // // // // // // //   final String? lastUsedPreset;
// // // // // // // // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // // // // // // // //   @override
// // // // // // // // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // // // // // // // }

// // // // // // // // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // // // // // // // //   final List<Player> players = [];
// // // // // // // // //   final List<TextEditingController> nameControllers = [];
// // // // // // // // //   String? currentPresetName;

// // // // // // // // //   @override
// // // // // // // // //   void initState() {
// // // // // // // // //     super.initState();
// // // // // // // // //     if (widget.lastUsedPreset != null) {
// // // // // // // // //       currentPresetName = widget.lastUsedPreset;
// // // // // // // // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // // // // // // // //     } else {
// // // // // // // // //       initializePlayers(2);
// // // // // // // // //     }
// // // // // // // // //   }

// // // // // // // // //   void initializePlayers(int count) {
// // // // // // // // //     players.clear();
// // // // // // // // //     nameControllers.clear();
// // // // // // // // //     for (int i = 0; i < count; i++) {
// // // // // // // // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // // // // // // // //     }
// // // // // // // // //     setState(() {});
// // // // // // // // //   }

// // // // // // // // //   void addPlayer() {
// // // // // // // // //     final newIndex = players.length;
// // // // // // // // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // // // // // // // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // // // // // // // //     setState(() {});
// // // // // // // // //   }

// // // // // // // // //   void removePlayer(int index) {
// // // // // // // // //     players.removeAt(index);
// // // // // // // // //     nameControllers.removeAt(index);
// // // // // // // // //     setState(() {});
// // // // // // // // //   }

// // // // // // // // //   Future<void> saveCurrentSettings(String presetName) async {
// // // // // // // // //     if (presetName.isEmpty) return;
// // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // //     final encoded = players.map((p) => p.toJson()).toList();
// // // // // // // // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // // // // // // // //     await prefs.setString('last_used_preset', presetName);
// // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // //     if (!names.contains(presetName)) {
// // // // // // // // //       names.add(presetName);
// // // // // // // // //       await prefs.setStringList('preset_names', names);
// // // // // // // // //     }
// // // // // // // // //     setState(() {
// // // // // // // // //       currentPresetName = presetName;
// // // // // // // // //     });
// // // // // // // // //   }

// // // // // // // // //   Future<void> deletePreset(String presetName) async {
// // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // //     await prefs.remove('preset_$presetName');
// // // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // // //     names.remove(presetName);
// // // // // // // // //     await prefs.setStringList('preset_names', names);
// // // // // // // // //     final lastUsed = prefs.getString('last_used_preset');
// // // // // // // // //     if (lastUsed == presetName) {
// // // // // // // // //       await prefs.remove('last_used_preset');
// // // // // // // // //       setState(() {
// // // // // // // // //         currentPresetName = null;
// // // // // // // // //       });
// // // // // // // // //     }
// // // // // // // // //   }

// // // // // // // // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // // // // // // // //     try {
// // // // // // // // //       final prefs = await SharedPreferences.getInstance();
// // // // // // // // //       final jsonString = prefs.getString('preset_$presetName');
// // // // // // // // //       if (jsonString == null) return;
// // // // // // // // //       final List decoded = jsonDecode(jsonString);
// // // // // // // // //       players.clear();
// // // // // // // // //       nameControllers.clear();
// // // // // // // // //       for (var p in decoded) {
// // // // // // // // //         final player = Player.fromJson(p);
// // // // // // // // //         players.add(player);
// // // // // // // // //         nameControllers.add(TextEditingController(text: player.name));
// // // // // // // // //       }
// // // // // // // // //       setState(() {
// // // // // // // // //         currentPresetName = presetName;
// // // // // // // // //       });
// // // // // // // // //       if (!autoLoad) {
// // // // // // // // //         await prefs.setString('last_used_preset', presetName);
// // // // // // // // //       }
// // // // // // // // //     } catch (_) {
// // // // // // // // //       ScaffoldMessenger.of(
// // // // // // // // //         context,
// // // // // // // // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // // // // // // // //     }
// // // // // // // // //   }

// // // // // // // // //   void showSaveDialog() async {
// // // // // // // // //     final controller = TextEditingController();
// // // // // // // // //     await showDialog(
// // // // // // // // //       context: context,
// // // // // // // // //       builder:
// // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // //             title: const Text("설정 이름 저장"),
// // // // // // // // //             content: TextField(
// // // // // // // // //               controller: controller,
// // // // // // // // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // // // // // // // //             ),
// // // // // // // // //             actions: [
// // // // // // // // //               TextButton(
// // // // // // // // //                 onPressed: () async {
// // // // // // // // //                   await saveCurrentSettings(controller.text.trim());
// // // // // // // // //                   Navigator.of(ctx).pop();
// // // // // // // // //                 },
// // // // // // // // //                 child: const Text("저장"),
// // // // // // // // //               ),
// // // // // // // // //             ],
// // // // // // // // //           ),
// // // // // // // // //     );
// // // // // // // // //   }

// // // // // // // // //   void showLoadDialog() async {
// // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // // // // // // // //     if (presetNames.isEmpty) {
// // // // // // // // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // // // // // // // //       return;
// // // // // // // // //     }
// // // // // // // // //     await showDialog(
// // // // // // // // //       context: context,
// // // // // // // // //       builder:
// // // // // // // // //           (ctx) => AlertDialog(
// // // // // // // // //             title: const Text("불러올 설정 선택"),
// // // // // // // // //             content: SingleChildScrollView(
// // // // // // // // //               child: Column(
// // // // // // // // //                 mainAxisSize: MainAxisSize.min,
// // // // // // // // //                 children:
// // // // // // // // //                     presetNames.map((name) {
// // // // // // // // //                       return ListTile(
// // // // // // // // //                         title: Text(name),
// // // // // // // // //                         trailing: IconButton(
// // // // // // // // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // // // // // // // //                           onPressed: () async {
// // // // // // // // //                             Navigator.of(ctx).pop();
// // // // // // // // //                             await deletePreset(name);
// // // // // // // // //                           },
// // // // // // // // //                         ),
// // // // // // // // //                         onTap: () async {
// // // // // // // // //                           Navigator.of(ctx).pop();
// // // // // // // // //                           await loadPreset(name);
// // // // // // // // //                         },
// // // // // // // // //                       );
// // // // // // // // //                     }).toList(),
// // // // // // // // //               ),
// // // // // // // // //             ),
// // // // // // // // //           ),
// // // // // // // // //     );
// // // // // // // // //   }

// // // // // // // // //   void clearAllSettings() async {
// // // // // // // // //     initializePlayers(2);
// // // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // // //     await prefs.remove('last_used_preset');
// // // // // // // // //     setState(() {
// // // // // // // // //       currentPresetName = null;
// // // // // // // // //     });
// // // // // // // // //   }

// // // // // // // // //   @override
// // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // //     return Scaffold(
// // // // // // // // //       body: SafeArea(
// // // // // // // // //         child: Padding(
// // // // // // // // //           padding: EdgeInsets.all(24.w),
// // // // // // // // //           child: Column(
// // // // // // // // //             crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // //             children: [
// // // // // // // // //               SizedBox(height: 40.h),
// // // // // // // // //               Text(
// // // // // // // // //                 'TimeSquad',
// // // // // // // // //                 style: TextStyle(
// // // // // // // // //                   fontSize: 36.sp,
// // // // // // // // //                   fontWeight: FontWeight.w800,
// // // // // // // // //                   letterSpacing: 1.2,
// // // // // // // // //                   color: Colors.black87,
// // // // // // // // //                 ),
// // // // // // // // //               ),
// // // // // // // // //               SizedBox(height: 4.h),
// // // // // // // // //               Row(
// // // // // // // // //                 children: [
// // // // // // // // //                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// // // // // // // // //                   const Spacer(),
// // // // // // // // //                   Row(
// // // // // // // // //                     mainAxisSize: MainAxisSize.min,
// // // // // // // // //                     children: [
// // // // // // // // //                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // // // // // // // //                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // // // // // // // //                       IconButton(
// // // // // // // // //                         icon: const Icon(FeatherIcons.rotateCcw),
// // // // // // // // //                         onPressed: clearAllSettings,
// // // // // // // // //                       ),
// // // // // // // // //                     ],
// // // // // // // // //                   ),
// // // // // // // // //                 ],
// // // // // // // // //               ),
// // // // // // // // //               SizedBox(height: 24.h),
// // // // // // // // //               Expanded(
// // // // // // // // //                 child: ReorderableListView.builder(
// // // // // // // // //                   padding: EdgeInsets.only(bottom: 120.h),
// // // // // // // // //                   buildDefaultDragHandles: false,
// // // // // // // // //                   proxyDecorator: (child, index, animation) {
// // // // // // // // //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // // // // // // // //                     return ScaleTransition(
// // // // // // // // //                       scale: scale,
// // // // // // // // //                       child: Material(
// // // // // // // // //                         elevation: 0,
// // // // // // // // //                         shadowColor: Colors.transparent,
// // // // // // // // //                         color: Colors.transparent,
// // // // // // // // //                         child: child,
// // // // // // // // //                       ),
// // // // // // // // //                     );
// // // // // // // // //                   },
// // // // // // // // //                   itemCount: players.length,
// // // // // // // // //                   onReorder: (oldIndex, newIndex) {
// // // // // // // // //                     setState(() {
// // // // // // // // //                       if (newIndex > oldIndex) newIndex--;
// // // // // // // // //                       final player = players.removeAt(oldIndex);
// // // // // // // // //                       final controller = nameControllers.removeAt(oldIndex);
// // // // // // // // //                       players.insert(newIndex, player);
// // // // // // // // //                       nameControllers.insert(newIndex, controller);
// // // // // // // // //                     });
// // // // // // // // //                   },
// // // // // // // // //                   itemBuilder: (context, index) {
// // // // // // // // //                     final player = players[index];
// // // // // // // // //                     const double borderRadius = 20.0;

// // // // // // // // //                     return ReorderableDelayedDragStartListener(
// // // // // // // // //                       key: ValueKey(player),
// // // // // // // // //                       index: index,
// // // // // // // // //                       child: Padding(
// // // // // // // // //                         // 여기에 Padding을 추가하여 각 카드 사이의 간격을 확보
// // // // // // // // //                         padding: EdgeInsets.only(bottom: 12.h),
// // // // // // // // //                         child: Card(
// // // // // // // // //                           // Card 위젯으로 감싸고 shape 속성으로 둥근 모서리 적용
// // // // // // // // //                           margin: EdgeInsets.zero, // Card 자체의 기본 마진 제거
// // // // // // // // //                           shape: RoundedRectangleBorder(
// // // // // // // // //                             borderRadius: BorderRadius.circular(borderRadius.r),
// // // // // // // // //                           ),
// // // // // // // // //                           clipBehavior: Clip.antiAlias, // 이 부분이 중요합니다. 내용이 둥근 모서리 밖으로 나가지 않도록 클립
// // // // // // // // //                           elevation: 0, // Card의 기본 그림자 제거
// // // // // // // // //                           child: Dismissible(
// // // // // // // // //                             key: ValueKey(player),
// // // // // // // // //                             direction: DismissDirection.startToEnd,
// // // // // // // // //                             background: Container(
// // // // // // // // //                               alignment: Alignment.centerLeft,
// // // // // // // // //                               padding: EdgeInsets.only(left: 20.w),
// // // // // // // // //                               color: Colors.redAccent, // 배경 색상
// // // // // // // // //                               child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // // // // // // // //                             ),
// // // // // // // // //                             onDismissed: (_) {
// // // // // // // // //                               setState(() {
// // // // // // // // //                                 players.remove(player);
// // // // // // // // //                                 nameControllers.removeAt(index);
// // // // // // // // //                               });
// // // // // // // // //                             },
// // // // // // // // //                             child: Container(
// // // // // // // // //                               // Player Card 실제 내용
// // // // // // // // //                               padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // // // // // // // //                               decoration: BoxDecoration(
// // // // // // // // //                                 color: Color.lerp(Colors.white, player.color, 0.2),
// // // // // // // // //                                 // 이제 여기서는 borderRadius를 제거합니다. Card가 처리하기 때문입니다.
// // // // // // // // //                               ),
// // // // // // // // //                               child: Row(
// // // // // // // // //                                 children: [
// // // // // // // // //                                   Container(
// // // // // // // // //                                     width: 40.w,
// // // // // // // // //                                     height: 40.w,
// // // // // // // // //                                     alignment: Alignment.center,
// // // // // // // // //                                     decoration: BoxDecoration(
// // // // // // // // //                                       color: Colors.white,
// // // // // // // // //                                       borderRadius: BorderRadius.circular(12.r),
// // // // // // // // //                                     ),
// // // // // // // // //                                     child: Text(
// // // // // // // // //                                       '${index + 1}',
// // // // // // // // //                                       style: TextStyle(
// // // // // // // // //                                         fontSize: 18.sp,
// // // // // // // // //                                         fontWeight: FontWeight.bold,
// // // // // // // // //                                       ),
// // // // // // // // //                                     ),
// // // // // // // // //                                   ),
// // // // // // // // //                                   SizedBox(width: 12.w),
// // // // // // // // //                                   Expanded(
// // // // // // // // //                                     child: Column(
// // // // // // // // //                                       crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // // //                                       children: [
// // // // // // // // //                                         Container(
// // // // // // // // //                                           decoration: BoxDecoration(
// // // // // // // // //                                             color: Colors.white.withOpacity(0.6),
// // // // // // // // //                                             borderRadius: BorderRadius.circular(8.r),
// // // // // // // // //                                           ),
// // // // // // // // //                                           padding: EdgeInsets.symmetric(
// // // // // // // // //                                             horizontal: 8.w,
// // // // // // // // //                                             vertical: 4.h,
// // // // // // // // //                                           ),
// // // // // // // // //                                           child: TextField(
// // // // // // // // //                                             controller: nameControllers[index],
// // // // // // // // //                                             onChanged: (val) => players[index].name = val,
// // // // // // // // //                                             style: TextStyle(
// // // // // // // // //                                               fontSize: 16.sp,
// // // // // // // // //                                               fontWeight: FontWeight.w500,
// // // // // // // // //                                             ),
// // // // // // // // //                                             decoration: const InputDecoration.collapsed(
// // // // // // // // //                                               hintText: 'Enter name',
// // // // // // // // //                                             ),
// // // // // // // // //                                           ),
// // // // // // // // //                                         ),
// // // // // // // // //                                         SizedBox(height: 8.h),
// // // // // // // // //                                         GestureDetector(
// // // // // // // // //                                           onTap: () async {
// // // // // // // // //                                             Duration selectedDuration = Duration(
// // // // // // // // //                                               seconds: players[index].originalSeconds,
// // // // // // // // //                                             );
// // // // // // // // //                                             await showModalBottomSheet(
// // // // // // // // //                                               context: context,
// // // // // // // // //                                               builder:
// // // // // // // // //                                                   (context) => SizedBox(
// // // // // // // // //                                                     height: 200,
// // // // // // // // //                                                     child: CupertinoTimerPicker(
// // // // // // // // //                                                       mode: CupertinoTimerPickerMode.hms,
// // // // // // // // //                                                       initialTimerDuration: selectedDuration,
// // // // // // // // //                                                       onTimerDurationChanged: (
// // // // // // // // //                                                         Duration newDuration,
// // // // // // // // //                                                       ) {
// // // // // // // // //                                                         setState(() {
// // // // // // // // //                                                           players[index].seconds =
// // // // // // // // //                                                               newDuration.inSeconds;
// // // // // // // // //                                                           players[index].originalSeconds =
// // // // // // // // //                                                               newDuration.inSeconds;
// // // // // // // // //                                                         });
// // // // // // // // //                                                       },
// // // // // // // // //                                                     ),
// // // // // // // // //                                                   ),
// // // // // // // // //                                             );
// // // // // // // // //                                           },
// // // // // // // // //                                           child: Container(
// // // // // // // // //                                             decoration: BoxDecoration(
// // // // // // // // //                                               color: Colors.white.withOpacity(0.6),
// // // // // // // // //                                               borderRadius: BorderRadius.circular(8.r),
// // // // // // // // //                                             ),
// // // // // // // // //                                             padding: EdgeInsets.symmetric(
// // // // // // // // //                                               horizontal: 12.w,
// // // // // // // // //                                               vertical: 10.h,
// // // // // // // // //                                             ),
// // // // // // // // //                                             child: Text(
// // // // // // // // //                                               'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // // // // // // // //                                               style: TextStyle(
// // // // // // // // //                                                 fontSize: 16.sp,
// // // // // // // // //                                                 fontWeight: FontWeight.w500,
// // // // // // // // //                                               ),
// // // // // // // // //                                             ),
// // // // // // // // //                                           ),
// // // // // // // // //                                         ),
// // // // // // // // //                                       ],
// // // // // // // // //                                     ),
// // // // // // // // //                                   ),
// // // // // // // // //                                   SizedBox(width: 8.w),
// // // // // // // // //                                   ElevatedButton(
// // // // // // // // //                                     onPressed: () async {
// // // // // // // // //                                       FocusScope.of(context).unfocus();
// // // // // // // // //                                       final color = await showDialog<Color>(
// // // // // // // // //                                         context: context,
// // // // // // // // //                                         builder:
// // // // // // // // //                                             (context) => AlertDialog(
// // // // // // // // //                                               title: const Text('Select Color'),
// // // // // // // // //                                               content: Wrap(
// // // // // // // // //                                                 spacing: 8.w,
// // // // // // // // //                                                 children:
// // // // // // // // //                                                     Colors.primaries.map((c) {
// // // // // // // // //                                                       return GestureDetector(
// // // // // // // // //                                                         onTap: () => Navigator.pop(context, c),
// // // // // // // // //                                                         child: Container(
// // // // // // // // //                                                           width: 30.w,
// // // // // // // // //                                                           height: 30.w,
// // // // // // // // //                                                           decoration: BoxDecoration(
// // // // // // // // //                                                             color: c,
// // // // // // // // //                                                             borderRadius: BorderRadius.circular(
// // // // // // // // //                                                               15.r,
// // // // // // // // //                                                             ),
// // // // // // // // //                                                           ),
// // // // // // // // //                                                         ),
// // // // // // // // //                                                       );
// // // // // // // // //                                                     }).toList(),
// // // // // // // // //                                               ),
// // // // // // // // //                                             ),
// // // // // // // // //                                       );
// // // // // // // // //                                       if (color != null) {
// // // // // // // // //                                         setState(() => players[index].color = color);
// // // // // // // // //                                       }
// // // // // // // // //                                     },
// // // // // // // // //                                     style: ElevatedButton.styleFrom(
// // // // // // // // //                                       backgroundColor: player.color,
// // // // // // // // //                                       foregroundColor: Colors.white,
// // // // // // // // //                                       shape: RoundedRectangleBorder(
// // // // // // // // //                                         borderRadius: BorderRadius.circular(12.r),
// // // // // // // // //                                       ),
// // // // // // // // //                                     ),
// // // // // // // // //                                     child: const Text('Color'),
// // // // // // // // //                                   ),
// // // // // // // // //                                 ],
// // // // // // // // //                               ),
// // // // // // // // //                             ),
// // // // // // // // //                           ),
// // // // // // // // //                         ),
// // // // // // // // //                       ),
// // // // // // // // //                     );
// // // // // // // // //                   },
// // // // // // // // //                 ),
// // // // // // // // //               ),
// // // // // // // // //             ],
// // // // // // // // //           ),
// // // // // // // // //         ),
// // // // // // // // //       ),
// // // // // // // // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // // // // // // // //       floatingActionButton: Padding(
// // // // // // // // //         padding: EdgeInsets.only(bottom: 16.h),
// // // // // // // // //         child: Row(
// // // // // // // // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // // // // // // // //           children: [
// // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // //               heroTag: 'addPlayerBtn',
// // // // // // // // //               onPressed: addPlayer,
// // // // // // // // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // // // // // // // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // // // // // // // //               backgroundColor: Colors.indigo,
// // // // // // // // //             ),
// // // // // // // // //             FloatingActionButton.extended(
// // // // // // // // //               heroTag: 'startBtn',
// // // // // // // // //               onPressed: () {
// // // // // // // // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // // // // // // // //                   Navigator.push(
// // // // // // // // //                     context,
// // // // // // // // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // // // // // // // //                   );
// // // // // // // // //                 } else {
// // // // // // // // //                   ScaffoldMessenger.of(
// // // // // // // // //                     context,
// // // // // // // // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // // // // // // // //                 }
// // // // // // // // //               },
// // // // // // // // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // // // // // // // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // // // // // // // //               backgroundColor: Colors.teal,
// // // // // // // // //             ),
// // // // // // // // //           ],
// // // // // // // // //         ),
// // // // // // // // //       ),
// // // // // // // // //     );
// // // // // // // // //   }
// // // // // // // // // }

// // // // // // // // // class TimerScreen extends StatefulWidget {
// // // // // // // // //   final List<Player> players;
// // // // // // // // //   const TimerScreen({super.key, required this.players});

// // // // // // // // //   @override
// // // // // // // // //   State<TimerScreen> createState() => _TimerScreenState();
// // // // // // // // // }

// // // // // // // // // class _TimerScreenState extends State<TimerScreen> {
// // // // // // // // //   Timer? _timer;
// // // // // // // // //   int currentIndex = 0;

// // // // // // // // //   @override
// // // // // // // // //   void initState() {
// // // // // // // // //     super.initState();
// // // // // // // // //     startTimer();
// // // // // // // // //   }

// // // // // // // // //   void startTimer() {
// // // // // // // // //     _timer?.cancel();
// // // // // // // // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // // // // // // // //       setState(() {
// // // // // // // // //         final player = widget.players[currentIndex];
// // // // // // // // //         if (player.seconds > 0) {
// // // // // // // // //           player.seconds--;
// // // // // // // // //           player.elapsedSeconds++;
// // // // // // // // //         } else {
// // // // // // // // //           player.isCompleted = true;
// // // // // // // // //           switchToNextPlayer();
// // // // // // // // //         }
// // // // // // // // //       });
// // // // // // // // //     });
// // // // // // // // //   }

// // // // // // // // //   void pauseTimer() {
// // // // // // // // //     _timer?.cancel();
// // // // // // // // //   }

// // // // // // // // //   void switchToNextPlayer() {
// // // // // // // // //     pauseTimer();
// // // // // // // // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // // // // // // // //       showSummaryDialog();
// // // // // // // // //       return;
// // // // // // // // //     }
// // // // // // // // //     do {
// // // // // // // // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // // // // // // // //     } while (widget.players[currentIndex].isCompleted);
// // // // // // // // //     startTimer();
// // // // // // // // //   }

// // // // // // // // //   void resetAll() {
// // // // // // // // //     for (var p in widget.players) {
// // // // // // // // //       p.seconds = p.originalSeconds;
// // // // // // // // //       p.elapsedSeconds = 0;
// // // // // // // // //       p.isCompleted = false;
// // // // // // // // //     }
// // // // // // // // //     setState(() {
// // // // // // // // //       currentIndex = 0;
// // // // // // // // //     });
// // // // // // // // //     startTimer();
// // // // // // // // //   }

// // // // // // // // //   String formatDuration(int seconds) {
// // // // // // // // //     final d = Duration(seconds: seconds);
// // // // // // // // //     final hours = d.inHours.toString().padLeft(2, '0');
// // // // // // // // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // // // // // // // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // // // // // // // //     return '$hours:$minutes:$secs';
// // // // // // // // //   }

// // // // // // // // //   void showSummaryDialog() {
// // // // // // // // //     _timer?.cancel();
// // // // // // // // //     showDialog(
// // // // // // // // //       context: context,
// // // // // // // // //       builder:
// // // // // // // // //           (_) => AlertDialog(
// // // // // // // // //             title: const Text('Round Complete'),
// // // // // // // // //             content: Column(
// // // // // // // // //               mainAxisSize: MainAxisSize.min,
// // // // // // // // //               children:
// // // // // // // // //                   widget.players.map((p) {
// // // // // // // // //                     final formatted = formatDuration(p.elapsedSeconds);
// // // // // // // // //                     return Text('${p.name} ⏱ $formatted');
// // // // // // // // //                   }).toList(),
// // // // // // // // //             ),
// // // // // // // // //             actions: [
// // // // // // // // //               TextButton(
// // // // // // // // //                 onPressed: () {
// // // // // // // // //                   Navigator.of(context).pop();
// // // // // // // // //                   resetAll();
// // // // // // // // //                 },
// // // // // // // // //                 child: const Text('Next Round'),
// // // // // // // // //               ),
// // // // // // // // //               TextButton(
// // // // // // // // //                 onPressed: () {
// // // // // // // // //                   resetAll();
// // // // // // // // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // //                 },
// // // // // // // // //                 child: const Text('Home'),
// // // // // // // // //               ),
// // // // // // // // //             ],
// // // // // // // // //           ),
// // // // // // // // //     );
// // // // // // // // //   }

// // // // // // // // //   @override
// // // // // // // // //   void dispose() {
// // // // // // // // //     _timer?.cancel();
// // // // // // // // //     super.dispose();
// // // // // // // // //   }

// // // // // // // // //   @override
// // // // // // // // //   Widget build(BuildContext context) {
// // // // // // // // //     final player = widget.players[currentIndex];
// // // // // // // // //     return Scaffold(
// // // // // // // // //       backgroundColor: player.color,
// // // // // // // // //       body: SafeArea(
// // // // // // // // //         child: GestureDetector(
// // // // // // // // //           behavior: HitTestBehavior.opaque,
// // // // // // // // //           onTap: () {
// // // // // // // // //             setState(() {
// // // // // // // // //               pauseTimer();
// // // // // // // // //               switchToNextPlayer();
// // // // // // // // //             });
// // // // // // // // //           },
// // // // // // // // //           child: Stack(
// // // // // // // // //             children: [
// // // // // // // // //               Center(
// // // // // // // // //                 child: Column(
// // // // // // // // //                   mainAxisAlignment: MainAxisAlignment.center,
// // // // // // // // //                   children: [
// // // // // // // // //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // // // // // // // //                     SizedBox(height: 16.h),
// // // // // // // // //                     Text(
// // // // // // // // //                       formatDuration(player.seconds),
// // // // // // // // //                       style: TextStyle(
// // // // // // // // //                         fontSize: 64.sp,
// // // // // // // // //                         fontWeight: FontWeight.bold,
// // // // // // // // //                         color: Colors.white,
// // // // // // // // //                       ),
// // // // // // // // //                     ),
// // // // // // // // //                     SizedBox(height: 24.h),
// // // // // // // // //                     ElevatedButton(
// // // // // // // // //                       onPressed: () {
// // // // // // // // //                         setState(() {
// // // // // // // // //                           widget.players[currentIndex].isCompleted = true;
// // // // // // // // //                           pauseTimer();
// // // // // // // // //                           switchToNextPlayer();
// // // // // // // // //                         });
// // // // // // // // //                       },
// // // // // // // // //                       child: const Text('Complete'),
// // // // // // // // //                     ),
// // // // // // // // //                     SizedBox(height: 12.h),
// // // // // // // // //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // // // // // // // //                   ],
// // // // // // // // //                 ),
// // // // // // // // //               ),
// // // // // // // // //               Positioned(
// // // // // // // // //                 top: 20.h,
// // // // // // // // //                 right: 20.w,
// // // // // // // // //                 child: IconButton(
// // // // // // // // //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // // // // // // // //                   onPressed: () {
// // // // // // // // //                     pauseTimer();
// // // // // // // // //                     showDialog(
// // // // // // // // //                       context: context,
// // // // // // // // //                       builder:
// // // // // // // // //                           (context) => AlertDialog(
// // // // // // // // //                             title: const Text('홈으로 이동'),
// // // // // // // // //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // // // // // // // //                             actions: [
// // // // // // // // //                               TextButton(
// // // // // // // // //                                 onPressed: () {
// // // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // //                                 },
// // // // // // // // //                                 child: const Text('설정 유지'),
// // // // // // // // //                               ),
// // // // // // // // //                               TextButton(
// // // // // // // // //                                 onPressed: () {
// // // // // // // // //                                   resetAll();
// // // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // // //                                 },
// // // // // // // // //                                 child: const Text('초기화 후 이동'),
// // // // // // // // //                               ),
// // // // // // // // //                               TextButton(
// // // // // // // // //                                 onPressed: () => Navigator.of(context).pop(),
// // // // // // // // //                                 child: const Text('취소'),
// // // // // // // // //                               ),
// // // // // // // // //                             ],
// // // // // // // // //                           ),
// // // // // // // // //                     );
// // // // // // // // //                   },
// // // // // // // // //                 ),
// // // // // // // // //               ),
// // // // // // // // //             ],
// // // // // // // // //           ),
// // // // // // // // //         ),
// // // // // // // // //       ),
// // // // // // // // //     );
// // // // // // // // //   }
// // // // // // // // // }

// // // // // // // // import 'package:flutter/material.dart';
// // // // // // // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // // // // // // import 'package:flutter/cupertino.dart';
// // // // // // // // import 'dart:async';
// // // // // // // // import 'dart:convert';
// // // // // // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // // // // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // // // // // // void main() async {
// // // // // // // //   WidgetsFlutterBinding.ensureInitialized();
// // // // // // // //   final prefs = await SharedPreferences.getInstance();
// // // // // // // //   final lastUsed = prefs.getString('last_used_preset');
// // // // // // // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // // // // // // }

// // // // // // // // class MyApp extends StatelessWidget {
// // // // // // // //   final String? lastUsedPreset;
// // // // // // // //   const MyApp({super.key, this.lastUsedPreset});

// // // // // // // //   @override
// // // // // // // //   Widget build(BuildContext context) {
// // // // // // // //     return ScreenUtilInit(
// // // // // // // //       designSize: const Size(390, 844),
// // // // // // // //       builder:
// // // // // // // //           (context, child) => MaterialApp(
// // // // // // // //             debugShowCheckedModeBanner: false,
// // // // // // // //             title: 'Multi Player Timer',
// // // // // // // //             theme: ThemeData(
// // // // // // // //               scaffoldBackgroundColor: Colors.white,
// // // // // // // //               fontFamily: 'Roboto',
// // // // // // // //               textTheme: TextTheme(
// // // // // // // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // // // // // // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // // // // // // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // // // // // // //               ),
// // // // // // // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // // // // // // //                 style: ElevatedButton.styleFrom(
// // // // // // // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // // // // // // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // // // // // // //                 ),
// // // // // // // //               ),
// // // // // // // //             ),
// // // // // // // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // // // // // // //           ),
// // // // // // // //     );
// // // // // // // //   }
// // // // // // // // }

// // // // // // // // class Player {
// // // // // // // //   String name;
// // // // // // // //   int seconds;
// // // // // // // //   int originalSeconds;
// // // // // // // //   Color color;
// // // // // // // //   bool isCompleted;
// // // // // // // //   int elapsedSeconds = 0;

// // // // // // // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // // // // // // //     : originalSeconds = seconds;

// // // // // // // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // // // // // // //   static Player fromJson(Map<String, dynamic> json) =>
// // // // // // // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // // // // // // }

// // // // // // // // class PlayerSetupScreen extends StatefulWidget {
// // // // // // // //   final String? lastUsedPreset;
// // // // // // // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // // // // // // //   @override
// // // // // // // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // // // // // // }

// // // // // // // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // // // // // // //   final List<Player> players = [];
// // // // // // // //   final List<TextEditingController> nameControllers = [];
// // // // // // // //   String? currentPresetName;

// // // // // // // //   @override
// // // // // // // //   void initState() {
// // // // // // // //     super.initState();
// // // // // // // //     if (widget.lastUsedPreset != null) {
// // // // // // // //       currentPresetName = widget.lastUsedPreset;
// // // // // // // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // // // // // // //     } else {
// // // // // // // //       initializePlayers(2);
// // // // // // // //     }
// // // // // // // //   }

// // // // // // // //   void initializePlayers(int count) {
// // // // // // // //     players.clear();
// // // // // // // //     nameControllers.clear();
// // // // // // // //     for (int i = 0; i < count; i++) {
// // // // // // // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // // // // // // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // // // // // // //     }
// // // // // // // //     setState(() {});
// // // // // // // //   }

// // // // // // // //   void addPlayer() {
// // // // // // // //     final newIndex = players.length;
// // // // // // // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // // // // // // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // // // // // // //     setState(() {});
// // // // // // // //   }

// // // // // // // //   void removePlayer(int index) {
// // // // // // // //     players.removeAt(index);
// // // // // // // //     nameControllers.removeAt(index);
// // // // // // // //     setState(() {});
// // // // // // // //   }

// // // // // // // //   Future<void> saveCurrentSettings(String presetName) async {
// // // // // // // //     if (presetName.isEmpty) return;
// // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // //     final encoded = players.map((p) => p.toJson()).toList();
// // // // // // // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // // // // // // //     await prefs.setString('last_used_preset', presetName);
// // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // //     if (!names.contains(presetName)) {
// // // // // // // //       names.add(presetName);
// // // // // // // //       await prefs.setStringList('preset_names', names);
// // // // // // // //     }
// // // // // // // //     setState(() {
// // // // // // // //       currentPresetName = presetName;
// // // // // // // //     });
// // // // // // // //   }

// // // // // // // //   Future<void> deletePreset(String presetName) async {
// // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // //     await prefs.remove('preset_$presetName');
// // // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // // //     names.remove(presetName);
// // // // // // // //     await prefs.setStringList('preset_names', names);
// // // // // // // //     final lastUsed = prefs.getString('last_used_preset');
// // // // // // // //     if (lastUsed == presetName) {
// // // // // // // //       await prefs.remove('last_used_preset');
// // // // // // // //       setState(() {
// // // // // // // //         currentPresetName = null;
// // // // // // // //       });
// // // // // // // //     }
// // // // // // // //   }

// // // // // // // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // // // // // // //     try {
// // // // // // // //       final prefs = await SharedPreferences.getInstance();
// // // // // // // //       final jsonString = prefs.getString('preset_$presetName');
// // // // // // // //       if (jsonString == null) return;
// // // // // // // //       final List decoded = jsonDecode(jsonString);
// // // // // // // //       players.clear();
// // // // // // // //       nameControllers.clear();
// // // // // // // //       for (var p in decoded) {
// // // // // // // //         final player = Player.fromJson(p);
// // // // // // // //         players.add(player);
// // // // // // // //         nameControllers.add(TextEditingController(text: player.name));
// // // // // // // //       }
// // // // // // // //       setState(() {
// // // // // // // //         currentPresetName = presetName;
// // // // // // // //       });
// // // // // // // //       if (!autoLoad) {
// // // // // // // //         await prefs.setString('last_used_preset', presetName);
// // // // // // // //       }
// // // // // // // //     } catch (_) {
// // // // // // // //       ScaffoldMessenger.of(
// // // // // // // //         context,
// // // // // // // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // // // // // // //     }
// // // // // // // //   }

// // // // // // // //   void showSaveDialog() async {
// // // // // // // //     final controller = TextEditingController();
// // // // // // // //     await showDialog(
// // // // // // // //       context: context,
// // // // // // // //       builder:
// // // // // // // //           (ctx) => AlertDialog(
// // // // // // // //             title: const Text("설정 이름 저장"),
// // // // // // // //             content: TextField(
// // // // // // // //               controller: controller,
// // // // // // // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // // // // // // //             ),
// // // // // // // //             actions: [
// // // // // // // //               TextButton(
// // // // // // // //                 onPressed: () async {
// // // // // // // //                   await saveCurrentSettings(controller.text.trim());
// // // // // // // //                   Navigator.of(ctx).pop();
// // // // // // // //                 },
// // // // // // // //                 child: const Text("저장"),
// // // // // // // //               ),
// // // // // // // //             ],
// // // // // // // //           ),
// // // // // // // //     );
// // // // // // // //   }

// // // // // // // //   void showLoadDialog() async {
// // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // // // // // // //     if (presetNames.isEmpty) {
// // // // // // // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // // // // // // //       return;
// // // // // // // //     }
// // // // // // // //     await showDialog(
// // // // // // // //       context: context,
// // // // // // // //       builder:
// // // // // // // //           (ctx) => AlertDialog(
// // // // // // // //             title: const Text("불러올 설정 선택"),
// // // // // // // //             content: SingleChildScrollView(
// // // // // // // //               child: Column(
// // // // // // // //                 mainAxisSize: MainAxisSize.min,
// // // // // // // //                 children:
// // // // // // // //                     presetNames.map((name) {
// // // // // // // //                       return ListTile(
// // // // // // // //                         title: Text(name),
// // // // // // // //                         trailing: IconButton(
// // // // // // // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // // // // // // //                           onPressed: () async {
// // // // // // // //                             Navigator.of(ctx).pop();
// // // // // // // //                             await deletePreset(name);
// // // // // // // //                           },
// // // // // // // //                         ),
// // // // // // // //                         onTap: () async {
// // // // // // // //                           Navigator.of(ctx).pop();
// // // // // // // //                           await loadPreset(name);
// // // // // // // //                         },
// // // // // // // //                       );
// // // // // // // //                     }).toList(),
// // // // // // // //               ),
// // // // // // // //             ),
// // // // // // // //           ),
// // // // // // // //     );
// // // // // // // //   }

// // // // // // // //   void clearAllSettings() async {
// // // // // // // //     initializePlayers(2);
// // // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // // //     await prefs.remove('last_used_preset');
// // // // // // // //     setState(() {
// // // // // // // //       currentPresetName = null;
// // // // // // // //     });
// // // // // // // //   }

// // // // // // // //   @override
// // // // // // // //   Widget build(BuildContext context) {
// // // // // // // //     return Scaffold(
// // // // // // // //       body: SafeArea(
// // // // // // // //         child: Padding(
// // // // // // // //           padding: EdgeInsets.all(24.w),
// // // // // // // //           child: Column(
// // // // // // // //             crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // //             children: [
// // // // // // // //               SizedBox(height: 40.h),
// // // // // // // //               Text(
// // // // // // // //                 'TimeSquad',
// // // // // // // //                 style: TextStyle(
// // // // // // // //                   fontSize: 36.sp,
// // // // // // // //                   fontWeight: FontWeight.w800,
// // // // // // // //                   letterSpacing: 1.2,
// // // // // // // //                   color: Colors.black87,
// // // // // // // //                 ),
// // // // // // // //               ),
// // // // // // // //               SizedBox(height: 4.h),
// // // // // // // //               Row(
// // // // // // // //                 children: [
// // // // // // // //                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// // // // // // // //                   const Spacer(),
// // // // // // // //                   Row(
// // // // // // // //                     mainAxisSize: MainAxisSize.min,
// // // // // // // //                     children: [
// // // // // // // //                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // // // // // // //                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // // // // // // //                       IconButton(
// // // // // // // //                         icon: const Icon(FeatherIcons.rotateCcw),
// // // // // // // //                         onPressed: clearAllSettings,
// // // // // // // //                       ),
// // // // // // // //                     ],
// // // // // // // //                   ),
// // // // // // // //                 ],
// // // // // // // //               ),
// // // // // // // //               SizedBox(height: 24.h),
// // // // // // // //               Expanded(
// // // // // // // //                 child: ReorderableListView.builder(
// // // // // // // //                   padding: EdgeInsets.only(bottom: 120.h),
// // // // // // // //                   buildDefaultDragHandles: false,
// // // // // // // //                   proxyDecorator: (child, index, animation) {
// // // // // // // //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // // // // // // //                     return ScaleTransition(
// // // // // // // //                       scale: scale,
// // // // // // // //                       child: Material(
// // // // // // // //                         elevation: 0,
// // // // // // // //                         shadowColor: Colors.transparent,
// // // // // // // //                         color: Colors.transparent,
// // // // // // // //                         child: child,
// // // // // // // //                       ),
// // // // // // // //                     );
// // // // // // // //                   },
// // // // // // // //                   itemCount: players.length,
// // // // // // // //                   onReorder: (oldIndex, newIndex) {
// // // // // // // //                     setState(() {
// // // // // // // //                       if (newIndex > oldIndex) newIndex--;
// // // // // // // //                       final player = players.removeAt(oldIndex);
// // // // // // // //                       final controller = nameControllers.removeAt(oldIndex);
// // // // // // // //                       players.insert(newIndex, player);
// // // // // // // //                       nameControllers.insert(newIndex, controller);
// // // // // // // //                     });
// // // // // // // //                   },
// // // // // // // //                   itemBuilder: (context, index) {
// // // // // // // //                     final player = players[index];
// // // // // // // //                     const double borderRadius = 20.0;

// // // // // // // //                     return ReorderableDelayedDragStartListener(
// // // // // // // //                       key: ValueKey(player),
// // // // // // // //                       index: index,
// // // // // // // //                       child: Padding(
// // // // // // // //                         padding: EdgeInsets.only(bottom: 12.h),
// // // // // // // //                         child: Card(
// // // // // // // //                           margin: EdgeInsets.zero,
// // // // // // // //                           shape: RoundedRectangleBorder(
// // // // // // // //                             borderRadius: BorderRadius.circular(borderRadius.r),
// // // // // // // //                           ),
// // // // // // // //                           clipBehavior: Clip.antiAlias,
// // // // // // // //                           elevation: 0,
// // // // // // // //                           child: Dismissible(
// // // // // // // //                             key: ValueKey(player),
// // // // // // // //                             direction: DismissDirection.startToEnd,
// // // // // // // //                             background: ClipRRect(
// // // // // // // //                               // Wrap the background Container with ClipRRect
// // // // // // // //                               borderRadius: BorderRadius.only(
// // // // // // // //                                 topLeft: Radius.circular(borderRadius.r),
// // // // // // // //                                 bottomLeft: Radius.circular(borderRadius.r),
// // // // // // // //                               ),
// // // // // // // //                               child: Container(
// // // // // // // //                                 alignment: Alignment.centerLeft,
// // // // // // // //                                 padding: EdgeInsets.only(left: 20.w),
// // // // // // // //                                 color: Colors.redAccent,
// // // // // // // //                                 child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // // // // // // //                               ),
// // // // // // // //                             ),
// // // // // // // //                             onDismissed: (_) {
// // // // // // // //                               setState(() {
// // // // // // // //                                 players.remove(player);
// // // // // // // //                                 nameControllers.removeAt(index);
// // // // // // // //                               });
// // // // // // // //                             },
// // // // // // // //                             child: Container(
// // // // // // // //                               padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // // // // // // //                               decoration: BoxDecoration(
// // // // // // // //                                 color: Color.lerp(Colors.white, player.color, 0.2),
// // // // // // // //                               ),
// // // // // // // //                               child: Row(
// // // // // // // //                                 children: [
// // // // // // // //                                   Container(
// // // // // // // //                                     width: 40.w,
// // // // // // // //                                     height: 40.w,
// // // // // // // //                                     alignment: Alignment.center,
// // // // // // // //                                     decoration: BoxDecoration(
// // // // // // // //                                       color: Colors.white,
// // // // // // // //                                       borderRadius: BorderRadius.circular(12.r),
// // // // // // // //                                     ),
// // // // // // // //                                     child: Text(
// // // // // // // //                                       '${index + 1}',
// // // // // // // //                                       style: TextStyle(
// // // // // // // //                                         fontSize: 18.sp,
// // // // // // // //                                         fontWeight: FontWeight.bold,
// // // // // // // //                                       ),
// // // // // // // //                                     ),
// // // // // // // //                                   ),
// // // // // // // //                                   SizedBox(width: 12.w),
// // // // // // // //                                   Expanded(
// // // // // // // //                                     child: Column(
// // // // // // // //                                       crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // // //                                       children: [
// // // // // // // //                                         Container(
// // // // // // // //                                           decoration: BoxDecoration(
// // // // // // // //                                             color: Colors.white.withOpacity(0.6),
// // // // // // // //                                             borderRadius: BorderRadius.circular(8.r),
// // // // // // // //                                           ),
// // // // // // // //                                           padding: EdgeInsets.symmetric(
// // // // // // // //                                             horizontal: 8.w,
// // // // // // // //                                             vertical: 4.h,
// // // // // // // //                                           ),
// // // // // // // //                                           child: TextField(
// // // // // // // //                                             controller: nameControllers[index],
// // // // // // // //                                             onChanged: (val) => players[index].name = val,
// // // // // // // //                                             style: TextStyle(
// // // // // // // //                                               fontSize: 16.sp,
// // // // // // // //                                               fontWeight: FontWeight.w500,
// // // // // // // //                                             ),
// // // // // // // //                                             decoration: const InputDecoration.collapsed(
// // // // // // // //                                               hintText: 'Enter name',
// // // // // // // //                                             ),
// // // // // // // //                                           ),
// // // // // // // //                                         ),
// // // // // // // //                                         SizedBox(height: 8.h),
// // // // // // // //                                         GestureDetector(
// // // // // // // //                                           onTap: () async {
// // // // // // // //                                             Duration selectedDuration = Duration(
// // // // // // // //                                               seconds: players[index].originalSeconds,
// // // // // // // //                                             );
// // // // // // // //                                             await showModalBottomSheet(
// // // // // // // //                                               context: context,
// // // // // // // //                                               builder:
// // // // // // // //                                                   (context) => SizedBox(
// // // // // // // //                                                     height: 200,
// // // // // // // //                                                     child: CupertinoTimerPicker(
// // // // // // // //                                                       mode: CupertinoTimerPickerMode.hms,
// // // // // // // //                                                       initialTimerDuration: selectedDuration,
// // // // // // // //                                                       onTimerDurationChanged: (
// // // // // // // //                                                         Duration newDuration,
// // // // // // // //                                                       ) {
// // // // // // // //                                                         setState(() {
// // // // // // // //                                                           players[index].seconds =
// // // // // // // //                                                               newDuration.inSeconds;
// // // // // // // //                                                           players[index].originalSeconds =
// // // // // // // //                                                               newDuration.inSeconds;
// // // // // // // //                                                         });
// // // // // // // //                                                       },
// // // // // // // //                                                     ),
// // // // // // // //                                                   ),
// // // // // // // //                                             );
// // // // // // // //                                           },
// // // // // // // //                                           child: Container(
// // // // // // // //                                             decoration: BoxDecoration(
// // // // // // // //                                               color: Colors.white.withOpacity(0.6),
// // // // // // // //                                               borderRadius: BorderRadius.circular(8.r),
// // // // // // // //                                             ),
// // // // // // // //                                             padding: EdgeInsets.symmetric(
// // // // // // // //                                               horizontal: 12.w,
// // // // // // // //                                               vertical: 10.h,
// // // // // // // //                                             ),
// // // // // // // //                                             child: Text(
// // // // // // // //                                               'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // // // // // // //                                               style: TextStyle(
// // // // // // // //                                                 fontSize: 16.sp,
// // // // // // // //                                                 fontWeight: FontWeight.w500,
// // // // // // // //                                               ),
// // // // // // // //                                             ),
// // // // // // // //                                           ),
// // // // // // // //                                         ),
// // // // // // // //                                       ],
// // // // // // // //                                     ),
// // // // // // // //                                   ),
// // // // // // // //                                   SizedBox(width: 8.w),
// // // // // // // //                                   ElevatedButton(
// // // // // // // //                                     onPressed: () async {
// // // // // // // //                                       FocusScope.of(context).unfocus();
// // // // // // // //                                       final color = await showDialog<Color>(
// // // // // // // //                                         context: context,
// // // // // // // //                                         builder:
// // // // // // // //                                             (context) => AlertDialog(
// // // // // // // //                                               title: const Text('Select Color'),
// // // // // // // //                                               content: Wrap(
// // // // // // // //                                                 spacing: 8.w,
// // // // // // // //                                                 children:
// // // // // // // //                                                     Colors.primaries.map((c) {
// // // // // // // //                                                       return GestureDetector(
// // // // // // // //                                                         onTap: () => Navigator.pop(context, c),
// // // // // // // //                                                         child: Container(
// // // // // // // //                                                           width: 30.w,
// // // // // // // //                                                           height: 30.w,
// // // // // // // //                                                           decoration: BoxDecoration(
// // // // // // // //                                                             color: c,
// // // // // // // //                                                             borderRadius: BorderRadius.circular(
// // // // // // // //                                                               15.r,
// // // // // // // //                                                             ),
// // // // // // // //                                                           ),
// // // // // // // //                                                         ),
// // // // // // // //                                                       );
// // // // // // // //                                                     }).toList(),
// // // // // // // //                                               ),
// // // // // // // //                                             ),
// // // // // // // //                                       );
// // // // // // // //                                       if (color != null) {
// // // // // // // //                                         setState(() => players[index].color = color);
// // // // // // // //                                       }
// // // // // // // //                                     },
// // // // // // // //                                     style: ElevatedButton.styleFrom(
// // // // // // // //                                       backgroundColor: player.color,
// // // // // // // //                                       foregroundColor: Colors.white,
// // // // // // // //                                       shape: RoundedRectangleBorder(
// // // // // // // //                                         borderRadius: BorderRadius.circular(12.r),
// // // // // // // //                                       ),
// // // // // // // //                                     ),
// // // // // // // //                                     child: const Text('Color'),
// // // // // // // //                                   ),
// // // // // // // //                                 ],
// // // // // // // //                               ),
// // // // // // // //                             ),
// // // // // // // //                           ),
// // // // // // // //                         ),
// // // // // // // //                       ),
// // // // // // // //                     );
// // // // // // // //                   },
// // // // // // // //                 ),
// // // // // // // //               ),
// // // // // // // //             ],
// // // // // // // //           ),
// // // // // // // //         ),
// // // // // // // //       ),
// // // // // // // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // // // // // // //       floatingActionButton: Padding(
// // // // // // // //         padding: EdgeInsets.only(bottom: 16.h),
// // // // // // // //         child: Row(
// // // // // // // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // // // // // // //           children: [
// // // // // // // //             FloatingActionButton.extended(
// // // // // // // //               heroTag: 'addPlayerBtn',
// // // // // // // //               onPressed: addPlayer,
// // // // // // // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // // // // // // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // // // // // // //               backgroundColor: Colors.indigo,
// // // // // // // //             ),
// // // // // // // //             FloatingActionButton.extended(
// // // // // // // //               heroTag: 'startBtn',
// // // // // // // //               onPressed: () {
// // // // // // // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // // // // // // //                   Navigator.push(
// // // // // // // //                     context,
// // // // // // // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // // // // // // //                   );
// // // // // // // //                 } else {
// // // // // // // //                   ScaffoldMessenger.of(
// // // // // // // //                     context,
// // // // // // // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // // // // // // //                 }
// // // // // // // //               },
// // // // // // // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // // // // // // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // // // // // // //               backgroundColor: Colors.teal,
// // // // // // // //             ),
// // // // // // // //           ],
// // // // // // // //         ),
// // // // // // // //       ),
// // // // // // // //     );
// // // // // // // //   }
// // // // // // // // }

// // // // // // // // class TimerScreen extends StatefulWidget {
// // // // // // // //   final List<Player> players;
// // // // // // // //   const TimerScreen({super.key, required this.players});

// // // // // // // //   @override
// // // // // // // //   State<TimerScreen> createState() => _TimerScreenState();
// // // // // // // // }

// // // // // // // // class _TimerScreenState extends State<TimerScreen> {
// // // // // // // //   Timer? _timer;
// // // // // // // //   int currentIndex = 0;

// // // // // // // //   @override
// // // // // // // //   void initState() {
// // // // // // // //     super.initState();
// // // // // // // //     startTimer();
// // // // // // // //   }

// // // // // // // //   void startTimer() {
// // // // // // // //     _timer?.cancel();
// // // // // // // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // // // // // // //       setState(() {
// // // // // // // //         final player = widget.players[currentIndex];
// // // // // // // //         if (player.seconds > 0) {
// // // // // // // //           player.seconds--;
// // // // // // // //           player.elapsedSeconds++;
// // // // // // // //         } else {
// // // // // // // //           player.isCompleted = true;
// // // // // // // //           switchToNextPlayer();
// // // // // // // //         }
// // // // // // // //       });
// // // // // // // //     });
// // // // // // // //   }

// // // // // // // //   void pauseTimer() {
// // // // // // // //     _timer?.cancel();
// // // // // // // //   }

// // // // // // // //   void switchToNextPlayer() {
// // // // // // // //     pauseTimer();
// // // // // // // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // // // // // // //       showSummaryDialog();
// // // // // // // //       return;
// // // // // // // //     }
// // // // // // // //     do {
// // // // // // // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // // // // // // //     } while (widget.players[currentIndex].isCompleted);
// // // // // // // //     startTimer();
// // // // // // // //   }

// // // // // // // //   void resetAll() {
// // // // // // // //     for (var p in widget.players) {
// // // // // // // //       p.seconds = p.originalSeconds;
// // // // // // // //       p.elapsedSeconds = 0;
// // // // // // // //       p.isCompleted = false;
// // // // // // // //     }
// // // // // // // //     setState(() {
// // // // // // // //       currentIndex = 0;
// // // // // // // //     });
// // // // // // // //     startTimer();
// // // // // // // //   }

// // // // // // // //   String formatDuration(int seconds) {
// // // // // // // //     final d = Duration(seconds: seconds);
// // // // // // // //     final hours = d.inHours.toString().padLeft(2, '0');
// // // // // // // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // // // // // // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // // // // // // //     return '$hours:$minutes:$secs';
// // // // // // // //   }

// // // // // // // //   void showSummaryDialog() {
// // // // // // // //     _timer?.cancel();
// // // // // // // //     showDialog(
// // // // // // // //       context: context,
// // // // // // // //       builder:
// // // // // // // //           (_) => AlertDialog(
// // // // // // // //             title: const Text('Round Complete'),
// // // // // // // //             content: Column(
// // // // // // // //               mainAxisSize: MainAxisSize.min,
// // // // // // // //               children:
// // // // // // // //                   widget.players.map((p) {
// // // // // // // //                     final formatted = formatDuration(p.elapsedSeconds);
// // // // // // // //                     return Text('${p.name} ⏱ $formatted');
// // // // // // // //                   }).toList(),
// // // // // // // //             ),
// // // // // // // //             actions: [
// // // // // // // //               TextButton(
// // // // // // // //                 onPressed: () {
// // // // // // // //                   Navigator.of(context).pop();
// // // // // // // //                   resetAll();
// // // // // // // //                 },
// // // // // // // //                 child: const Text('Next Round'),
// // // // // // // //               ),
// // // // // // // //               TextButton(
// // // // // // // //                 onPressed: () {
// // // // // // // //                   resetAll();
// // // // // // // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // //                 },
// // // // // // // //                 child: const Text('Home'),
// // // // // // // //               ),
// // // // // // // //             ],
// // // // // // // //           ),
// // // // // // // //     );
// // // // // // // //   }

// // // // // // // //   @override
// // // // // // // //   void dispose() {
// // // // // // // //     _timer?.cancel();
// // // // // // // //     super.dispose();
// // // // // // // //   }

// // // // // // // //   @override
// // // // // // // //   Widget build(BuildContext context) {
// // // // // // // //     final player = widget.players[currentIndex];
// // // // // // // //     return Scaffold(
// // // // // // // //       backgroundColor: player.color,
// // // // // // // //       body: SafeArea(
// // // // // // // //         child: GestureDetector(
// // // // // // // //           behavior: HitTestBehavior.opaque,
// // // // // // // //           onTap: () {
// // // // // // // //             setState(() {
// // // // // // // //               pauseTimer();
// // // // // // // //               switchToNextPlayer();
// // // // // // // //             });
// // // // // // // //           },
// // // // // // // //           child: Stack(
// // // // // // // //             children: [
// // // // // // // //               Center(
// // // // // // // //                 child: Column(
// // // // // // // //                   mainAxisAlignment: MainAxisAlignment.center,
// // // // // // // //                   children: [
// // // // // // // //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // // // // // // //                     SizedBox(height: 16.h),
// // // // // // // //                     Text(
// // // // // // // //                       formatDuration(player.seconds),
// // // // // // // //                       style: TextStyle(
// // // // // // // //                         fontSize: 64.sp,
// // // // // // // //                         fontWeight: FontWeight.bold,
// // // // // // // //                         color: Colors.white,
// // // // // // // //                       ),
// // // // // // // //                     ),
// // // // // // // //                     SizedBox(height: 24.h),
// // // // // // // //                     ElevatedButton(
// // // // // // // //                       onPressed: () {
// // // // // // // //                         setState(() {
// // // // // // // //                           widget.players[currentIndex].isCompleted = true;
// // // // // // // //                           pauseTimer();
// // // // // // // //                           switchToNextPlayer();
// // // // // // // //                         });
// // // // // // // //                       },
// // // // // // // //                       child: const Text('Complete'),
// // // // // // // //                     ),
// // // // // // // //                     SizedBox(height: 12.h),
// // // // // // // //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // // // // // // //                   ],
// // // // // // // //                 ),
// // // // // // // //               ),
// // // // // // // //               Positioned(
// // // // // // // //                 top: 20.h,
// // // // // // // //                 right: 20.w,
// // // // // // // //                 child: IconButton(
// // // // // // // //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // // // // // // //                   onPressed: () {
// // // // // // // //                     pauseTimer();
// // // // // // // //                     showDialog(
// // // // // // // //                       context: context,
// // // // // // // //                       builder:
// // // // // // // //                           (context) => AlertDialog(
// // // // // // // //                             title: const Text('홈으로 이동'),
// // // // // // // //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // // // // // // //                             actions: [
// // // // // // // //                               TextButton(
// // // // // // // //                                 onPressed: () {
// // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // //                                 },
// // // // // // // //                                 child: const Text('설정 유지'),
// // // // // // // //                               ),
// // // // // // // //                               TextButton(
// // // // // // // //                                 onPressed: () {
// // // // // // // //                                   resetAll();
// // // // // // // //                                   Navigator.of(context).pop();
// // // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // // //                                 },
// // // // // // // //                                 child: const Text('초기화 후 이동'),
// // // // // // // //                               ),
// // // // // // // //                               TextButton(
// // // // // // // //                                 onPressed: () => Navigator.of(context).pop(),
// // // // // // // //                                 child: const Text('취소'),
// // // // // // // //                               ),
// // // // // // // //                             ],
// // // // // // // //                           ),
// // // // // // // //                     );
// // // // // // // //                   },
// // // // // // // //                 ),
// // // // // // // //               ),
// // // // // // // //             ],
// // // // // // // //           ),
// // // // // // // //         ),
// // // // // // // //       ),
// // // // // // // //     );
// // // // // // // //   }
// // // // // // // // }

// // // // // // // import 'package:flutter/material.dart';
// // // // // // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // // // // // import 'package:flutter/cupertino.dart';
// // // // // // // import 'dart:async';
// // // // // // // import 'dart:convert';
// // // // // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // // // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // // // // // void main() async {
// // // // // // //   WidgetsFlutterBinding.ensureInitialized();
// // // // // // //   final prefs = await SharedPreferences.getInstance();
// // // // // // //   final lastUsed = prefs.getString('last_used_preset');
// // // // // // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // // // // // }

// // // // // // // class MyApp extends StatelessWidget {
// // // // // // //   final String? lastUsedPreset;
// // // // // // //   const MyApp({super.key, this.lastUsedPreset});

// // // // // // //   @override
// // // // // // //   Widget build(BuildContext context) {
// // // // // // //     return ScreenUtilInit(
// // // // // // //       designSize: const Size(390, 844),
// // // // // // //       builder:
// // // // // // //           (context, child) => MaterialApp(
// // // // // // //             debugShowCheckedModeBanner: false,
// // // // // // //             title: 'Multi Player Timer',
// // // // // // //             theme: ThemeData(
// // // // // // //               scaffoldBackgroundColor: Colors.white,
// // // // // // //               fontFamily: 'Roboto',
// // // // // // //               textTheme: TextTheme(
// // // // // // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // // // // // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // // // // // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // // // // // //               ),
// // // // // // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // // // // // //                 style: ElevatedButton.styleFrom(
// // // // // // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // // // // // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // // // // // //                 ),
// // // // // // //               ),
// // // // // // //             ),
// // // // // // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // // // // // //           ),
// // // // // // //     );
// // // // // // //   }
// // // // // // // }

// // // // // // // class Player {
// // // // // // //   String name;
// // // // // // //   int seconds;
// // // // // // //   int originalSeconds;
// // // // // // //   Color color;
// // // // // // //   bool isCompleted;
// // // // // // //   int elapsedSeconds = 0;

// // // // // // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // // // // // //     : originalSeconds = seconds;

// // // // // // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // // // // // //   static Player fromJson(Map<String, dynamic> json) =>
// // // // // // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // // // // // }

// // // // // // // class PlayerSetupScreen extends StatefulWidget {
// // // // // // //   final String? lastUsedPreset;
// // // // // // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // // // // // //   @override
// // // // // // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // // // // // }

// // // // // // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // // // // // //   final List<Player> players = [];
// // // // // // //   final List<TextEditingController> nameControllers = [];
// // // // // // //   String? currentPresetName;

// // // // // // //   @override
// // // // // // //   void initState() {
// // // // // // //     super.initState();
// // // // // // //     if (widget.lastUsedPreset != null) {
// // // // // // //       currentPresetName = widget.lastUsedPreset;
// // // // // // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // // // // // //     } else {
// // // // // // //       initializePlayers(2);
// // // // // // //     }
// // // // // // //   }

// // // // // // //   void initializePlayers(int count) {
// // // // // // //     players.clear();
// // // // // // //     nameControllers.clear();
// // // // // // //     for (int i = 0; i < count; i++) {
// // // // // // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // // // // // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // // // // // //     }
// // // // // // //     setState(() {});
// // // // // // //   }

// // // // // // //   void addPlayer() {
// // // // // // //     final newIndex = players.length;
// // // // // // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // // // // // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // // // // // //     setState(() {});
// // // // // // //   }

// // // // // // //   void removePlayer(int index) {
// // // // // // //     players.removeAt(index);
// // // // // // //     nameControllers.removeAt(index);
// // // // // // //     setState(() {});
// // // // // // //   }

// // // // // // //   Future<void> saveCurrentSettings(String presetName) async {
// // // // // // //     if (presetName.isEmpty) return;
// // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // //     final encoded = players.map((p) => p.toJson()).toList();
// // // // // // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // // // // // //     await prefs.setString('last_used_preset', presetName);
// // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // //     if (!names.contains(presetName)) {
// // // // // // //       names.add(presetName);
// // // // // // //       await prefs.setStringList('preset_names', names);
// // // // // // //     }
// // // // // // //     setState(() {
// // // // // // //       currentPresetName = presetName;
// // // // // // //     });
// // // // // // //   }

// // // // // // //   Future<void> deletePreset(String presetName) async {
// // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // //     await prefs.remove('preset_$presetName');
// // // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // // //     names.remove(presetName);
// // // // // // //     await prefs.setStringList('preset_names', names);
// // // // // // //     final lastUsed = prefs.getString('last_used_preset');
// // // // // // //     if (lastUsed == presetName) {
// // // // // // //       await prefs.remove('last_used_preset');
// // // // // // //       setState(() {
// // // // // // //         currentPresetName = null;
// // // // // // //       });
// // // // // // //     }
// // // // // // //   }

// // // // // // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // // // // // //     try {
// // // // // // //       final prefs = await SharedPreferences.getInstance();
// // // // // // //       final jsonString = prefs.getString('preset_$presetName');
// // // // // // //       if (jsonString == null) return;
// // // // // // //       final List decoded = jsonDecode(jsonString);
// // // // // // //       players.clear();
// // // // // // //       nameControllers.clear();
// // // // // // //       for (var p in decoded) {
// // // // // // //         final player = Player.fromJson(p);
// // // // // // //         players.add(player);
// // // // // // //         nameControllers.add(TextEditingController(text: player.name));
// // // // // // //       }
// // // // // // //       setState(() {
// // // // // // //         currentPresetName = presetName;
// // // // // // //       });
// // // // // // //       if (!autoLoad) {
// // // // // // //         await prefs.setString('last_used_preset', presetName);
// // // // // // //       }
// // // // // // //     } catch (_) {
// // // // // // //       ScaffoldMessenger.of(
// // // // // // //         context,
// // // // // // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // // // // // //     }
// // // // // // //   }

// // // // // // //   void showSaveDialog() async {
// // // // // // //     final controller = TextEditingController();
// // // // // // //     await showDialog(
// // // // // // //       context: context,
// // // // // // //       builder:
// // // // // // //           (ctx) => AlertDialog(
// // // // // // //             title: const Text("설정 이름 저장"),
// // // // // // //             content: TextField(
// // // // // // //               controller: controller,
// // // // // // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // // // // // //             ),
// // // // // // //             actions: [
// // // // // // //               TextButton(
// // // // // // //                 onPressed: () async {
// // // // // // //                   await saveCurrentSettings(controller.text.trim());
// // // // // // //                   Navigator.of(ctx).pop();
// // // // // // //                 },
// // // // // // //                 child: const Text("저장"),
// // // // // // //               ),
// // // // // // //             ],
// // // // // // //           ),
// // // // // // //     );
// // // // // // //   }

// // // // // // //   void showLoadDialog() async {
// // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // // // // // //     if (presetNames.isEmpty) {
// // // // // // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // // // // // //       return;
// // // // // // //     }
// // // // // // //     await showDialog(
// // // // // // //       context: context,
// // // // // // //       builder:
// // // // // // //           (ctx) => AlertDialog(
// // // // // // //             title: const Text("불러올 설정 선택"),
// // // // // // //             content: SingleChildScrollView(
// // // // // // //               child: Column(
// // // // // // //                 mainAxisSize: MainAxisSize.min,
// // // // // // //                 children:
// // // // // // //                     presetNames.map((name) {
// // // // // // //                       return ListTile(
// // // // // // //                         title: Text(name),
// // // // // // //                         trailing: IconButton(
// // // // // // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // // // // // //                           onPressed: () async {
// // // // // // //                             Navigator.of(ctx).pop();
// // // // // // //                             await deletePreset(name);
// // // // // // //                           },
// // // // // // //                         ),
// // // // // // //                         onTap: () async {
// // // // // // //                           Navigator.of(ctx).pop();
// // // // // // //                           await loadPreset(name);
// // // // // // //                         },
// // // // // // //                       );
// // // // // // //                     }).toList(),
// // // // // // //               ),
// // // // // // //             ),
// // // // // // //           ),
// // // // // // //     );
// // // // // // //   }

// // // // // // //   void clearAllSettings() async {
// // // // // // //     initializePlayers(2);
// // // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // // //     await prefs.remove('last_used_preset');
// // // // // // //     setState(() {
// // // // // // //       currentPresetName = null;
// // // // // // //     });
// // // // // // //   }

// // // // // // //   @override
// // // // // // //   Widget build(BuildContext context) {
// // // // // // //     return Scaffold(
// // // // // // //       body: SafeArea(
// // // // // // //         child: Padding(
// // // // // // //           padding: EdgeInsets.all(24.w),
// // // // // // //           child: Column(
// // // // // // //             crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // //             children: [
// // // // // // //               SizedBox(height: 40.h),
// // // // // // //               Text(
// // // // // // //                 'TimeSquad',
// // // // // // //                 style: TextStyle(
// // // // // // //                   fontSize: 36.sp,
// // // // // // //                   fontWeight: FontWeight.w800,
// // // // // // //                   letterSpacing: 1.2,
// // // // // // //                   color: Colors.black87,
// // // // // // //                 ),
// // // // // // //               ),
// // // // // // //               SizedBox(height: 4.h),
// // // // // // //               Row(
// // // // // // //                 children: [
// // // // // // //                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// // // // // // //                   const Spacer(),
// // // // // // //                   Row(
// // // // // // //                     mainAxisSize: MainAxisSize.min,
// // // // // // //                     children: [
// // // // // // //                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // // // // // //                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // // // // // //                       IconButton(
// // // // // // //                         icon: const Icon(FeatherIcons.rotateCcw),
// // // // // // //                         onPressed: clearAllSettings,
// // // // // // //                       ),
// // // // // // //                     ],
// // // // // // //                   ),
// // // // // // //                 ],
// // // // // // //               ),
// // // // // // //               SizedBox(height: 24.h),
// // // // // // //               Expanded(
// // // // // // //                 child: ReorderableListView.builder(
// // // // // // //                   padding: EdgeInsets.only(bottom: 120.h),
// // // // // // //                   buildDefaultDragHandles: false,
// // // // // // //                   proxyDecorator: (child, index, animation) {
// // // // // // //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // // // // // //                     return ScaleTransition(
// // // // // // //                       scale: scale,
// // // // // // //                       child: Material(
// // // // // // //                         elevation: 0,
// // // // // // //                         shadowColor: Colors.transparent,
// // // // // // //                         color: Colors.transparent,
// // // // // // //                         child: child,
// // // // // // //                       ),
// // // // // // //                     );
// // // // // // //                   },
// // // // // // //                   itemCount: players.length,
// // // // // // //                   onReorder: (oldIndex, newIndex) {
// // // // // // //                     setState(() {
// // // // // // //                       if (newIndex > oldIndex) newIndex--;
// // // // // // //                       final player = players.removeAt(oldIndex);
// // // // // // //                       final controller = nameControllers.removeAt(oldIndex);
// // // // // // //                       players.insert(newIndex, player);
// // // // // // //                       nameControllers.insert(newIndex, controller);
// // // // // // //                     });
// // // // // // //                   },
// // // // // // //                   itemBuilder: (context, index) {
// // // // // // //                     final player = players[index];
// // // // // // //                     const double borderRadius = 20.0;

// // // // // // //                     return ReorderableDelayedDragStartListener(
// // // // // // //                       key: ValueKey(player),
// // // // // // //                       index: index,
// // // // // // //                       child: Padding(
// // // // // // //                         padding: EdgeInsets.only(bottom: 12.h),
// // // // // // //                         child: Card(
// // // // // // //                           margin: EdgeInsets.zero,
// // // // // // //                           shape: RoundedRectangleBorder(
// // // // // // //                             borderRadius: BorderRadius.circular(borderRadius.r),
// // // // // // //                           ),
// // // // // // //                           clipBehavior: Clip.antiAlias,
// // // // // // //                           elevation: 0,
// // // // // // //                           child: Dismissible(
// // // // // // //                             key: ValueKey(player),
// // // // // // //                             direction: DismissDirection.horizontal, // Enable horizontal swipe
// // // // // // //                             background: ClipRRect(
// // // // // // //                               borderRadius: BorderRadius.only(
// // // // // // //                                 topLeft: Radius.circular(borderRadius.r),
// // // // // // //                                 bottomLeft: Radius.circular(borderRadius.r),
// // // // // // //                               ),
// // // // // // //                               child: Container(
// // // // // // //                                 alignment: Alignment.centerLeft,
// // // // // // //                                 padding: EdgeInsets.only(left: 20.w),
// // // // // // //                                 color: Colors.redAccent,
// // // // // // //                                 child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // // // // // //                               ),
// // // // // // //                             ),
// // // // // // //                             secondaryBackground: ClipRRect(
// // // // // // //                               // Add secondaryBackground for right-to-left swipe
// // // // // // //                               borderRadius: BorderRadius.only(
// // // // // // //                                 topRight: Radius.circular(borderRadius.r),
// // // // // // //                                 bottomRight: Radius.circular(borderRadius.r),
// // // // // // //                               ),
// // // // // // //                               child: Container(
// // // // // // //                                 alignment: Alignment.centerRight,
// // // // // // //                                 padding: EdgeInsets.only(right: 20.w),
// // // // // // //                                 color: Colors.redAccent,
// // // // // // //                                 child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // // // // // //                               ),
// // // // // // //                             ),
// // // // // // //                             onDismissed: (_) {
// // // // // // //                               setState(() {
// // // // // // //                                 players.remove(player);
// // // // // // //                                 nameControllers.removeAt(index);
// // // // // // //                               });
// // // // // // //                             },
// // // // // // //                             child: Container(
// // // // // // //                               padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // // // // // //                               decoration: BoxDecoration(
// // // // // // //                                 color: Color.lerp(Colors.white, player.color, 0.2),
// // // // // // //                               ),
// // // // // // //                               child: Row(
// // // // // // //                                 children: [
// // // // // // //                                   Container(
// // // // // // //                                     width: 40.w,
// // // // // // //                                     height: 40.w,
// // // // // // //                                     alignment: Alignment.center,
// // // // // // //                                     decoration: BoxDecoration(
// // // // // // //                                       color: Colors.white,
// // // // // // //                                       borderRadius: BorderRadius.circular(12.r),
// // // // // // //                                     ),
// // // // // // //                                     child: Text(
// // // // // // //                                       '${index + 1}',
// // // // // // //                                       style: TextStyle(
// // // // // // //                                         fontSize: 18.sp,
// // // // // // //                                         fontWeight: FontWeight.bold,
// // // // // // //                                       ),
// // // // // // //                                     ),
// // // // // // //                                   ),
// // // // // // //                                   SizedBox(width: 12.w),
// // // // // // //                                   Expanded(
// // // // // // //                                     child: Column(
// // // // // // //                                       crossAxisAlignment: CrossAxisAlignment.start,
// // // // // // //                                       children: [
// // // // // // //                                         Container(
// // // // // // //                                           decoration: BoxDecoration(
// // // // // // //                                             color: Colors.white.withOpacity(0.6),
// // // // // // //                                             borderRadius: BorderRadius.circular(8.r),
// // // // // // //                                           ),
// // // // // // //                                           padding: EdgeInsets.symmetric(
// // // // // // //                                             horizontal: 8.w,
// // // // // // //                                             vertical: 4.h,
// // // // // // //                                           ),
// // // // // // //                                           child: TextField(
// // // // // // //                                             controller: nameControllers[index],
// // // // // // //                                             onChanged: (val) => players[index].name = val,
// // // // // // //                                             style: TextStyle(
// // // // // // //                                               fontSize: 16.sp,
// // // // // // //                                               fontWeight: FontWeight.w500,
// // // // // // //                                             ),
// // // // // // //                                             decoration: const InputDecoration.collapsed(
// // // // // // //                                               hintText: 'Enter name',
// // // // // // //                                             ),
// // // // // // //                                           ),
// // // // // // //                                         ),
// // // // // // //                                         SizedBox(height: 8.h),
// // // // // // //                                         GestureDetector(
// // // // // // //                                           onTap: () async {
// // // // // // //                                             Duration selectedDuration = Duration(
// // // // // // //                                               seconds: players[index].originalSeconds,
// // // // // // //                                             );
// // // // // // //                                             await showModalBottomSheet(
// // // // // // //                                               context: context,
// // // // // // //                                               builder:
// // // // // // //                                                   (context) => SizedBox(
// // // // // // //                                                     height: 200,
// // // // // // //                                                     child: CupertinoTimerPicker(
// // // // // // //                                                       mode: CupertinoTimerPickerMode.hms,
// // // // // // //                                                       initialTimerDuration: selectedDuration,
// // // // // // //                                                       onTimerDurationChanged: (
// // // // // // //                                                         Duration newDuration,
// // // // // // //                                                       ) {
// // // // // // //                                                         setState(() {
// // // // // // //                                                           players[index].seconds =
// // // // // // //                                                               newDuration.inSeconds;
// // // // // // //                                                           players[index].originalSeconds =
// // // // // // //                                                               newDuration.inSeconds;
// // // // // // //                                                         });
// // // // // // //                                                       },
// // // // // // //                                                     ),
// // // // // // //                                                   ),
// // // // // // //                                             );
// // // // // // //                                           },
// // // // // // //                                           child: Container(
// // // // // // //                                             decoration: BoxDecoration(
// // // // // // //                                               color: Colors.white.withOpacity(0.6),
// // // // // // //                                               borderRadius: BorderRadius.circular(8.r),
// // // // // // //                                             ),
// // // // // // //                                             padding: EdgeInsets.symmetric(
// // // // // // //                                               horizontal: 12.w,
// // // // // // //                                               vertical: 10.h,
// // // // // // //                                             ),
// // // // // // //                                             child: Text(
// // // // // // //                                               'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // // // // // //                                               style: TextStyle(
// // // // // // //                                                 fontSize: 16.sp,
// // // // // // //                                                 fontWeight: FontWeight.w500,
// // // // // // //                                               ),
// // // // // // //                                             ),
// // // // // // //                                           ),
// // // // // // //                                         ),
// // // // // // //                                       ],
// // // // // // //                                     ),
// // // // // // //                                   ),
// // // // // // //                                   SizedBox(width: 8.w),
// // // // // // //                                   ElevatedButton(
// // // // // // //                                     onPressed: () async {
// // // // // // //                                       FocusScope.of(context).unfocus();
// // // // // // //                                       final color = await showDialog<Color>(
// // // // // // //                                         context: context,
// // // // // // //                                         builder:
// // // // // // //                                             (context) => AlertDialog(
// // // // // // //                                               title: const Text('Select Color'),
// // // // // // //                                               content: Wrap(
// // // // // // //                                                 spacing: 8.w,
// // // // // // //                                                 children:
// // // // // // //                                                     Colors.primaries.map((c) {
// // // // // // //                                                       return GestureDetector(
// // // // // // //                                                         onTap: () => Navigator.pop(context, c),
// // // // // // //                                                         child: Container(
// // // // // // //                                                           width: 30.w,
// // // // // // //                                                           height: 30.w,
// // // // // // //                                                           decoration: BoxDecoration(
// // // // // // //                                                             color: c,
// // // // // // //                                                             borderRadius: BorderRadius.circular(
// // // // // // //                                                               15.r,
// // // // // // //                                                             ),
// // // // // // //                                                           ),
// // // // // // //                                                         ),
// // // // // // //                                                       );
// // // // // // //                                                     }).toList(),
// // // // // // //                                               ),
// // // // // // //                                             ),
// // // // // // //                                       );
// // // // // // //                                       if (color != null) {
// // // // // // //                                         setState(() => players[index].color = color);
// // // // // // //                                       }
// // // // // // //                                     },
// // // // // // //                                     style: ElevatedButton.styleFrom(
// // // // // // //                                       backgroundColor: player.color,
// // // // // // //                                       foregroundColor: Colors.white,
// // // // // // //                                       shape: RoundedRectangleBorder(
// // // // // // //                                         borderRadius: BorderRadius.circular(12.r),
// // // // // // //                                       ),
// // // // // // //                                     ),
// // // // // // //                                     child: const Text('Color'),
// // // // // // //                                   ),
// // // // // // //                                 ],
// // // // // // //                               ),
// // // // // // //                             ),
// // // // // // //                           ),
// // // // // // //                         ),
// // // // // // //                       ),
// // // // // // //                     );
// // // // // // //                   },
// // // // // // //                 ),
// // // // // // //               ),
// // // // // // //             ],
// // // // // // //           ),
// // // // // // //         ),
// // // // // // //       ),
// // // // // // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // // // // // //       floatingActionButton: Padding(
// // // // // // //         padding: EdgeInsets.only(bottom: 16.h),
// // // // // // //         child: Row(
// // // // // // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // // // // // //           children: [
// // // // // // //             FloatingActionButton.extended(
// // // // // // //               heroTag: 'addPlayerBtn',
// // // // // // //               onPressed: addPlayer,
// // // // // // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // // // // // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // // // // // //               backgroundColor: Colors.indigo,
// // // // // // //             ),
// // // // // // //             FloatingActionButton.extended(
// // // // // // //               heroTag: 'startBtn',
// // // // // // //               onPressed: () {
// // // // // // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // // // // // //                   Navigator.push(
// // // // // // //                     context,
// // // // // // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // // // // // //                   );
// // // // // // //                 } else {
// // // // // // //                   ScaffoldMessenger.of(
// // // // // // //                     context,
// // // // // // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // // // // // //                 }
// // // // // // //               },
// // // // // // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // // // // // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // // // // // //               backgroundColor: Colors.teal,
// // // // // // //             ),
// // // // // // //           ],
// // // // // // //         ),
// // // // // // //       ),
// // // // // // //     );
// // // // // // //   }
// // // // // // // }

// // // // // // // class TimerScreen extends StatefulWidget {
// // // // // // //   final List<Player> players;
// // // // // // //   const TimerScreen({super.key, required this.players});

// // // // // // //   @override
// // // // // // //   State<TimerScreen> createState() => _TimerScreenState();
// // // // // // // }

// // // // // // // class _TimerScreenState extends State<TimerScreen> {
// // // // // // //   Timer? _timer;
// // // // // // //   int currentIndex = 0;

// // // // // // //   @override
// // // // // // //   void initState() {
// // // // // // //     super.initState();
// // // // // // //     startTimer();
// // // // // // //   }

// // // // // // //   void startTimer() {
// // // // // // //     _timer?.cancel();
// // // // // // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // // // // // //       setState(() {
// // // // // // //         final player = widget.players[currentIndex];
// // // // // // //         if (player.seconds > 0) {
// // // // // // //           player.seconds--;
// // // // // // //           player.elapsedSeconds++;
// // // // // // //         } else {
// // // // // // //           player.isCompleted = true;
// // // // // // //           switchToNextPlayer();
// // // // // // //         }
// // // // // // //       });
// // // // // // //     });
// // // // // // //   }

// // // // // // //   void pauseTimer() {
// // // // // // //     _timer?.cancel();
// // // // // // //   }

// // // // // // //   void switchToNextPlayer() {
// // // // // // //     pauseTimer();
// // // // // // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // // // // // //       showSummaryDialog();
// // // // // // //       return;
// // // // // // //     }
// // // // // // //     do {
// // // // // // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // // // // // //     } while (widget.players[currentIndex].isCompleted);
// // // // // // //     startTimer();
// // // // // // //   }

// // // // // // //   void resetAll() {
// // // // // // //     for (var p in widget.players) {
// // // // // // //       p.seconds = p.originalSeconds;
// // // // // // //       p.elapsedSeconds = 0;
// // // // // // //       p.isCompleted = false;
// // // // // // //     }
// // // // // // //     setState(() {
// // // // // // //       currentIndex = 0;
// // // // // // //     });
// // // // // // //     startTimer();
// // // // // // //   }

// // // // // // //   String formatDuration(int seconds) {
// // // // // // //     final d = Duration(seconds: seconds);
// // // // // // //     final hours = d.inHours.toString().padLeft(2, '0');
// // // // // // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // // // // // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // // // // // //     return '$hours:$minutes:$secs';
// // // // // // //   }

// // // // // // //   void showSummaryDialog() {
// // // // // // //     _timer?.cancel();
// // // // // // //     showDialog(
// // // // // // //       context: context,
// // // // // // //       builder:
// // // // // // //           (_) => AlertDialog(
// // // // // // //             title: const Text('Round Complete'),
// // // // // // //             content: Column(
// // // // // // //               mainAxisSize: MainAxisSize.min,
// // // // // // //               children:
// // // // // // //                   widget.players.map((p) {
// // // // // // //                     final formatted = formatDuration(p.elapsedSeconds);
// // // // // // //                     return Text('${p.name} ⏱ $formatted');
// // // // // // //                   }).toList(),
// // // // // // //             ),
// // // // // // //             actions: [
// // // // // // //               TextButton(
// // // // // // //                 onPressed: () {
// // // // // // //                   Navigator.of(context).pop();
// // // // // // //                   resetAll();
// // // // // // //                 },
// // // // // // //                 child: const Text('Next Round'),
// // // // // // //               ),
// // // // // // //               TextButton(
// // // // // // //                 onPressed: () {
// // // // // // //                   resetAll();
// // // // // // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // //                 },
// // // // // // //                 child: const Text('Home'),
// // // // // // //               ),
// // // // // // //             ],
// // // // // // //           ),
// // // // // // //     );
// // // // // // //   }

// // // // // // //   @override
// // // // // // //   void dispose() {
// // // // // // //     _timer?.cancel();
// // // // // // //     super.dispose();
// // // // // // //   }

// // // // // // //   @override
// // // // // // //   Widget build(BuildContext context) {
// // // // // // //     final player = widget.players[currentIndex];
// // // // // // //     return Scaffold(
// // // // // // //       backgroundColor: player.color,
// // // // // // //       body: SafeArea(
// // // // // // //         child: GestureDetector(
// // // // // // //           behavior: HitTestBehavior.opaque,
// // // // // // //           onTap: () {
// // // // // // //             setState(() {
// // // // // // //               pauseTimer();
// // // // // // //               switchToNextPlayer();
// // // // // // //             });
// // // // // // //           },
// // // // // // //           child: Stack(
// // // // // // //             children: [
// // // // // // //               Center(
// // // // // // //                 child: Column(
// // // // // // //                   mainAxisAlignment: MainAxisAlignment.center,
// // // // // // //                   children: [
// // // // // // //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // // // // // //                     SizedBox(height: 16.h),
// // // // // // //                     Text(
// // // // // // //                       formatDuration(player.seconds),
// // // // // // //                       style: TextStyle(
// // // // // // //                         fontSize: 64.sp,
// // // // // // //                         fontWeight: FontWeight.bold,
// // // // // // //                         color: Colors.white,
// // // // // // //                       ),
// // // // // // //                     ),
// // // // // // //                     SizedBox(height: 24.h),
// // // // // // //                     ElevatedButton(
// // // // // // //                       onPressed: () {
// // // // // // //                         setState(() {
// // // // // // //                           widget.players[currentIndex].isCompleted = true;
// // // // // // //                           pauseTimer();
// // // // // // //                           switchToNextPlayer();
// // // // // // //                         });
// // // // // // //                       },
// // // // // // //                       child: const Text('Complete'),
// // // // // // //                     ),
// // // // // // //                     SizedBox(height: 12.h),
// // // // // // //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // // // // // //                   ],
// // // // // // //                 ),
// // // // // // //               ),
// // // // // // //               Positioned(
// // // // // // //                 top: 20.h,
// // // // // // //                 right: 20.w,
// // // // // // //                 child: IconButton(
// // // // // // //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // // // // // //                   onPressed: () {
// // // // // // //                     pauseTimer();
// // // // // // //                     showDialog(
// // // // // // //                       context: context,
// // // // // // //                       builder:
// // // // // // //                           (context) => AlertDialog(
// // // // // // //                             title: const Text('홈으로 이동'),
// // // // // // //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // // // // // //                             actions: [
// // // // // // //                               TextButton(
// // // // // // //                                 onPressed: () {
// // // // // // //                                   Navigator.of(context).pop();
// // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // //                                 },
// // // // // // //                                 child: const Text('설정 유지'),
// // // // // // //                               ),
// // // // // // //                               TextButton(
// // // // // // //                                 onPressed: () {
// // // // // // //                                   resetAll();
// // // // // // //                                   Navigator.of(context).pop();
// // // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // // //                                 },
// // // // // // //                                 child: const Text('초기화 후 이동'),
// // // // // // //                               ),
// // // // // // //                               TextButton(
// // // // // // //                                 onPressed: () => Navigator.of(context).pop(),
// // // // // // //                                 child: const Text('취소'),
// // // // // // //                               ),
// // // // // // //                             ],
// // // // // // //                           ),
// // // // // // //                     );
// // // // // // //                   },
// // // // // // //                 ),
// // // // // // //               ),
// // // // // // //             ],
// // // // // // //           ),
// // // // // // //         ),
// // // // // // //       ),
// // // // // // //     );
// // // // // // //   }
// // // // // // // }

// // // // // // import 'package:flutter/material.dart';
// // // // // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // // // // import 'package:flutter/cupertino.dart';
// // // // // // import 'dart:async';
// // // // // // import 'dart:convert';
// // // // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // // // // void main() async {
// // // // // //   WidgetsFlutterBinding.ensureInitialized();
// // // // // //   final prefs = await SharedPreferences.getInstance();
// // // // // //   final lastUsed = prefs.getString('last_used_preset');
// // // // // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // // // // }

// // // // // // class MyApp extends StatelessWidget {
// // // // // //   final String? lastUsedPreset;
// // // // // //   const MyApp({super.key, this.lastUsedPreset});

// // // // // //   @override
// // // // // //   Widget build(BuildContext context) {
// // // // // //     return ScreenUtilInit(
// // // // // //       designSize: const Size(390, 844),
// // // // // //       builder:
// // // // // //           (context, child) => MaterialApp(
// // // // // //             debugShowCheckedModeBanner: false,
// // // // // //             title: 'Multi Player Timer',
// // // // // //             theme: ThemeData(
// // // // // //               scaffoldBackgroundColor: Colors.white,
// // // // // //               fontFamily: 'Roboto',
// // // // // //               textTheme: TextTheme(
// // // // // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // // // // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // // // // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // // // // //               ),
// // // // // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // // // // //                 style: ElevatedButton.styleFrom(
// // // // // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // // // // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // // // // //                 ),
// // // // // //               ),
// // // // // //             ),
// // // // // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // // // // //           ),
// // // // // //     );
// // // // // //   }
// // // // // // }

// // // // // // class Player {
// // // // // //   String name;
// // // // // //   int seconds;
// // // // // //   int originalSeconds;
// // // // // //   Color color;
// // // // // //   bool isCompleted;
// // // // // //   int elapsedSeconds = 0;

// // // // // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // // // // //     : originalSeconds = seconds;

// // // // // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // // // // //   static Player fromJson(Map<String, dynamic> json) =>
// // // // // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // // // // }

// // // // // // class PlayerSetupScreen extends StatefulWidget {
// // // // // //   final String? lastUsedPreset;
// // // // // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // // // // //   @override
// // // // // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // // // // }

// // // // // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // // // // //   final List<Player> players = [];
// // // // // //   final List<TextEditingController> nameControllers = [];
// // // // // //   String? currentPresetName;

// // // // // //   @override
// // // // // //   void initState() {
// // // // // //     super.initState();
// // // // // //     if (widget.lastUsedPreset != null) {
// // // // // //       currentPresetName = widget.lastUsedPreset;
// // // // // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // // // // //     } else {
// // // // // //       initializePlayers(2);
// // // // // //     }
// // // // // //   }

// // // // // //   void initializePlayers(int count) {
// // // // // //     players.clear();
// // // // // //     nameControllers.clear();
// // // // // //     for (int i = 0; i < count; i++) {
// // // // // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // // // // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // // // // //     }
// // // // // //     setState(() {});
// // // // // //   }

// // // // // //   void addPlayer() {
// // // // // //     final newIndex = players.length;
// // // // // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // // // // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // // // // //     setState(() {});
// // // // // //   }

// // // // // //   void removePlayer(int index) {
// // // // // //     players.removeAt(index);
// // // // // //     nameControllers.removeAt(index);
// // // // // //     setState(() {});
// // // // // //   }

// // // // // //   Future<void> saveCurrentSettings(String presetName) async {
// // // // // //     if (presetName.isEmpty) return;
// // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // //     final encoded = players.map((p) => p.toJson()).toList();
// // // // // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // // // // //     await prefs.setString('last_used_preset', presetName);
// // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // //     if (!names.contains(presetName)) {
// // // // // //       names.add(presetName);
// // // // // //       await prefs.setStringList('preset_names', names);
// // // // // //     }
// // // // // //     setState(() {
// // // // // //       currentPresetName = presetName;
// // // // // //     });
// // // // // //   }

// // // // // //   Future<void> deletePreset(String presetName) async {
// // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // //     await prefs.remove('preset_$presetName');
// // // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // // //     names.remove(presetName);
// // // // // //     await prefs.setStringList('preset_names', names);
// // // // // //     final lastUsed = prefs.getString('last_used_preset');
// // // // // //     if (lastUsed == presetName) {
// // // // // //       await prefs.remove('last_used_preset');
// // // // // //       setState(() {
// // // // // //         currentPresetName = null;
// // // // // //       });
// // // // // //     }
// // // // // //   }

// // // // // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // // // // //     try {
// // // // // //       final prefs = await SharedPreferences.getInstance();
// // // // // //       final jsonString = prefs.getString('preset_$presetName');
// // // // // //       if (jsonString == null) return;
// // // // // //       final List decoded = jsonDecode(jsonString);
// // // // // //       players.clear();
// // // // // //       nameControllers.clear();
// // // // // //       for (var p in decoded) {
// // // // // //         final player = Player.fromJson(p);
// // // // // //         players.add(player);
// // // // // //         nameControllers.add(TextEditingController(text: player.name));
// // // // // //       }
// // // // // //       setState(() {
// // // // // //         currentPresetName = presetName;
// // // // // //       });
// // // // // //       if (!autoLoad) {
// // // // // //         await prefs.setString('last_used_preset', presetName);
// // // // // //       }
// // // // // //     } catch (_) {
// // // // // //       ScaffoldMessenger.of(
// // // // // //         context,
// // // // // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // // // // //     }
// // // // // //   }

// // // // // //   void showSaveDialog() async {
// // // // // //     final controller = TextEditingController();
// // // // // //     await showDialog(
// // // // // //       context: context,
// // // // // //       builder:
// // // // // //           (ctx) => AlertDialog(
// // // // // //             title: const Text("설정 이름 저장"),
// // // // // //             content: TextField(
// // // // // //               controller: controller,
// // // // // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // // // // //             ),
// // // // // //             actions: [
// // // // // //               TextButton(
// // // // // //                 onPressed: () async {
// // // // // //                   await saveCurrentSettings(controller.text.trim());
// // // // // //                   Navigator.of(ctx).pop();
// // // // // //                 },
// // // // // //                 child: const Text("저장"),
// // // // // //               ),
// // // // // //             ],
// // // // // //           ),
// // // // // //     );
// // // // // //   }

// // // // // //   void showLoadDialog() async {
// // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // // // // //     if (presetNames.isEmpty) {
// // // // // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // // // // //       return;
// // // // // //     }
// // // // // //     await showDialog(
// // // // // //       context: context,
// // // // // //       builder:
// // // // // //           (ctx) => AlertDialog(
// // // // // //             title: const Text("불러올 설정 선택"),
// // // // // //             content: SingleChildScrollView(
// // // // // //               child: Column(
// // // // // //                 mainAxisSize: MainAxisSize.min,
// // // // // //                 children:
// // // // // //                     presetNames.map((name) {
// // // // // //                       return ListTile(
// // // // // //                         title: Text(name),
// // // // // //                         trailing: IconButton(
// // // // // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // // // // //                           onPressed: () async {
// // // // // //                             Navigator.of(ctx).pop();
// // // // // //                             await deletePreset(name);
// // // // // //                           },
// // // // // //                         ),
// // // // // //                         onTap: () async {
// // // // // //                           Navigator.of(ctx).pop();
// // // // // //                           await loadPreset(name);
// // // // // //                         },
// // // // // //                       );
// // // // // //                     }).toList(),
// // // // // //               ),
// // // // // //             ),
// // // // // //           ),
// // // // // //     );
// // // // // //   }

// // // // // //   void clearAllSettings() async {
// // // // // //     initializePlayers(2);
// // // // // //     final prefs = await SharedPreferences.getInstance();
// // // // // //     await prefs.remove('last_used_preset');
// // // // // //     setState(() {
// // // // // //       currentPresetName = null;
// // // // // //     });
// // // // // //   }

// // // // // //   @override
// // // // // //   Widget build(BuildContext context) {
// // // // // //     return Scaffold(
// // // // // //       body: SafeArea(
// // // // // //         child: Padding(
// // // // // //           padding: EdgeInsets.all(24.w),
// // // // // //           child: Column(
// // // // // //             crossAxisAlignment: CrossAxisAlignment.start,
// // // // // //             children: [
// // // // // //               SizedBox(height: 40.h),
// // // // // //               Text(
// // // // // //                 'TimeSquad',
// // // // // //                 style: TextStyle(
// // // // // //                   fontSize: 36.sp,
// // // // // //                   fontWeight: FontWeight.w800,
// // // // // //                   letterSpacing: 1.2,
// // // // // //                   color: Colors.black87,
// // // // // //                 ),
// // // // // //               ),
// // // // // //               SizedBox(height: 4.h),
// // // // // //               Row(
// // // // // //                 children: [
// // // // // //                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// // // // // //                   const Spacer(),
// // // // // //                   Row(
// // // // // //                     mainAxisSize: MainAxisSize.min,
// // // // // //                     children: [
// // // // // //                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // // // // //                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // // // // //                       IconButton(
// // // // // //                         icon: const Icon(FeatherIcons.rotateCcw),
// // // // // //                         onPressed: clearAllSettings,
// // // // // //                       ),
// // // // // //                     ],
// // // // // //                   ),
// // // // // //                 ],
// // // // // //               ),
// // // // // //               SizedBox(height: 24.h),
// // // // // //               Expanded(
// // // // // //                 child: ReorderableListView.builder(
// // // // // //                   padding: EdgeInsets.only(bottom: 120.h),
// // // // // //                   buildDefaultDragHandles: false,
// // // // // //                   proxyDecorator: (child, index, animation) {
// // // // // //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // // // // //                     return ScaleTransition(
// // // // // //                       scale: scale,
// // // // // //                       child: Material(
// // // // // //                         elevation: 0,
// // // // // //                         shadowColor: Colors.transparent,
// // // // // //                         color: Colors.transparent,
// // // // // //                         child: child,
// // // // // //                       ),
// // // // // //                     );
// // // // // //                   },
// // // // // //                   itemCount: players.length,
// // // // // //                   onReorder: (oldIndex, newIndex) {
// // // // // //                     setState(() {
// // // // // //                       if (newIndex > oldIndex) newIndex--;
// // // // // //                       final player = players.removeAt(oldIndex);
// // // // // //                       final controller = nameControllers.removeAt(oldIndex);
// // // // // //                       players.insert(newIndex, player);
// // // // // //                       nameControllers.insert(newIndex, controller);
// // // // // //                     });
// // // // // //                   },
// // // // // //                   itemBuilder: (context, index) {
// // // // // //                     final player = players[index];
// // // // // //                     const double borderRadius = 20.0;

// // // // // //                     return ReorderableDelayedDragStartListener(
// // // // // //                       key: ValueKey(player),
// // // // // //                       index: index,
// // // // // //                       child: Padding(
// // // // // //                         padding: EdgeInsets.only(bottom: 12.h),
// // // // // //                         child: Card(
// // // // // //                           margin: EdgeInsets.zero,
// // // // // //                           shape: RoundedRectangleBorder(
// // // // // //                             borderRadius: BorderRadius.circular(borderRadius.r),
// // // // // //                           ),
// // // // // //                           clipBehavior: Clip.antiAlias, // Card clips its own content
// // // // // //                           elevation: 0,
// // // // // //                           child: ClipRRect(
// // // // // //                             // <--- Apply ClipRRect here, around the entire Dismissible
// // // // // //                             borderRadius: BorderRadius.circular(
// // // // // //                               borderRadius.r,
// // // // // //                             ), // Match the card's radius
// // // // // //                             child: Dismissible(
// // // // // //                               key: ValueKey(player),
// // // // // //                               direction: DismissDirection.horizontal,
// // // // // //                               background: Container(
// // // // // //                                 // No ClipRRect needed here anymore
// // // // // //                                 alignment: Alignment.centerLeft,
// // // // // //                                 padding: EdgeInsets.only(left: 20.w),
// // // // // //                                 color: Colors.redAccent,
// // // // // //                                 child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // // // // //                               ),
// // // // // //                               secondaryBackground: Container(
// // // // // //                                 // No ClipRRect needed here anymore
// // // // // //                                 alignment: Alignment.centerRight,
// // // // // //                                 padding: EdgeInsets.only(right: 20.w),
// // // // // //                                 color: Colors.redAccent,
// // // // // //                                 child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // // // // //                               ),
// // // // // //                               onDismissed: (_) {
// // // // // //                                 setState(() {
// // // // // //                                   players.remove(player);
// // // // // //                                   nameControllers.removeAt(index);
// // // // // //                                 });
// // // // // //                               },
// // // // // //                               child: Container(
// // // // // //                                 padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // // // // //                                 decoration: BoxDecoration(
// // // // // //                                   color: Color.lerp(Colors.white, player.color, 0.2),
// // // // // //                                 ),
// // // // // //                                 child: Row(
// // // // // //                                   children: [
// // // // // //                                     Container(
// // // // // //                                       width: 40.w,
// // // // // //                                       height: 40.w,
// // // // // //                                       alignment: Alignment.center,
// // // // // //                                       decoration: BoxDecoration(
// // // // // //                                         color: Colors.white,
// // // // // //                                         borderRadius: BorderRadius.circular(12.r),
// // // // // //                                       ),
// // // // // //                                       child: Text(
// // // // // //                                         '${index + 1}',
// // // // // //                                         style: TextStyle(
// // // // // //                                           fontSize: 18.sp,
// // // // // //                                           fontWeight: FontWeight.bold,
// // // // // //                                         ),
// // // // // //                                       ),
// // // // // //                                     ),
// // // // // //                                     SizedBox(width: 12.w),
// // // // // //                                     Expanded(
// // // // // //                                       child: Column(
// // // // // //                                         crossAxisAlignment: CrossAxisAlignment.start,
// // // // // //                                         children: [
// // // // // //                                           Container(
// // // // // //                                             decoration: BoxDecoration(
// // // // // //                                               color: Colors.white.withOpacity(0.6),
// // // // // //                                               borderRadius: BorderRadius.circular(8.r),
// // // // // //                                             ),
// // // // // //                                             padding: EdgeInsets.symmetric(
// // // // // //                                               horizontal: 8.w,
// // // // // //                                               vertical: 4.h,
// // // // // //                                             ),
// // // // // //                                             child: TextField(
// // // // // //                                               controller: nameControllers[index],
// // // // // //                                               onChanged: (val) => players[index].name = val,
// // // // // //                                               style: TextStyle(
// // // // // //                                                 fontSize: 16.sp,
// // // // // //                                                 fontWeight: FontWeight.w500,
// // // // // //                                               ),
// // // // // //                                               decoration: const InputDecoration.collapsed(
// // // // // //                                                 hintText: 'Enter name',
// // // // // //                                               ),
// // // // // //                                             ),
// // // // // //                                           ),
// // // // // //                                           SizedBox(height: 8.h),
// // // // // //                                           GestureDetector(
// // // // // //                                             onTap: () async {
// // // // // //                                               Duration selectedDuration = Duration(
// // // // // //                                                 seconds: players[index].originalSeconds,
// // // // // //                                               );
// // // // // //                                               await showModalBottomSheet(
// // // // // //                                                 context: context,
// // // // // //                                                 builder:
// // // // // //                                                     (context) => SizedBox(
// // // // // //                                                       height: 200,
// // // // // //                                                       child: CupertinoTimerPicker(
// // // // // //                                                         mode: CupertinoTimerPickerMode.hms,
// // // // // //                                                         initialTimerDuration: selectedDuration,
// // // // // //                                                         onTimerDurationChanged: (
// // // // // //                                                           Duration newDuration,
// // // // // //                                                         ) {
// // // // // //                                                           setState(() {
// // // // // //                                                             players[index].seconds =
// // // // // //                                                                 newDuration.inSeconds;
// // // // // //                                                             players[index].originalSeconds =
// // // // // //                                                                 newDuration.inSeconds;
// // // // // //                                                           });
// // // // // //                                                         },
// // // // // //                                                       ),
// // // // // //                                                     ),
// // // // // //                                               );
// // // // // //                                             },
// // // // // //                                             child: Container(
// // // // // //                                               decoration: BoxDecoration(
// // // // // //                                                 color: Colors.white.withOpacity(0.6),
// // // // // //                                                 borderRadius: BorderRadius.circular(8.r),
// // // // // //                                               ),
// // // // // //                                               padding: EdgeInsets.symmetric(
// // // // // //                                                 horizontal: 12.w,
// // // // // //                                                 vertical: 10.h,
// // // // // //                                               ),
// // // // // //                                               child: Text(
// // // // // //                                                 'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // // // // //                                                 style: TextStyle(
// // // // // //                                                   fontSize: 16.sp,
// // // // // //                                                   fontWeight: FontWeight.w500,
// // // // // //                                                 ),
// // // // // //                                               ),
// // // // // //                                             ),
// // // // // //                                           ),
// // // // // //                                         ],
// // // // // //                                       ),
// // // // // //                                     ),
// // // // // //                                     SizedBox(width: 8.w),
// // // // // //                                     ElevatedButton(
// // // // // //                                       onPressed: () async {
// // // // // //                                         FocusScope.of(context).unfocus();
// // // // // //                                         final color = await showDialog<Color>(
// // // // // //                                           context: context,
// // // // // //                                           builder:
// // // // // //                                               (context) => AlertDialog(
// // // // // //                                                 title: const Text('Select Color'),
// // // // // //                                                 content: Wrap(
// // // // // //                                                   spacing: 8.w,
// // // // // //                                                   children:
// // // // // //                                                       Colors.primaries.map((c) {
// // // // // //                                                         return GestureDetector(
// // // // // //                                                           onTap: () => Navigator.pop(context, c),
// // // // // //                                                           child: Container(
// // // // // //                                                             width: 30.w,
// // // // // //                                                             height: 30.w,
// // // // // //                                                             decoration: BoxDecoration(
// // // // // //                                                               color: c,
// // // // // //                                                               borderRadius: BorderRadius.circular(
// // // // // //                                                                 15.r,
// // // // // //                                                               ),
// // // // // //                                                             ),
// // // // // //                                                           ),
// // // // // //                                                         );
// // // // // //                                                       }).toList(),
// // // // // //                                                 ),
// // // // // //                                               ),
// // // // // //                                         );
// // // // // //                                         if (color != null) {
// // // // // //                                           setState(() => players[index].color = color);
// // // // // //                                         }
// // // // // //                                       },
// // // // // //                                       style: ElevatedButton.styleFrom(
// // // // // //                                         backgroundColor: player.color,
// // // // // //                                         foregroundColor: Colors.white,
// // // // // //                                         shape: RoundedRectangleBorder(
// // // // // //                                           borderRadius: BorderRadius.circular(12.r),
// // // // // //                                         ),
// // // // // //                                       ),
// // // // // //                                       child: const Text('Color'),
// // // // // //                                     ),
// // // // // //                                   ],
// // // // // //                                 ),
// // // // // //                               ),
// // // // // //                             ),
// // // // // //                           ),
// // // // // //                         ),
// // // // // //                       ),
// // // // // //                     );
// // // // // //                   },
// // // // // //                 ),
// // // // // //               ),
// // // // // //             ],
// // // // // //           ),
// // // // // //         ),
// // // // // //       ),
// // // // // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // // // // //       floatingActionButton: Padding(
// // // // // //         padding: EdgeInsets.only(bottom: 16.h),
// // // // // //         child: Row(
// // // // // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // // // // //           children: [
// // // // // //             FloatingActionButton.extended(
// // // // // //               heroTag: 'addPlayerBtn',
// // // // // //               onPressed: addPlayer,
// // // // // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // // // // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // // // // //               backgroundColor: Colors.indigo,
// // // // // //             ),
// // // // // //             FloatingActionButton.extended(
// // // // // //               heroTag: 'startBtn',
// // // // // //               onPressed: () {
// // // // // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // // // // //                   Navigator.push(
// // // // // //                     context,
// // // // // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // // // // //                   );
// // // // // //                 } else {
// // // // // //                   ScaffoldMessenger.of(
// // // // // //                     context,
// // // // // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // // // // //                 }
// // // // // //               },
// // // // // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // // // // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // // // // //               backgroundColor: Colors.teal,
// // // // // //             ),
// // // // // //           ],
// // // // // //         ),
// // // // // //       ),
// // // // // //     );
// // // // // //   }
// // // // // // }

// // // // // // class TimerScreen extends StatefulWidget {
// // // // // //   final List<Player> players;
// // // // // //   const TimerScreen({super.key, required this.players});

// // // // // //   @override
// // // // // //   State<TimerScreen> createState() => _TimerScreenState();
// // // // // // }

// // // // // // class _TimerScreenState extends State<TimerScreen> {
// // // // // //   Timer? _timer;
// // // // // //   int currentIndex = 0;

// // // // // //   @override
// // // // // //   void initState() {
// // // // // //     super.initState();
// // // // // //     startTimer();
// // // // // //   }

// // // // // //   void startTimer() {
// // // // // //     _timer?.cancel();
// // // // // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // // // // //       setState(() {
// // // // // //         final player = widget.players[currentIndex];
// // // // // //         if (player.seconds > 0) {
// // // // // //           player.seconds--;
// // // // // //           player.elapsedSeconds++;
// // // // // //         } else {
// // // // // //           player.isCompleted = true;
// // // // // //           switchToNextPlayer();
// // // // // //         }
// // // // // //       });
// // // // // //     });
// // // // // //   }

// // // // // //   void pauseTimer() {
// // // // // //     _timer?.cancel();
// // // // // //   }

// // // // // //   void switchToNextPlayer() {
// // // // // //     pauseTimer();
// // // // // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // // // // //       showSummaryDialog();
// // // // // //       return;
// // // // // //     }
// // // // // //     do {
// // // // // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // // // // //     } while (widget.players[currentIndex].isCompleted);
// // // // // //     startTimer();
// // // // // //   }

// // // // // //   void resetAll() {
// // // // // //     for (var p in widget.players) {
// // // // // //       p.seconds = p.originalSeconds;
// // // // // //       p.elapsedSeconds = 0;
// // // // // //       p.isCompleted = false;
// // // // // //     }
// // // // // //     setState(() {
// // // // // //       currentIndex = 0;
// // // // // //     });
// // // // // //     startTimer();
// // // // // //   }

// // // // // //   String formatDuration(int seconds) {
// // // // // //     final d = Duration(seconds: seconds);
// // // // // //     final hours = d.inHours.toString().padLeft(2, '0');
// // // // // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // // // // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // // // // //     return '$hours:$minutes:$secs';
// // // // // //   }

// // // // // //   void showSummaryDialog() {
// // // // // //     _timer?.cancel();
// // // // // //     showDialog(
// // // // // //       context: context,
// // // // // //       builder:
// // // // // //           (_) => AlertDialog(
// // // // // //             title: const Text('Round Complete'),
// // // // // //             content: Column(
// // // // // //               mainAxisSize: MainAxisSize.min,
// // // // // //               children:
// // // // // //                   widget.players.map((p) {
// // // // // //                     final formatted = formatDuration(p.elapsedSeconds);
// // // // // //                     return Text('${p.name} ⏱ $formatted');
// // // // // //                   }).toList(),
// // // // // //             ),
// // // // // //             actions: [
// // // // // //               TextButton(
// // // // // //                 onPressed: () {
// // // // // //                   Navigator.of(context).pop();
// // // // // //                   resetAll();
// // // // // //                 },
// // // // // //                 child: const Text('Next Round'),
// // // // // //               ),
// // // // // //               TextButton(
// // // // // //                 onPressed: () {
// // // // // //                   resetAll();
// // // // // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // //                 },
// // // // // //                 child: const Text('Home'),
// // // // // //               ),
// // // // // //             ],
// // // // // //           ),
// // // // // //     );
// // // // // //   }

// // // // // //   @override
// // // // // //   void dispose() {
// // // // // //     _timer?.cancel();
// // // // // //     super.dispose();
// // // // // //   }

// // // // // //   @override
// // // // // //   Widget build(BuildContext context) {
// // // // // //     final player = widget.players[currentIndex];
// // // // // //     return Scaffold(
// // // // // //       backgroundColor: player.color,
// // // // // //       body: SafeArea(
// // // // // //         child: GestureDetector(
// // // // // //           behavior: HitTestBehavior.opaque,
// // // // // //           onTap: () {
// // // // // //             setState(() {
// // // // // //               pauseTimer();
// // // // // //               switchToNextPlayer();
// // // // // //             });
// // // // // //           },
// // // // // //           child: Stack(
// // // // // //             children: [
// // // // // //               Center(
// // // // // //                 child: Column(
// // // // // //                   mainAxisAlignment: MainAxisAlignment.center,
// // // // // //                   children: [
// // // // // //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // // // // //                     SizedBox(height: 16.h),
// // // // // //                     Text(
// // // // // //                       formatDuration(player.seconds),
// // // // // //                       style: TextStyle(
// // // // // //                         fontSize: 64.sp,
// // // // // //                         fontWeight: FontWeight.bold,
// // // // // //                         color: Colors.white,
// // // // // //                       ),
// // // // // //                     ),
// // // // // //                     SizedBox(height: 24.h),
// // // // // //                     ElevatedButton(
// // // // // //                       onPressed: () {
// // // // // //                         setState(() {
// // // // // //                           widget.players[currentIndex].isCompleted = true;
// // // // // //                           pauseTimer();
// // // // // //                           switchToNextPlayer();
// // // // // //                         });
// // // // // //                       },
// // // // // //                       child: const Text('Complete'),
// // // // // //                     ),
// // // // // //                     SizedBox(height: 12.h),
// // // // // //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // // // // //                   ],
// // // // // //                 ),
// // // // // //               ),
// // // // // //               Positioned(
// // // // // //                 top: 20.h,
// // // // // //                 right: 20.w,
// // // // // //                 child: IconButton(
// // // // // //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // // // // //                   onPressed: () {
// // // // // //                     pauseTimer();
// // // // // //                     showDialog(
// // // // // //                       context: context,
// // // // // //                       builder:
// // // // // //                           (context) => AlertDialog(
// // // // // //                             title: const Text('홈으로 이동'),
// // // // // //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // // // // //                             actions: [
// // // // // //                               TextButton(
// // // // // //                                 onPressed: () {
// // // // // //                                   Navigator.of(context).pop();
// // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // //                                 },
// // // // // //                                 child: const Text('설정 유지'),
// // // // // //                               ),
// // // // // //                               TextButton(
// // // // // //                                 onPressed: () {
// // // // // //                                   resetAll();
// // // // // //                                   Navigator.of(context).pop();
// // // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // // //                                 },
// // // // // //                                 child: const Text('초기화 후 이동'),
// // // // // //                               ),
// // // // // //                               TextButton(
// // // // // //                                 onPressed: () => Navigator.of(context).pop(),
// // // // // //                                 child: const Text('취소'),
// // // // // //                               ),
// // // // // //                             ],
// // // // // //                           ),
// // // // // //                     );
// // // // // //                   },
// // // // // //                 ),
// // // // // //               ),
// // // // // //             ],
// // // // // //           ),
// // // // // //         ),
// // // // // //       ),
// // // // // //     );
// // // // // //   }
// // // // // // }

// // // // // import 'package:flutter/material.dart';
// // // // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // // // import 'package:flutter/cupertino.dart';
// // // // // import 'dart:async';
// // // // // import 'dart:convert';
// // // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // // // void main() async {
// // // // //   WidgetsFlutterBinding.ensureInitialized();
// // // // //   final prefs = await SharedPreferences.getInstance();
// // // // //   final lastUsed = prefs.getString('last_used_preset');
// // // // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // // // }

// // // // // class MyApp extends StatelessWidget {
// // // // //   final String? lastUsedPreset;
// // // // //   const MyApp({super.key, this.lastUsedPreset});

// // // // //   @override
// // // // //   Widget build(BuildContext context) {
// // // // //     return ScreenUtilInit(
// // // // //       designSize: const Size(390, 844),
// // // // //       builder:
// // // // //           (context, child) => MaterialApp(
// // // // //             debugShowCheckedModeBanner: false,
// // // // //             title: 'Multi Player Timer',
// // // // //             theme: ThemeData(
// // // // //               scaffoldBackgroundColor: Colors.white,
// // // // //               fontFamily: 'Roboto',
// // // // //               textTheme: TextTheme(
// // // // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // // // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // // // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // // // //               ),
// // // // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // // // //                 style: ElevatedButton.styleFrom(
// // // // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // // // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // // // //                 ),
// // // // //               ),
// // // // //             ),
// // // // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // // // //           ),
// // // // //     );
// // // // //   }
// // // // // }

// // // // // class Player {
// // // // //   String name;
// // // // //   int seconds;
// // // // //   int originalSeconds;
// // // // //   Color color;
// // // // //   bool isCompleted;
// // // // //   int elapsedSeconds = 0;

// // // // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // // // //     : originalSeconds = seconds;

// // // // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // // // //   static Player fromJson(Map<String, dynamic> json) =>
// // // // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // // // }

// // // // // class PlayerSetupScreen extends StatefulWidget {
// // // // //   final String? lastUsedPreset;
// // // // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // // // //   @override
// // // // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // // // }

// // // // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // // // //   final List<Player> players = [];
// // // // //   final List<TextEditingController> nameControllers = [];
// // // // //   String? currentPresetName;

// // // // //   @override
// // // // //   void initState() {
// // // // //     super.initState();
// // // // //     if (widget.lastUsedPreset != null) {
// // // // //       currentPresetName = widget.lastUsedPreset;
// // // // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // // // //     } else {
// // // // //       initializePlayers(2);
// // // // //     }
// // // // //   }

// // // // //   void initializePlayers(int count) {
// // // // //     players.clear();
// // // // //     nameControllers.clear();
// // // // //     for (int i = 0; i < count; i++) {
// // // // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // // // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // // // //     }
// // // // //     setState(() {});
// // // // //   }

// // // // //   void addPlayer() {
// // // // //     final newIndex = players.length;
// // // // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // // // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // // // //     setState(() {});
// // // // //   }

// // // // //   void removePlayer(int index) {
// // // // //     players.removeAt(index);
// // // // //     nameControllers.removeAt(index);
// // // // //     setState(() {});
// // // // //   }

// // // // //   Future<void> saveCurrentSettings(String presetName) async {
// // // // //     if (presetName.isEmpty) return;
// // // // //     final prefs = await SharedPreferences.getInstance();
// // // // //     final encoded = players.map((p) => p.toJson()).toList();
// // // // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // // // //     await prefs.setString('last_used_preset', presetName);
// // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // //     if (!names.contains(presetName)) {
// // // // //       names.add(presetName);
// // // // //       await prefs.setStringList('preset_names', names);
// // // // //     }
// // // // //     setState(() {
// // // // //       currentPresetName = presetName;
// // // // //     });
// // // // //   }

// // // // //   Future<void> deletePreset(String presetName) async {
// // // // //     final prefs = await SharedPreferences.getInstance();
// // // // //     await prefs.remove('preset_$presetName');
// // // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // // //     names.remove(presetName);
// // // // //     await prefs.setStringList('preset_names', names);
// // // // //     final lastUsed = prefs.getString('last_used_preset');
// // // // //     if (lastUsed == presetName) {
// // // // //       await prefs.remove('last_used_preset');
// // // // //       setState(() {
// // // // //         currentPresetName = null;
// // // // //       });
// // // // //     }
// // // // //   }

// // // // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // // // //     try {
// // // // //       final prefs = await SharedPreferences.getInstance();
// // // // //       final jsonString = prefs.getString('preset_$presetName');
// // // // //       if (jsonString == null) return;
// // // // //       final List decoded = jsonDecode(jsonString);
// // // // //       players.clear();
// // // // //       nameControllers.clear();
// // // // //       for (var p in decoded) {
// // // // //         final player = Player.fromJson(p);
// // // // //         players.add(player);
// // // // //         nameControllers.add(TextEditingController(text: player.name));
// // // // //       }
// // // // //       setState(() {
// // // // //         currentPresetName = presetName;
// // // // //       });
// // // // //       if (!autoLoad) {
// // // // //         await prefs.setString('last_used_preset', presetName);
// // // // //       }
// // // // //     } catch (_) {
// // // // //       ScaffoldMessenger.of(
// // // // //         context,
// // // // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // // // //     }
// // // // //   }

// // // // //   void showSaveDialog() async {
// // // // //     final controller = TextEditingController();
// // // // //     await showDialog(
// // // // //       context: context,
// // // // //       builder:
// // // // //           (ctx) => AlertDialog(
// // // // //             title: const Text("설정 이름 저장"),
// // // // //             content: TextField(
// // // // //               controller: controller,
// // // // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // // // //             ),
// // // // //             actions: [
// // // // //               TextButton(
// // // // //                 onPressed: () async {
// // // // //                   await saveCurrentSettings(controller.text.trim());
// // // // //                   Navigator.of(ctx).pop();
// // // // //                 },
// // // // //                 child: const Text("저장"),
// // // // //               ),
// // // // //             ],
// // // // //           ),
// // // // //     );
// // // // //   }

// // // // //   void showLoadDialog() async {
// // // // //     final prefs = await SharedPreferences.getInstance();
// // // // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // // // //     if (presetNames.isEmpty) {
// // // // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // // // //       return;
// // // // //     }
// // // // //     await showDialog(
// // // // //       context: context,
// // // // //       builder:
// // // // //           (ctx) => AlertDialog(
// // // // //             title: const Text("불러올 설정 선택"),
// // // // //             content: SingleChildScrollView(
// // // // //               child: Column(
// // // // //                 mainAxisSize: MainAxisSize.min,
// // // // //                 children:
// // // // //                     presetNames.map((name) {
// // // // //                       return ListTile(
// // // // //                         title: Text(name),
// // // // //                         trailing: IconButton(
// // // // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // // // //                           onPressed: () async {
// // // // //                             Navigator.of(ctx).pop();
// // // // //                             await deletePreset(name);
// // // // //                           },
// // // // //                         ),
// // // // //                         onTap: () async {
// // // // //                           Navigator.of(ctx).pop();
// // // // //                           await loadPreset(name);
// // // // //                         },
// // // // //                       );
// // // // //                     }).toList(),
// // // // //               ),
// // // // //             ),
// // // // //           ),
// // // // //     );
// // // // //   }

// // // // //   void clearAllSettings() async {
// // // // //     initializePlayers(2);
// // // // //     final prefs = await SharedPreferences.getInstance();
// // // // //     await prefs.remove('last_used_preset');
// // // // //     setState(() {
// // // // //       currentPresetName = null;
// // // // //     });
// // // // //   }

// // // // //   @override
// // // // //   Widget build(BuildContext context) {
// // // // //     return Scaffold(
// // // // //       body: SafeArea(
// // // // //         child: Padding(
// // // // //           padding: EdgeInsets.all(24.w),
// // // // //           child: Column(
// // // // //             crossAxisAlignment: CrossAxisAlignment.start,
// // // // //             children: [
// // // // //               SizedBox(height: 40.h),
// // // // //               Text(
// // // // //                 'TimeSquad',
// // // // //                 style: TextStyle(
// // // // //                   fontSize: 36.sp,
// // // // //                   fontWeight: FontWeight.w800,
// // // // //                   letterSpacing: 1.2,
// // // // //                   color: Colors.black87,
// // // // //                 ),
// // // // //               ),
// // // // //               SizedBox(height: 4.h),
// // // // //               Row(
// // // // //                 children: [
// // // // //                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// // // // //                   const Spacer(),
// // // // //                   Row(
// // // // //                     mainAxisSize: MainAxisSize.min,
// // // // //                     children: [
// // // // //                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // // // //                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // // // //                       IconButton(
// // // // //                         icon: const Icon(FeatherIcons.rotateCcw),
// // // // //                         onPressed: clearAllSettings,
// // // // //                       ),
// // // // //                     ],
// // // // //                   ),
// // // // //                 ],
// // // // //               ),
// // // // //               SizedBox(height: 24.h),
// // // // //               Expanded(
// // // // //                 child: ReorderableListView.builder(
// // // // //                   padding: EdgeInsets.only(bottom: 120.h),
// // // // //                   buildDefaultDragHandles: false,
// // // // //                   proxyDecorator: (child, index, animation) {
// // // // //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // // // //                     return ScaleTransition(
// // // // //                       scale: scale,
// // // // //                       child: Material(
// // // // //                         elevation: 0,
// // // // //                         shadowColor: Colors.transparent,
// // // // //                         color: Colors.transparent,
// // // // //                         child: child,
// // // // //                       ),
// // // // //                     );
// // // // //                   },
// // // // //                   itemCount: players.length,
// // // // //                   onReorder: (oldIndex, newIndex) {
// // // // //                     setState(() {
// // // // //                       if (newIndex > oldIndex) newIndex--;
// // // // //                       final player = players.removeAt(oldIndex);
// // // // //                       final controller = nameControllers.removeAt(oldIndex);
// // // // //                       players.insert(newIndex, player);
// // // // //                       nameControllers.insert(newIndex, controller);
// // // // //                     });
// // // // //                   },
// // // // //                   itemBuilder: (context, index) {
// // // // //                     final player = players[index];
// // // // //                     const double borderRadius = 20.0;

// // // // //                     return ReorderableDelayedDragStartListener(
// // // // //                       key: ValueKey(player),
// // // // //                       index: index,
// // // // //                       child: Padding(
// // // // //                         padding: EdgeInsets.only(bottom: 12.h),
// // // // //                         child: Card(
// // // // //                           margin: EdgeInsets.zero,
// // // // //                           shape: RoundedRectangleBorder(
// // // // //                             borderRadius: BorderRadius.circular(borderRadius.r),
// // // // //                           ),
// // // // //                           clipBehavior: Clip.antiAlias, // Card clips its own content
// // // // //                           elevation: 0,
// // // // //                           child: ClipRRect(
// // // // //                             // <--- Apply ClipRRect here, around the entire Dismissible
// // // // //                             borderRadius: BorderRadius.circular(
// // // // //                               borderRadius.r,
// // // // //                             ), // Match the card's radius
// // // // //                             child: Dismissible(
// // // // //                               key: ValueKey(player),
// // // // //                               direction: DismissDirection.horizontal,
// // // // //                               background: Container(
// // // // //                                 alignment: Alignment.centerLeft,
// // // // //                                 padding: EdgeInsets.only(left: 20.w),
// // // // //                                 decoration: BoxDecoration(
// // // // //                                   // <--- Added BoxDecoration with borderRadius
// // // // //                                   color: Colors.redAccent,
// // // // //                                   borderRadius: BorderRadius.only(
// // // // //                                     topLeft: Radius.circular(borderRadius.r),
// // // // //                                     bottomLeft: Radius.circular(borderRadius.r),
// // // // //                                   ),
// // // // //                                 ),
// // // // //                                 child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // // // //                               ),
// // // // //                               secondaryBackground: Container(
// // // // //                                 alignment: Alignment.centerRight,
// // // // //                                 padding: EdgeInsets.only(right: 20.w),
// // // // //                                 decoration: BoxDecoration(
// // // // //                                   // <--- Added BoxDecoration with borderRadius
// // // // //                                   color: Colors.redAccent,
// // // // //                                   borderRadius: BorderRadius.only(
// // // // //                                     topRight: Radius.circular(borderRadius.r),
// // // // //                                     bottomRight: Radius.circular(borderRadius.r),
// // // // //                                   ),
// // // // //                                 ),
// // // // //                                 child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // // // //                               ),
// // // // //                               onDismissed: (_) {
// // // // //                                 setState(() {
// // // // //                                   players.remove(player);
// // // // //                                   nameControllers.removeAt(index);
// // // // //                                 });
// // // // //                               },
// // // // //                               child: Container(
// // // // //                                 padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // // // //                                 decoration: BoxDecoration(
// // // // //                                   color: Color.lerp(Colors.white, player.color, 0.2),
// // // // //                                 ),
// // // // //                                 child: Row(
// // // // //                                   children: [
// // // // //                                     Container(
// // // // //                                       width: 40.w,
// // // // //                                       height: 40.w,
// // // // //                                       alignment: Alignment.center,
// // // // //                                       decoration: BoxDecoration(
// // // // //                                         color: Colors.white,
// // // // //                                         borderRadius: BorderRadius.circular(12.r),
// // // // //                                       ),
// // // // //                                       child: Text(
// // // // //                                         '${index + 1}',
// // // // //                                         style: TextStyle(
// // // // //                                           fontSize: 18.sp,
// // // // //                                           fontWeight: FontWeight.bold,
// // // // //                                         ),
// // // // //                                       ),
// // // // //                                     ),
// // // // //                                     SizedBox(width: 12.w),
// // // // //                                     Expanded(
// // // // //                                       child: Column(
// // // // //                                         crossAxisAlignment: CrossAxisAlignment.start,
// // // // //                                         children: [
// // // // //                                           Container(
// // // // //                                             decoration: BoxDecoration(
// // // // //                                               color: Colors.white.withOpacity(0.6),
// // // // //                                               borderRadius: BorderRadius.circular(8.r),
// // // // //                                             ),
// // // // //                                             padding: EdgeInsets.symmetric(
// // // // //                                               horizontal: 8.w,
// // // // //                                               vertical: 4.h,
// // // // //                                             ),
// // // // //                                             child: TextField(
// // // // //                                               controller: nameControllers[index],
// // // // //                                               onChanged: (val) => players[index].name = val,
// // // // //                                               style: TextStyle(
// // // // //                                                 fontSize: 16.sp,
// // // // //                                                 fontWeight: FontWeight.w500,
// // // // //                                               ),
// // // // //                                               decoration: const InputDecoration.collapsed(
// // // // //                                                 hintText: 'Enter name',
// // // // //                                               ),
// // // // //                                             ),
// // // // //                                           ),
// // // // //                                           SizedBox(height: 8.h),
// // // // //                                           GestureDetector(
// // // // //                                             onTap: () async {
// // // // //                                               Duration selectedDuration = Duration(
// // // // //                                                 seconds: players[index].originalSeconds,
// // // // //                                               );
// // // // //                                               await showModalBottomSheet(
// // // // //                                                 context: context,
// // // // //                                                 builder:
// // // // //                                                     (context) => SizedBox(
// // // // //                                                       height: 200,
// // // // //                                                       child: CupertinoTimerPicker(
// // // // //                                                         mode: CupertinoTimerPickerMode.hms,
// // // // //                                                         initialTimerDuration: selectedDuration,
// // // // //                                                         onTimerDurationChanged: (
// // // // //                                                           Duration newDuration,
// // // // //                                                         ) {
// // // // //                                                           setState(() {
// // // // //                                                             players[index].seconds =
// // // // //                                                                 newDuration.inSeconds;
// // // // //                                                             players[index].originalSeconds =
// // // // //                                                                 newDuration.inSeconds;
// // // // //                                                           });
// // // // //                                                         },
// // // // //                                                       ),
// // // // //                                                     ),
// // // // //                                               );
// // // // //                                             },
// // // // //                                             child: Container(
// // // // //                                               decoration: BoxDecoration(
// // // // //                                                 color: Colors.white.withOpacity(0.6),
// // // // //                                                 borderRadius: BorderRadius.circular(8.r),
// // // // //                                               ),
// // // // //                                               padding: EdgeInsets.symmetric(
// // // // //                                                 horizontal: 12.w,
// // // // //                                                 vertical: 10.h,
// // // // //                                               ),
// // // // //                                               child: Text(
// // // // //                                                 'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // // // //                                                 style: TextStyle(
// // // // //                                                   fontSize: 16.sp,
// // // // //                                                   fontWeight: FontWeight.w500,
// // // // //                                                 ),
// // // // //                                               ),
// // // // //                                             ),
// // // // //                                           ),
// // // // //                                         ],
// // // // //                                       ),
// // // // //                                     ),
// // // // //                                     SizedBox(width: 8.w),
// // // // //                                     ElevatedButton(
// // // // //                                       onPressed: () async {
// // // // //                                         FocusScope.of(context).unfocus();
// // // // //                                         final color = await showDialog<Color>(
// // // // //                                           context: context,
// // // // //                                           builder:
// // // // //                                               (context) => AlertDialog(
// // // // //                                                 title: const Text('Select Color'),
// // // // //                                                 content: Wrap(
// // // // //                                                   spacing: 8.w,
// // // // //                                                   children:
// // // // //                                                       Colors.primaries.map((c) {
// // // // //                                                         return GestureDetector(
// // // // //                                                           onTap: () => Navigator.pop(context, c),
// // // // //                                                           child: Container(
// // // // //                                                             width: 30.w,
// // // // //                                                             height: 30.w,
// // // // //                                                             decoration: BoxDecoration(
// // // // //                                                               color: c,
// // // // //                                                               borderRadius: BorderRadius.circular(
// // // // //                                                                 15.r,
// // // // //                                                               ),
// // // // //                                                             ),
// // // // //                                                           ),
// // // // //                                                         );
// // // // //                                                       }).toList(),
// // // // //                                                 ),
// // // // //                                               ),
// // // // //                                         );
// // // // //                                         if (color != null) {
// // // // //                                           setState(() => players[index].color = color);
// // // // //                                         }
// // // // //                                       },
// // // // //                                       style: ElevatedButton.styleFrom(
// // // // //                                         backgroundColor: player.color,
// // // // //                                         foregroundColor: Colors.white,
// // // // //                                         shape: RoundedRectangleBorder(
// // // // //                                           borderRadius: BorderRadius.circular(12.r),
// // // // //                                         ),
// // // // //                                       ),
// // // // //                                       child: const Text('Color'),
// // // // //                                     ),
// // // // //                                   ],
// // // // //                                 ),
// // // // //                               ),
// // // // //                             ),
// // // // //                           ),
// // // // //                         ),
// // // // //                       ),
// // // // //                     );
// // // // //                   },
// // // // //                 ),
// // // // //               ),
// // // // //             ],
// // // // //           ),
// // // // //         ),
// // // // //       ),
// // // // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // // // //       floatingActionButton: Padding(
// // // // //         padding: EdgeInsets.only(bottom: 16.h),
// // // // //         child: Row(
// // // // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // // // //           children: [
// // // // //             FloatingActionButton.extended(
// // // // //               heroTag: 'addPlayerBtn',
// // // // //               onPressed: addPlayer,
// // // // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // // // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // // // //               backgroundColor: Colors.indigo,
// // // // //             ),
// // // // //             FloatingActionButton.extended(
// // // // //               heroTag: 'startBtn',
// // // // //               onPressed: () {
// // // // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // // // //                   Navigator.push(
// // // // //                     context,
// // // // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // // // //                   );
// // // // //                 } else {
// // // // //                   ScaffoldMessenger.of(
// // // // //                     context,
// // // // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // // // //                 }
// // // // //               },
// // // // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // // // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // // // //               backgroundColor: Colors.teal,
// // // // //             ),
// // // // //           ],
// // // // //         ),
// // // // //       ),
// // // // //     );
// // // // //   }
// // // // // }

// // // // // class TimerScreen extends StatefulWidget {
// // // // //   final List<Player> players;
// // // // //   const TimerScreen({super.key, required this.players});

// // // // //   @override
// // // // //   State<TimerScreen> createState() => _TimerScreenState();
// // // // // }

// // // // // class _TimerScreenState extends State<TimerScreen> {
// // // // //   Timer? _timer;
// // // // //   int currentIndex = 0;

// // // // //   @override
// // // // //   void initState() {
// // // // //     super.initState();
// // // // //     startTimer();
// // // // //   }

// // // // //   void startTimer() {
// // // // //     _timer?.cancel();
// // // // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // // // //       setState(() {
// // // // //         final player = widget.players[currentIndex];
// // // // //         if (player.seconds > 0) {
// // // // //           player.seconds--;
// // // // //           player.elapsedSeconds++;
// // // // //         } else {
// // // // //           player.isCompleted = true;
// // // // //           switchToNextPlayer();
// // // // //         }
// // // // //       });
// // // // //     });
// // // // //   }

// // // // //   void pauseTimer() {
// // // // //     _timer?.cancel();
// // // // //   }

// // // // //   void switchToNextPlayer() {
// // // // //     pauseTimer();
// // // // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // // // //       showSummaryDialog();
// // // // //       return;
// // // // //     }
// // // // //     do {
// // // // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // // // //     } while (widget.players[currentIndex].isCompleted);
// // // // //     startTimer();
// // // // //   }

// // // // //   void resetAll() {
// // // // //     for (var p in widget.players) {
// // // // //       p.seconds = p.originalSeconds;
// // // // //       p.elapsedSeconds = 0;
// // // // //       p.isCompleted = false;
// // // // //     }
// // // // //     setState(() {
// // // // //       currentIndex = 0;
// // // // //     });
// // // // //     startTimer();
// // // // //   }

// // // // //   String formatDuration(int seconds) {
// // // // //     final d = Duration(seconds: seconds);
// // // // //     final hours = d.inHours.toString().padLeft(2, '0');
// // // // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // // // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // // // //     return '$hours:$minutes:$secs';
// // // // //   }

// // // // //   void showSummaryDialog() {
// // // // //     _timer?.cancel();
// // // // //     showDialog(
// // // // //       context: context,
// // // // //       builder:
// // // // //           (_) => AlertDialog(
// // // // //             title: const Text('Round Complete'),
// // // // //             content: Column(
// // // // //               mainAxisSize: MainAxisSize.min,
// // // // //               children:
// // // // //                   widget.players.map((p) {
// // // // //                     final formatted = formatDuration(p.elapsedSeconds);
// // // // //                     return Text('${p.name} ⏱ $formatted');
// // // // //                   }).toList(),
// // // // //             ),
// // // // //             actions: [
// // // // //               TextButton(
// // // // //                 onPressed: () {
// // // // //                   Navigator.of(context).pop();
// // // // //                   resetAll();
// // // // //                 },
// // // // //                 child: const Text('Next Round'),
// // // // //               ),
// // // // //               TextButton(
// // // // //                 onPressed: () {
// // // // //                   resetAll();
// // // // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // //                 },
// // // // //                 child: const Text('Home'),
// // // // //               ),
// // // // //             ],
// // // // //           ),
// // // // //     );
// // // // //   }

// // // // //   @override
// // // // //   void dispose() {
// // // // //     _timer?.cancel();
// // // // //     super.dispose();
// // // // //   }

// // // // //   @override
// // // // //   Widget build(BuildContext context) {
// // // // //     final player = widget.players[currentIndex];
// // // // //     return Scaffold(
// // // // //       backgroundColor: player.color,
// // // // //       body: SafeArea(
// // // // //         child: GestureDetector(
// // // // //           behavior: HitTestBehavior.opaque,
// // // // //           onTap: () {
// // // // //             setState(() {
// // // // //               pauseTimer();
// // // // //               switchToNextPlayer();
// // // // //             });
// // // // //           },
// // // // //           child: Stack(
// // // // //             children: [
// // // // //               Center(
// // // // //                 child: Column(
// // // // //                   mainAxisAlignment: MainAxisAlignment.center,
// // // // //                   children: [
// // // // //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // // // //                     SizedBox(height: 16.h),
// // // // //                     Text(
// // // // //                       formatDuration(player.seconds),
// // // // //                       style: TextStyle(
// // // // //                         fontSize: 64.sp,
// // // // //                         fontWeight: FontWeight.bold,
// // // // //                         color: Colors.white,
// // // // //                       ),
// // // // //                     ),
// // // // //                     SizedBox(height: 24.h),
// // // // //                     ElevatedButton(
// // // // //                       onPressed: () {
// // // // //                         setState(() {
// // // // //                           widget.players[currentIndex].isCompleted = true;
// // // // //                           pauseTimer();
// // // // //                           switchToNextPlayer();
// // // // //                         });
// // // // //                       },
// // // // //                       child: const Text('Complete'),
// // // // //                     ),
// // // // //                     SizedBox(height: 12.h),
// // // // //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // // // //                   ],
// // // // //                 ),
// // // // //               ),
// // // // //               Positioned(
// // // // //                 top: 20.h,
// // // // //                 right: 20.w,
// // // // //                 child: IconButton(
// // // // //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // // // //                   onPressed: () {
// // // // //                     pauseTimer();
// // // // //                     showDialog(
// // // // //                       context: context,
// // // // //                       builder:
// // // // //                           (context) => AlertDialog(
// // // // //                             title: const Text('홈으로 이동'),
// // // // //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // // // //                             actions: [
// // // // //                               TextButton(
// // // // //                                 onPressed: () {
// // // // //                                   Navigator.of(context).pop();
// // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // //                                 },
// // // // //                                 child: const Text('설정 유지'),
// // // // //                               ),
// // // // //                               TextButton(
// // // // //                                 onPressed: () {
// // // // //                                   resetAll();
// // // // //                                   Navigator.of(context).pop();
// // // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // // //                                 },
// // // // //                                 child: const Text('초기화 후 이동'),
// // // // //                               ),
// // // // //                               TextButton(
// // // // //                                 onPressed: () => Navigator.of(context).pop(),
// // // // //                                 child: const Text('취소'),
// // // // //                               ),
// // // // //                             ],
// // // // //                           ),
// // // // //                     );
// // // // //                   },
// // // // //                 ),
// // // // //               ),
// // // // //             ],
// // // // //           ),
// // // // //         ),
// // // // //       ),
// // // // //     );
// // // // //   }
// // // // // }

// // // // // 클러드 버전

// // // // import 'package:flutter/material.dart';
// // // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // // import 'package:flutter/cupertino.dart';
// // // // import 'dart:async';
// // // // import 'dart:convert';
// // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // // void main() async {
// // // //   WidgetsFlutterBinding.ensureInitialized();
// // // //   final prefs = await SharedPreferences.getInstance();
// // // //   final lastUsed = prefs.getString('last_used_preset');
// // // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // // }

// // // // class MyApp extends StatelessWidget {
// // // //   final String? lastUsedPreset;
// // // //   const MyApp({super.key, this.lastUsedPreset});

// // // //   @override
// // // //   Widget build(BuildContext context) {
// // // //     return ScreenUtilInit(
// // // //       designSize: const Size(390, 844),
// // // //       builder:
// // // //           (context, child) => MaterialApp(
// // // //             debugShowCheckedModeBanner: false,
// // // //             title: 'Multi Player Timer',
// // // //             theme: ThemeData(
// // // //               scaffoldBackgroundColor: Colors.white,
// // // //               fontFamily: 'Roboto',
// // // //               textTheme: TextTheme(
// // // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // // //               ),
// // // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // // //                 style: ElevatedButton.styleFrom(
// // // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // // //                 ),
// // // //               ),
// // // //             ),
// // // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // // //           ),
// // // //     );
// // // //   }
// // // // }

// // // // class Player {
// // // //   String name;
// // // //   int seconds;
// // // //   int originalSeconds;
// // // //   Color color;
// // // //   bool isCompleted;
// // // //   int elapsedSeconds = 0;

// // // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // // //     : originalSeconds = seconds;

// // // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // // //   static Player fromJson(Map<String, dynamic> json) =>
// // // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // // }

// // // // class PlayerSetupScreen extends StatefulWidget {
// // // //   final String? lastUsedPreset;
// // // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // // //   @override
// // // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // // }

// // // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // // //   final List<Player> players = [];
// // // //   final List<TextEditingController> nameControllers = [];
// // // //   String? currentPresetName;

// // // //   @override
// // // //   void initState() {
// // // //     super.initState();
// // // //     if (widget.lastUsedPreset != null) {
// // // //       currentPresetName = widget.lastUsedPreset;
// // // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // // //     } else {
// // // //       initializePlayers(2);
// // // //     }
// // // //   }

// // // //   void initializePlayers(int count) {
// // // //     players.clear();
// // // //     nameControllers.clear();
// // // //     for (int i = 0; i < count; i++) {
// // // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // // //     }
// // // //     setState(() {});
// // // //   }

// // // //   void addPlayer() {
// // // //     final newIndex = players.length;
// // // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // // //     setState(() {});
// // // //   }

// // // //   void removePlayer(int index) {
// // // //     players.removeAt(index);
// // // //     nameControllers.removeAt(index);
// // // //     setState(() {});
// // // //   }

// // // //   Future<void> saveCurrentSettings(String presetName) async {
// // // //     if (presetName.isEmpty) return;
// // // //     final prefs = await SharedPreferences.getInstance();
// // // //     final encoded = players.map((p) => p.toJson()).toList();
// // // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // // //     await prefs.setString('last_used_preset', presetName);
// // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // //     if (!names.contains(presetName)) {
// // // //       names.add(presetName);
// // // //       await prefs.setStringList('preset_names', names);
// // // //     }
// // // //     setState(() {
// // // //       currentPresetName = presetName;
// // // //     });
// // // //   }

// // // //   Future<void> deletePreset(String presetName) async {
// // // //     final prefs = await SharedPreferences.getInstance();
// // // //     await prefs.remove('preset_$presetName');
// // // //     final names = prefs.getStringList('preset_names') ?? [];
// // // //     names.remove(presetName);
// // // //     await prefs.setStringList('preset_names', names);
// // // //     final lastUsed = prefs.getString('last_used_preset');
// // // //     if (lastUsed == presetName) {
// // // //       await prefs.remove('last_used_preset');
// // // //       setState(() {
// // // //         currentPresetName = null;
// // // //       });
// // // //     }
// // // //   }

// // // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // // //     try {
// // // //       final prefs = await SharedPreferences.getInstance();
// // // //       final jsonString = prefs.getString('preset_$presetName');
// // // //       if (jsonString == null) return;
// // // //       final List decoded = jsonDecode(jsonString);
// // // //       players.clear();
// // // //       nameControllers.clear();
// // // //       for (var p in decoded) {
// // // //         final player = Player.fromJson(p);
// // // //         players.add(player);
// // // //         nameControllers.add(TextEditingController(text: player.name));
// // // //       }
// // // //       setState(() {
// // // //         currentPresetName = presetName;
// // // //       });
// // // //       if (!autoLoad) {
// // // //         await prefs.setString('last_used_preset', presetName);
// // // //       }
// // // //     } catch (_) {
// // // //       ScaffoldMessenger.of(
// // // //         context,
// // // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // // //     }
// // // //   }

// // // //   void showSaveDialog() async {
// // // //     final controller = TextEditingController();
// // // //     await showDialog(
// // // //       context: context,
// // // //       builder:
// // // //           (ctx) => AlertDialog(
// // // //             title: const Text("설정 이름 저장"),
// // // //             content: TextField(
// // // //               controller: controller,
// // // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // // //             ),
// // // //             actions: [
// // // //               TextButton(
// // // //                 onPressed: () async {
// // // //                   await saveCurrentSettings(controller.text.trim());
// // // //                   Navigator.of(ctx).pop();
// // // //                 },
// // // //                 child: const Text("저장"),
// // // //               ),
// // // //             ],
// // // //           ),
// // // //     );
// // // //   }

// // // //   void showLoadDialog() async {
// // // //     final prefs = await SharedPreferences.getInstance();
// // // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // // //     if (presetNames.isEmpty) {
// // // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // // //       return;
// // // //     }
// // // //     await showDialog(
// // // //       context: context,
// // // //       builder:
// // // //           (ctx) => AlertDialog(
// // // //             title: const Text("불러올 설정 선택"),
// // // //             content: SingleChildScrollView(
// // // //               child: Column(
// // // //                 mainAxisSize: MainAxisSize.min,
// // // //                 children:
// // // //                     presetNames.map((name) {
// // // //                       return ListTile(
// // // //                         title: Text(name),
// // // //                         trailing: IconButton(
// // // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // // //                           onPressed: () async {
// // // //                             Navigator.of(ctx).pop();
// // // //                             await deletePreset(name);
// // // //                           },
// // // //                         ),
// // // //                         onTap: () async {
// // // //                           Navigator.of(ctx).pop();
// // // //                           await loadPreset(name);
// // // //                         },
// // // //                       );
// // // //                     }).toList(),
// // // //               ),
// // // //             ),
// // // //           ),
// // // //     );
// // // //   }

// // // //   void clearAllSettings() async {
// // // //     initializePlayers(2);
// // // //     final prefs = await SharedPreferences.getInstance();
// // // //     await prefs.remove('last_used_preset');
// // // //     setState(() {
// // // //       currentPresetName = null;
// // // //     });
// // // //   }

// // // //   @override
// // // //   Widget build(BuildContext context) {
// // // //     return Scaffold(
// // // //       body: SafeArea(
// // // //         child: Padding(
// // // //           padding: EdgeInsets.all(24.w),
// // // //           child: Column(
// // // //             crossAxisAlignment: CrossAxisAlignment.start,
// // // //             children: [
// // // //               SizedBox(height: 40.h),
// // // //               Text(
// // // //                 'TimeSquad',
// // // //                 style: TextStyle(
// // // //                   fontSize: 36.sp,
// // // //                   fontWeight: FontWeight.w800,
// // // //                   letterSpacing: 1.2,
// // // //                   color: Colors.black87,
// // // //                 ),
// // // //               ),
// // // //               SizedBox(height: 4.h),
// // // //               Row(
// // // //                 children: [
// // // //                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// // // //                   const Spacer(),
// // // //                   Row(
// // // //                     mainAxisSize: MainAxisSize.min,
// // // //                     children: [
// // // //                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // // //                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // // //                       IconButton(
// // // //                         icon: const Icon(FeatherIcons.rotateCcw),
// // // //                         onPressed: clearAllSettings,
// // // //                       ),
// // // //                     ],
// // // //                   ),
// // // //                 ],
// // // //               ),
// // // //               SizedBox(height: 24.h),
// // // //               Expanded(
// // // //                 child: ReorderableListView.builder(
// // // //                   padding: EdgeInsets.only(bottom: 120.h),
// // // //                   buildDefaultDragHandles: false,
// // // //                   proxyDecorator: (child, index, animation) {
// // // //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // // //                     return ScaleTransition(
// // // //                       scale: scale,
// // // //                       child: Material(
// // // //                         elevation: 0,
// // // //                         shadowColor: Colors.transparent,
// // // //                         color: Colors.transparent,
// // // //                         child: child,
// // // //                       ),
// // // //                     );
// // // //                   },
// // // //                   itemCount: players.length,
// // // //                   onReorder: (oldIndex, newIndex) {
// // // //                     setState(() {
// // // //                       if (newIndex > oldIndex) newIndex--;
// // // //                       final player = players.removeAt(oldIndex);
// // // //                       final controller = nameControllers.removeAt(oldIndex);
// // // //                       players.insert(newIndex, player);
// // // //                       nameControllers.insert(newIndex, controller);
// // // //                     });
// // // //                   },
// // // //                   itemBuilder: (context, index) {
// // // //                     final player = players[index];
// // // //                     const double borderRadius = 20.0;

// // // //                     return ReorderableDelayedDragStartListener(
// // // //                       key: ValueKey(player),
// // // //                       index: index,
// // // //                       child: Padding(
// // // //                         padding: EdgeInsets.only(bottom: 12.h),
// // // //                         child: ClipRRect(
// // // //                           borderRadius: BorderRadius.circular(borderRadius.r),
// // // //                           child: Dismissible(
// // // //                             key: ValueKey(player),
// // // //                             direction: DismissDirection.horizontal,
// // // //                             background: Container(
// // // //                               alignment: Alignment.centerLeft,
// // // //                               padding: EdgeInsets.only(left: 20.w),
// // // //                               decoration: BoxDecoration(
// // // //                                 color: Colors.redAccent,
// // // //                                 borderRadius: BorderRadius.circular(borderRadius.r),
// // // //                               ),
// // // //                               child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // // //                             ),
// // // //                             secondaryBackground: Container(
// // // //                               alignment: Alignment.centerRight,
// // // //                               padding: EdgeInsets.only(right: 20.w),
// // // //                               decoration: BoxDecoration(
// // // //                                 color: Colors.redAccent,
// // // //                                 borderRadius: BorderRadius.circular(borderRadius.r),
// // // //                               ),
// // // //                               child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // // //                             ),
// // // //                             onDismissed: (_) {
// // // //                               setState(() {
// // // //                                 players.remove(player);
// // // //                                 nameControllers.removeAt(index);
// // // //                               });
// // // //                             },
// // // //                             child: Card(
// // // //                               margin: EdgeInsets.zero,
// // // //                               shape: RoundedRectangleBorder(
// // // //                                 borderRadius: BorderRadius.circular(borderRadius.r),
// // // //                               ),
// // // //                               clipBehavior: Clip.antiAlias,
// // // //                               elevation: 0,
// // // //                               child: Container(
// // // //                                 padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // // //                                 decoration: BoxDecoration(
// // // //                                   color: Color.lerp(Colors.white, player.color, 0.2),
// // // //                                   borderRadius: BorderRadius.circular(borderRadius.r),
// // // //                                 ),
// // // //                                 child: Row(
// // // //                                   children: [
// // // //                                     Container(
// // // //                                       width: 40.w,
// // // //                                       height: 40.w,
// // // //                                       alignment: Alignment.center,
// // // //                                       decoration: BoxDecoration(
// // // //                                         color: Colors.white,
// // // //                                         borderRadius: BorderRadius.circular(12.r),
// // // //                                       ),
// // // //                                       child: Text(
// // // //                                         '${index + 1}',
// // // //                                         style: TextStyle(
// // // //                                           fontSize: 18.sp,
// // // //                                           fontWeight: FontWeight.bold,
// // // //                                         ),
// // // //                                       ),
// // // //                                     ),
// // // //                                     SizedBox(width: 12.w),
// // // //                                     Expanded(
// // // //                                       child: Column(
// // // //                                         crossAxisAlignment: CrossAxisAlignment.start,
// // // //                                         children: [
// // // //                                           Container(
// // // //                                             decoration: BoxDecoration(
// // // //                                               color: Colors.white.withOpacity(0.6),
// // // //                                               borderRadius: BorderRadius.circular(8.r),
// // // //                                             ),
// // // //                                             padding: EdgeInsets.symmetric(
// // // //                                               horizontal: 8.w,
// // // //                                               vertical: 4.h,
// // // //                                             ),
// // // //                                             child: TextField(
// // // //                                               controller: nameControllers[index],
// // // //                                               onChanged: (val) => players[index].name = val,
// // // //                                               style: TextStyle(
// // // //                                                 fontSize: 16.sp,
// // // //                                                 fontWeight: FontWeight.w500,
// // // //                                               ),
// // // //                                               decoration: const InputDecoration.collapsed(
// // // //                                                 hintText: 'Enter name',
// // // //                                               ),
// // // //                                             ),
// // // //                                           ),
// // // //                                           SizedBox(height: 8.h),
// // // //                                           GestureDetector(
// // // //                                             onTap: () async {
// // // //                                               Duration selectedDuration = Duration(
// // // //                                                 seconds: players[index].originalSeconds,
// // // //                                               );
// // // //                                               await showModalBottomSheet(
// // // //                                                 context: context,
// // // //                                                 builder:
// // // //                                                     (context) => SizedBox(
// // // //                                                       height: 200,
// // // //                                                       child: CupertinoTimerPicker(
// // // //                                                         mode: CupertinoTimerPickerMode.hms,
// // // //                                                         initialTimerDuration: selectedDuration,
// // // //                                                         onTimerDurationChanged: (
// // // //                                                           Duration newDuration,
// // // //                                                         ) {
// // // //                                                           setState(() {
// // // //                                                             players[index].seconds =
// // // //                                                                 newDuration.inSeconds;
// // // //                                                             players[index].originalSeconds =
// // // //                                                                 newDuration.inSeconds;
// // // //                                                           });
// // // //                                                         },
// // // //                                                       ),
// // // //                                                     ),
// // // //                                               );
// // // //                                             },
// // // //                                             child: Container(
// // // //                                               decoration: BoxDecoration(
// // // //                                                 color: Colors.white.withOpacity(0.6),
// // // //                                                 borderRadius: BorderRadius.circular(8.r),
// // // //                                               ),
// // // //                                               padding: EdgeInsets.symmetric(
// // // //                                                 horizontal: 12.w,
// // // //                                                 vertical: 10.h,
// // // //                                               ),
// // // //                                               child: Text(
// // // //                                                 'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // // //                                                 style: TextStyle(
// // // //                                                   fontSize: 16.sp,
// // // //                                                   fontWeight: FontWeight.w500,
// // // //                                                 ),
// // // //                                               ),
// // // //                                             ),
// // // //                                           ),
// // // //                                         ],
// // // //                                       ),
// // // //                                     ),
// // // //                                     SizedBox(width: 8.w),
// // // //                                     ElevatedButton(
// // // //                                       onPressed: () async {
// // // //                                         FocusScope.of(context).unfocus();
// // // //                                         final color = await showDialog<Color>(
// // // //                                           context: context,
// // // //                                           builder:
// // // //                                               (context) => AlertDialog(
// // // //                                                 title: const Text('Select Color'),
// // // //                                                 content: Wrap(
// // // //                                                   spacing: 8.w,
// // // //                                                   children:
// // // //                                                       Colors.primaries.map((c) {
// // // //                                                         return GestureDetector(
// // // //                                                           onTap: () => Navigator.pop(context, c),
// // // //                                                           child: Container(
// // // //                                                             width: 30.w,
// // // //                                                             height: 30.w,
// // // //                                                             decoration: BoxDecoration(
// // // //                                                               color: c,
// // // //                                                               borderRadius: BorderRadius.circular(
// // // //                                                                 15.r,
// // // //                                                               ),
// // // //                                                             ),
// // // //                                                           ),
// // // //                                                         );
// // // //                                                       }).toList(),
// // // //                                                 ),
// // // //                                               ),
// // // //                                         );
// // // //                                         if (color != null) {
// // // //                                           setState(() => players[index].color = color);
// // // //                                         }
// // // //                                       },
// // // //                                       style: ElevatedButton.styleFrom(
// // // //                                         backgroundColor: player.color,
// // // //                                         foregroundColor: Colors.white,
// // // //                                         shape: RoundedRectangleBorder(
// // // //                                           borderRadius: BorderRadius.circular(12.r),
// // // //                                         ),
// // // //                                       ),
// // // //                                       child: const Text('Color'),
// // // //                                     ),
// // // //                                   ],
// // // //                                 ),
// // // //                               ),
// // // //                             ),
// // // //                           ),
// // // //                         ),
// // // //                       ),
// // // //                     );
// // // //                   },
// // // //                 ),
// // // //               ),
// // // //             ],
// // // //           ),
// // // //         ),
// // // //       ),
// // // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // // //       floatingActionButton: Padding(
// // // //         padding: EdgeInsets.only(bottom: 16.h),
// // // //         child: Row(
// // // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // // //           children: [
// // // //             FloatingActionButton.extended(
// // // //               heroTag: 'addPlayerBtn',
// // // //               onPressed: addPlayer,
// // // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // // //               backgroundColor: Colors.indigo,
// // // //             ),
// // // //             FloatingActionButton.extended(
// // // //               heroTag: 'startBtn',
// // // //               onPressed: () {
// // // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // // //                   Navigator.push(
// // // //                     context,
// // // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // // //                   );
// // // //                 } else {
// // // //                   ScaffoldMessenger.of(
// // // //                     context,
// // // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // // //                 }
// // // //               },
// // // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // // //               backgroundColor: Colors.teal,
// // // //             ),
// // // //           ],
// // // //         ),
// // // //       ),
// // // //     );
// // // //   }
// // // // }

// // // // class TimerScreen extends StatefulWidget {
// // // //   final List<Player> players;
// // // //   const TimerScreen({super.key, required this.players});

// // // //   @override
// // // //   State<TimerScreen> createState() => _TimerScreenState();
// // // // }

// // // // class _TimerScreenState extends State<TimerScreen> {
// // // //   Timer? _timer;
// // // //   int currentIndex = 0;

// // // //   @override
// // // //   void initState() {
// // // //     super.initState();
// // // //     startTimer();
// // // //   }

// // // //   void startTimer() {
// // // //     _timer?.cancel();
// // // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // // //       setState(() {
// // // //         final player = widget.players[currentIndex];
// // // //         if (player.seconds > 0) {
// // // //           player.seconds--;
// // // //           player.elapsedSeconds++;
// // // //         } else {
// // // //           player.isCompleted = true;
// // // //           switchToNextPlayer();
// // // //         }
// // // //       });
// // // //     });
// // // //   }

// // // //   void pauseTimer() {
// // // //     _timer?.cancel();
// // // //   }

// // // //   void switchToNextPlayer() {
// // // //     pauseTimer();
// // // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // // //       showSummaryDialog();
// // // //       return;
// // // //     }
// // // //     do {
// // // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // // //     } while (widget.players[currentIndex].isCompleted);
// // // //     startTimer();
// // // //   }

// // // //   void resetAll() {
// // // //     for (var p in widget.players) {
// // // //       p.seconds = p.originalSeconds;
// // // //       p.elapsedSeconds = 0;
// // // //       p.isCompleted = false;
// // // //     }
// // // //     setState(() {
// // // //       currentIndex = 0;
// // // //     });
// // // //     startTimer();
// // // //   }

// // // //   String formatDuration(int seconds) {
// // // //     final d = Duration(seconds: seconds);
// // // //     final hours = d.inHours.toString().padLeft(2, '0');
// // // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // // //     return '$hours:$minutes:$secs';
// // // //   }

// // // //   void showSummaryDialog() {
// // // //     _timer?.cancel();
// // // //     showDialog(
// // // //       context: context,
// // // //       builder:
// // // //           (_) => AlertDialog(
// // // //             title: const Text('Round Complete'),
// // // //             content: Column(
// // // //               mainAxisSize: MainAxisSize.min,
// // // //               children:
// // // //                   widget.players.map((p) {
// // // //                     final formatted = formatDuration(p.elapsedSeconds);
// // // //                     return Text('${p.name} ⏱ $formatted');
// // // //                   }).toList(),
// // // //             ),
// // // //             actions: [
// // // //               TextButton(
// // // //                 onPressed: () {
// // // //                   Navigator.of(context).pop();
// // // //                   resetAll();
// // // //                 },
// // // //                 child: const Text('Next Round'),
// // // //               ),
// // // //               TextButton(
// // // //                 onPressed: () {
// // // //                   resetAll();
// // // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // //                 },
// // // //                 child: const Text('Home'),
// // // //               ),
// // // //             ],
// // // //           ),
// // // //     );
// // // //   }

// // // //   @override
// // // //   void dispose() {
// // // //     _timer?.cancel();
// // // //     super.dispose();
// // // //   }

// // // //   @override
// // // //   Widget build(BuildContext context) {
// // // //     final player = widget.players[currentIndex];
// // // //     return Scaffold(
// // // //       backgroundColor: player.color,
// // // //       body: SafeArea(
// // // //         child: GestureDetector(
// // // //           behavior: HitTestBehavior.opaque,
// // // //           onTap: () {
// // // //             setState(() {
// // // //               pauseTimer();
// // // //               switchToNextPlayer();
// // // //             });
// // // //           },
// // // //           child: Stack(
// // // //             children: [
// // // //               Center(
// // // //                 child: Column(
// // // //                   mainAxisAlignment: MainAxisAlignment.center,
// // // //                   children: [
// // // //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // // //                     SizedBox(height: 16.h),
// // // //                     Text(
// // // //                       formatDuration(player.seconds),
// // // //                       style: TextStyle(
// // // //                         fontSize: 64.sp,
// // // //                         fontWeight: FontWeight.bold,
// // // //                         color: Colors.white,
// // // //                       ),
// // // //                     ),
// // // //                     SizedBox(height: 24.h),
// // // //                     ElevatedButton(
// // // //                       onPressed: () {
// // // //                         setState(() {
// // // //                           widget.players[currentIndex].isCompleted = true;
// // // //                           pauseTimer();
// // // //                           switchToNextPlayer();
// // // //                         });
// // // //                       },
// // // //                       child: const Text('Complete'),
// // // //                     ),
// // // //                     SizedBox(height: 12.h),
// // // //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // // //                   ],
// // // //                 ),
// // // //               ),
// // // //               Positioned(
// // // //                 top: 20.h,
// // // //                 right: 20.w,
// // // //                 child: IconButton(
// // // //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // // //                   onPressed: () {
// // // //                     pauseTimer();
// // // //                     showDialog(
// // // //                       context: context,
// // // //                       builder:
// // // //                           (context) => AlertDialog(
// // // //                             title: const Text('홈으로 이동'),
// // // //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // // //                             actions: [
// // // //                               TextButton(
// // // //                                 onPressed: () {
// // // //                                   Navigator.of(context).pop();
// // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // //                                 },
// // // //                                 child: const Text('설정 유지'),
// // // //                               ),
// // // //                               TextButton(
// // // //                                 onPressed: () {
// // // //                                   resetAll();
// // // //                                   Navigator.of(context).pop();
// // // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // // //                                 },
// // // //                                 child: const Text('초기화 후 이동'),
// // // //                               ),
// // // //                               TextButton(
// // // //                                 onPressed: () => Navigator.of(context).pop(),
// // // //                                 child: const Text('취소'),
// // // //                               ),
// // // //                             ],
// // // //                           ),
// // // //                     );
// // // //                   },
// // // //                 ),
// // // //               ),
// // // //             ],
// // // //           ),
// // // //         ),
// // // //       ),
// // // //     );
// // // //   }
// // // // }

// // // // 클러드 2

// // // import 'package:flutter/material.dart';
// // // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // // import 'package:flutter/cupertino.dart';
// // // import 'dart:async';
// // // import 'dart:convert';
// // // import 'package:shared_preferences/shared_preferences.dart';
// // // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // // void main() async {
// // //   WidgetsFlutterBinding.ensureInitialized();
// // //   final prefs = await SharedPreferences.getInstance();
// // //   final lastUsed = prefs.getString('last_used_preset');
// // //   runApp(MyApp(lastUsedPreset: lastUsed));
// // // }

// // // class MyApp extends StatelessWidget {
// // //   final String? lastUsedPreset;
// // //   const MyApp({super.key, this.lastUsedPreset});

// // //   @override
// // //   Widget build(BuildContext context) {
// // //     return ScreenUtilInit(
// // //       designSize: const Size(390, 844),
// // //       builder:
// // //           (context, child) => MaterialApp(
// // //             debugShowCheckedModeBanner: false,
// // //             title: 'Multi Player Timer',
// // //             theme: ThemeData(
// // //               scaffoldBackgroundColor: Colors.white,
// // //               fontFamily: 'Roboto',
// // //               textTheme: TextTheme(
// // //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// // //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// // //                 bodyLarge: TextStyle(fontSize: 16.sp),
// // //               ),
// // //               elevatedButtonTheme: ElevatedButtonThemeData(
// // //                 style: ElevatedButton.styleFrom(
// // //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// // //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// // //                 ),
// // //               ),
// // //             ),
// // //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// // //           ),
// // //     );
// // //   }
// // // }

// // // class Player {
// // //   String name;
// // //   int seconds;
// // //   int originalSeconds;
// // //   Color color;
// // //   bool isCompleted;
// // //   int elapsedSeconds = 0;

// // //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// // //     : originalSeconds = seconds;

// // //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// // //   static Player fromJson(Map<String, dynamic> json) =>
// // //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // // }

// // // class PlayerSetupScreen extends StatefulWidget {
// // //   final String? lastUsedPreset;
// // //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// // //   @override
// // //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // // }

// // // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// // //   final List<Player> players = [];
// // //   final List<TextEditingController> nameControllers = [];
// // //   String? currentPresetName;

// // //   @override
// // //   void initState() {
// // //     super.initState();
// // //     if (widget.lastUsedPreset != null) {
// // //       currentPresetName = widget.lastUsedPreset;
// // //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// // //     } else {
// // //       initializePlayers(2);
// // //     }
// // //   }

// // //   void initializePlayers(int count) {
// // //     players.clear();
// // //     nameControllers.clear();
// // //     for (int i = 0; i < count; i++) {
// // //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// // //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// // //     }
// // //     setState(() {});
// // //   }

// // //   void addPlayer() {
// // //     final newIndex = players.length;
// // //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// // //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// // //     setState(() {});
// // //   }

// // //   void removePlayer(int index) {
// // //     players.removeAt(index);
// // //     nameControllers.removeAt(index);
// // //     setState(() {});
// // //   }

// // //   Future<void> saveCurrentSettings(String presetName) async {
// // //     if (presetName.isEmpty) return;
// // //     final prefs = await SharedPreferences.getInstance();
// // //     final encoded = players.map((p) => p.toJson()).toList();
// // //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// // //     await prefs.setString('last_used_preset', presetName);
// // //     final names = prefs.getStringList('preset_names') ?? [];
// // //     if (!names.contains(presetName)) {
// // //       names.add(presetName);
// // //       await prefs.setStringList('preset_names', names);
// // //     }
// // //     setState(() {
// // //       currentPresetName = presetName;
// // //     });
// // //   }

// // //   Future<void> deletePreset(String presetName) async {
// // //     final prefs = await SharedPreferences.getInstance();
// // //     await prefs.remove('preset_$presetName');
// // //     final names = prefs.getStringList('preset_names') ?? [];
// // //     names.remove(presetName);
// // //     await prefs.setStringList('preset_names', names);
// // //     final lastUsed = prefs.getString('last_used_preset');
// // //     if (lastUsed == presetName) {
// // //       await prefs.remove('last_used_preset');
// // //       setState(() {
// // //         currentPresetName = null;
// // //       });
// // //     }
// // //   }

// // //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// // //     try {
// // //       final prefs = await SharedPreferences.getInstance();
// // //       final jsonString = prefs.getString('preset_$presetName');
// // //       if (jsonString == null) return;
// // //       final List decoded = jsonDecode(jsonString);
// // //       players.clear();
// // //       nameControllers.clear();
// // //       for (var p in decoded) {
// // //         final player = Player.fromJson(p);
// // //         players.add(player);
// // //         nameControllers.add(TextEditingController(text: player.name));
// // //       }
// // //       setState(() {
// // //         currentPresetName = presetName;
// // //       });
// // //       if (!autoLoad) {
// // //         await prefs.setString('last_used_preset', presetName);
// // //       }
// // //     } catch (_) {
// // //       ScaffoldMessenger.of(
// // //         context,
// // //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// // //     }
// // //   }

// // //   void showSaveDialog() async {
// // //     final controller = TextEditingController();
// // //     await showDialog(
// // //       context: context,
// // //       builder:
// // //           (ctx) => AlertDialog(
// // //             title: const Text("설정 이름 저장"),
// // //             content: TextField(
// // //               controller: controller,
// // //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// // //             ),
// // //             actions: [
// // //               TextButton(
// // //                 onPressed: () async {
// // //                   await saveCurrentSettings(controller.text.trim());
// // //                   Navigator.of(ctx).pop();
// // //                 },
// // //                 child: const Text("저장"),
// // //               ),
// // //             ],
// // //           ),
// // //     );
// // //   }

// // //   void showLoadDialog() async {
// // //     final prefs = await SharedPreferences.getInstance();
// // //     final presetNames = prefs.getStringList('preset_names') ?? [];
// // //     if (presetNames.isEmpty) {
// // //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// // //       return;
// // //     }
// // //     await showDialog(
// // //       context: context,
// // //       builder:
// // //           (ctx) => AlertDialog(
// // //             title: const Text("불러올 설정 선택"),
// // //             content: SingleChildScrollView(
// // //               child: Column(
// // //                 mainAxisSize: MainAxisSize.min,
// // //                 children:
// // //                     presetNames.map((name) {
// // //                       return ListTile(
// // //                         title: Text(name),
// // //                         trailing: IconButton(
// // //                           icon: const Icon(Icons.delete, color: Colors.red),
// // //                           onPressed: () async {
// // //                             Navigator.of(ctx).pop();
// // //                             await deletePreset(name);
// // //                           },
// // //                         ),
// // //                         onTap: () async {
// // //                           Navigator.of(ctx).pop();
// // //                           await loadPreset(name);
// // //                         },
// // //                       );
// // //                     }).toList(),
// // //               ),
// // //             ),
// // //           ),
// // //     );
// // //   }

// // //   void clearAllSettings() async {
// // //     initializePlayers(2);
// // //     final prefs = await SharedPreferences.getInstance();
// // //     await prefs.remove('last_used_preset');
// // //     setState(() {
// // //       currentPresetName = null;
// // //     });
// // //   }

// // //   @override
// // //   Widget build(BuildContext context) {
// // //     return Scaffold(
// // //       body: SafeArea(
// // //         child: Padding(
// // //           padding: EdgeInsets.all(24.w),
// // //           child: Column(
// // //             crossAxisAlignment: CrossAxisAlignment.start,
// // //             children: [
// // //               SizedBox(height: 40.h),
// // //               Text(
// // //                 'TimeSquad',
// // //                 style: TextStyle(
// // //                   fontSize: 36.sp,
// // //                   fontWeight: FontWeight.w800,
// // //                   letterSpacing: 1.2,
// // //                   color: Colors.black87,
// // //                 ),
// // //               ),
// // //               SizedBox(height: 4.h),
// // //               Row(
// // //                 children: [
// // //                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// // //                   const Spacer(),
// // //                   Row(
// // //                     mainAxisSize: MainAxisSize.min,
// // //                     children: [
// // //                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
// // //                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// // //                       IconButton(
// // //                         icon: const Icon(FeatherIcons.rotateCcw),
// // //                         onPressed: clearAllSettings,
// // //                       ),
// // //                     ],
// // //                   ),
// // //                 ],
// // //               ),
// // //               SizedBox(height: 24.h),
// // //               Expanded(
// // //                 child: ReorderableListView.builder(
// // //                   padding: EdgeInsets.only(bottom: 120.h),
// // //                   buildDefaultDragHandles: false,
// // //                   proxyDecorator: (child, index, animation) {
// // //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// // //                     return ScaleTransition(
// // //                       scale: scale,
// // //                       child: Material(
// // //                         elevation: 0,
// // //                         shadowColor: Colors.transparent,
// // //                         color: Colors.transparent,
// // //                         child: child,
// // //                       ),
// // //                     );
// // //                   },
// // //                   itemCount: players.length,
// // //                   onReorder: (oldIndex, newIndex) {
// // //                     setState(() {
// // //                       if (newIndex > oldIndex) newIndex--;
// // //                       final player = players.removeAt(oldIndex);
// // //                       final controller = nameControllers.removeAt(oldIndex);
// // //                       players.insert(newIndex, player);
// // //                       nameControllers.insert(newIndex, controller);
// // //                     });
// // //                   },
// // //                   itemBuilder: (context, index) {
// // //                     final player = players[index];
// // //                     const double borderRadius = 20.0;

// // //                     return ReorderableDelayedDragStartListener(
// // //                       key: ValueKey(player),
// // //                       index: index,
// // //                       child: Padding(
// // //                         padding: EdgeInsets.only(bottom: 12.h),
// // //                         child: Dismissible(
// // //                           key: ValueKey(player),
// // //                           direction: DismissDirection.horizontal,
// // //                           background: Container(
// // //                             alignment: Alignment.centerLeft,
// // //                             padding: EdgeInsets.only(left: 20.w),
// // //                             decoration: BoxDecoration(
// // //                               color: Colors.redAccent,
// // //                               borderRadius: BorderRadius.circular(borderRadius.r),
// // //                             ),
// // //                             child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // //                           ),
// // //                           secondaryBackground: Container(
// // //                             alignment: Alignment.centerRight,
// // //                             padding: EdgeInsets.only(right: 20.w),
// // //                             decoration: BoxDecoration(
// // //                               color: Colors.redAccent,
// // //                               borderRadius: BorderRadius.circular(borderRadius.r),
// // //                             ),
// // //                             child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// // //                           ),
// // //                           onDismissed: (_) {
// // //                             setState(() {
// // //                               players.remove(player);
// // //                               nameControllers.removeAt(index);
// // //                             });
// // //                           },
// // //                           child: Container(
// // //                             decoration: BoxDecoration(
// // //                               color: Color.lerp(Colors.white, player.color, 0.2),
// // //                               borderRadius: BorderRadius.circular(borderRadius.r),
// // //                               boxShadow: [
// // //                                 BoxShadow(
// // //                                   color: Colors.black.withOpacity(0.05),
// // //                                   blurRadius: 4,
// // //                                   offset: const Offset(0, 2),
// // //                                 ),
// // //                               ],
// // //                             ),
// // //                             padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// // //                             child: Row(
// // //                               children: [
// // //                                 Container(
// // //                                   width: 40.w,
// // //                                   height: 40.w,
// // //                                   alignment: Alignment.center,
// // //                                   decoration: BoxDecoration(
// // //                                     color: Colors.white,
// // //                                     borderRadius: BorderRadius.circular(12.r),
// // //                                   ),
// // //                                   child: Text(
// // //                                     '${index + 1}',
// // //                                     style: TextStyle(fontSize: 18.sp, fontWeight: FontWeight.bold),
// // //                                   ),
// // //                                 ),
// // //                                 SizedBox(width: 12.w),
// // //                                 Expanded(
// // //                                   child: Column(
// // //                                     crossAxisAlignment: CrossAxisAlignment.start,
// // //                                     children: [
// // //                                       Container(
// // //                                         decoration: BoxDecoration(
// // //                                           color: Colors.white.withOpacity(0.6),
// // //                                           borderRadius: BorderRadius.circular(8.r),
// // //                                         ),
// // //                                         padding: EdgeInsets.symmetric(
// // //                                           horizontal: 8.w,
// // //                                           vertical: 4.h,
// // //                                         ),
// // //                                         child: TextField(
// // //                                           controller: nameControllers[index],
// // //                                           onChanged: (val) => players[index].name = val,
// // //                                           style: TextStyle(
// // //                                             fontSize: 16.sp,
// // //                                             fontWeight: FontWeight.w500,
// // //                                           ),
// // //                                           decoration: const InputDecoration.collapsed(
// // //                                             hintText: 'Enter name',
// // //                                           ),
// // //                                         ),
// // //                                       ),
// // //                                       SizedBox(height: 8.h),
// // //                                       GestureDetector(
// // //                                         onTap: () async {
// // //                                           Duration selectedDuration = Duration(
// // //                                             seconds: players[index].originalSeconds,
// // //                                           );
// // //                                           await showModalBottomSheet(
// // //                                             context: context,
// // //                                             builder:
// // //                                                 (context) => SizedBox(
// // //                                                   height: 200,
// // //                                                   child: CupertinoTimerPicker(
// // //                                                     mode: CupertinoTimerPickerMode.hms,
// // //                                                     initialTimerDuration: selectedDuration,
// // //                                                     onTimerDurationChanged: (Duration newDuration) {
// // //                                                       setState(() {
// // //                                                         players[index].seconds =
// // //                                                             newDuration.inSeconds;
// // //                                                         players[index].originalSeconds =
// // //                                                             newDuration.inSeconds;
// // //                                                       });
// // //                                                     },
// // //                                                   ),
// // //                                                 ),
// // //                                           );
// // //                                         },
// // //                                         child: Container(
// // //                                           decoration: BoxDecoration(
// // //                                             color: Colors.white.withOpacity(0.6),
// // //                                             borderRadius: BorderRadius.circular(8.r),
// // //                                           ),
// // //                                           padding: EdgeInsets.symmetric(
// // //                                             horizontal: 12.w,
// // //                                             vertical: 10.h,
// // //                                           ),
// // //                                           child: Text(
// // //                                             'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// // //                                             style: TextStyle(
// // //                                               fontSize: 16.sp,
// // //                                               fontWeight: FontWeight.w500,
// // //                                             ),
// // //                                           ),
// // //                                         ),
// // //                                       ),
// // //                                     ],
// // //                                   ),
// // //                                 ),
// // //                                 SizedBox(width: 8.w),
// // //                                 ElevatedButton(
// // //                                   onPressed: () async {
// // //                                     FocusScope.of(context).unfocus();
// // //                                     final color = await showDialog<Color>(
// // //                                       context: context,
// // //                                       builder:
// // //                                           (context) => AlertDialog(
// // //                                             title: const Text('Select Color'),
// // //                                             content: Wrap(
// // //                                               spacing: 8.w,
// // //                                               children:
// // //                                                   Colors.primaries.map((c) {
// // //                                                     return GestureDetector(
// // //                                                       onTap: () => Navigator.pop(context, c),
// // //                                                       child: Container(
// // //                                                         width: 30.w,
// // //                                                         height: 30.w,
// // //                                                         decoration: BoxDecoration(
// // //                                                           color: c,
// // //                                                           borderRadius: BorderRadius.circular(15.r),
// // //                                                         ),
// // //                                                       ),
// // //                                                     );
// // //                                                   }).toList(),
// // //                                             ),
// // //                                           ),
// // //                                     );
// // //                                     if (color != null) {
// // //                                       setState(() => players[index].color = color);
// // //                                     }
// // //                                   },
// // //                                   style: ElevatedButton.styleFrom(
// // //                                     backgroundColor: player.color,
// // //                                     foregroundColor: Colors.white,
// // //                                     shape: RoundedRectangleBorder(
// // //                                       borderRadius: BorderRadius.circular(12.r),
// // //                                     ),
// // //                                   ),
// // //                                   child: const Text('Color'),
// // //                                 ),
// // //                               ],
// // //                             ),
// // //                           ),
// // //                         ),
// // //                       ),
// // //                     );
// // //                   },
// // //                 ),
// // //               ),
// // //             ],
// // //           ),
// // //         ),
// // //       ),
// // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// // //       floatingActionButton: Padding(
// // //         padding: EdgeInsets.only(bottom: 16.h),
// // //         child: Row(
// // //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// // //           children: [
// // //             FloatingActionButton.extended(
// // //               heroTag: 'addPlayerBtn',
// // //               onPressed: addPlayer,
// // //               icon: const Icon(Icons.person_add, color: Colors.white),
// // //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// // //               backgroundColor: Colors.indigo,
// // //             ),
// // //             FloatingActionButton.extended(
// // //               heroTag: 'startBtn',
// // //               onPressed: () {
// // //                 if (players.every((p) => p.name.isNotEmpty)) {
// // //                   Navigator.push(
// // //                     context,
// // //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// // //                   );
// // //                 } else {
// // //                   ScaffoldMessenger.of(
// // //                     context,
// // //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// // //                 }
// // //               },
// // //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// // //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// // //               backgroundColor: Colors.teal,
// // //             ),
// // //           ],
// // //         ),
// // //       ),
// // //     );
// // //   }
// // // }

// // // class TimerScreen extends StatefulWidget {
// // //   final List<Player> players;
// // //   const TimerScreen({super.key, required this.players});

// // //   @override
// // //   State<TimerScreen> createState() => _TimerScreenState();
// // // }

// // // class _TimerScreenState extends State<TimerScreen> {
// // //   Timer? _timer;
// // //   int currentIndex = 0;

// // //   @override
// // //   void initState() {
// // //     super.initState();
// // //     startTimer();
// // //   }

// // //   void startTimer() {
// // //     _timer?.cancel();
// // //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// // //       setState(() {
// // //         final player = widget.players[currentIndex];
// // //         if (player.seconds > 0) {
// // //           player.seconds--;
// // //           player.elapsedSeconds++;
// // //         } else {
// // //           player.isCompleted = true;
// // //           switchToNextPlayer();
// // //         }
// // //       });
// // //     });
// // //   }

// // //   void pauseTimer() {
// // //     _timer?.cancel();
// // //   }

// // //   void switchToNextPlayer() {
// // //     pauseTimer();
// // //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// // //       showSummaryDialog();
// // //       return;
// // //     }
// // //     do {
// // //       currentIndex = (currentIndex + 1) % widget.players.length;
// // //     } while (widget.players[currentIndex].isCompleted);
// // //     startTimer();
// // //   }

// // //   void resetAll() {
// // //     for (var p in widget.players) {
// // //       p.seconds = p.originalSeconds;
// // //       p.elapsedSeconds = 0;
// // //       p.isCompleted = false;
// // //     }
// // //     setState(() {
// // //       currentIndex = 0;
// // //     });
// // //     startTimer();
// // //   }

// // //   String formatDuration(int seconds) {
// // //     final d = Duration(seconds: seconds);
// // //     final hours = d.inHours.toString().padLeft(2, '0');
// // //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// // //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// // //     return '$hours:$minutes:$secs';
// // //   }

// // //   void showSummaryDialog() {
// // //     _timer?.cancel();
// // //     showDialog(
// // //       context: context,
// // //       builder:
// // //           (_) => AlertDialog(
// // //             title: const Text('Round Complete'),
// // //             content: Column(
// // //               mainAxisSize: MainAxisSize.min,
// // //               children:
// // //                   widget.players.map((p) {
// // //                     final formatted = formatDuration(p.elapsedSeconds);
// // //                     return Text('${p.name} ⏱ $formatted');
// // //                   }).toList(),
// // //             ),
// // //             actions: [
// // //               TextButton(
// // //                 onPressed: () {
// // //                   Navigator.of(context).pop();
// // //                   resetAll();
// // //                 },
// // //                 child: const Text('Next Round'),
// // //               ),
// // //               TextButton(
// // //                 onPressed: () {
// // //                   resetAll();
// // //                   Navigator.of(context).popUntil((r) => r.isFirst);
// // //                 },
// // //                 child: const Text('Home'),
// // //               ),
// // //             ],
// // //           ),
// // //     );
// // //   }

// // //   @override
// // //   void dispose() {
// // //     _timer?.cancel();
// // //     super.dispose();
// // //   }

// // //   @override
// // //   Widget build(BuildContext context) {
// // //     final player = widget.players[currentIndex];
// // //     return Scaffold(
// // //       backgroundColor: player.color,
// // //       body: SafeArea(
// // //         child: GestureDetector(
// // //           behavior: HitTestBehavior.opaque,
// // //           onTap: () {
// // //             setState(() {
// // //               pauseTimer();
// // //               switchToNextPlayer();
// // //             });
// // //           },
// // //           child: Stack(
// // //             children: [
// // //               Center(
// // //                 child: Column(
// // //                   mainAxisAlignment: MainAxisAlignment.center,
// // //                   children: [
// // //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// // //                     SizedBox(height: 16.h),
// // //                     Text(
// // //                       formatDuration(player.seconds),
// // //                       style: TextStyle(
// // //                         fontSize: 64.sp,
// // //                         fontWeight: FontWeight.bold,
// // //                         color: Colors.white,
// // //                       ),
// // //                     ),
// // //                     SizedBox(height: 24.h),
// // //                     ElevatedButton(
// // //                       onPressed: () {
// // //                         setState(() {
// // //                           widget.players[currentIndex].isCompleted = true;
// // //                           pauseTimer();
// // //                           switchToNextPlayer();
// // //                         });
// // //                       },
// // //                       child: const Text('Complete'),
// // //                     ),
// // //                     SizedBox(height: 12.h),
// // //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// // //                   ],
// // //                 ),
// // //               ),
// // //               Positioned(
// // //                 top: 20.h,
// // //                 right: 20.w,
// // //                 child: IconButton(
// // //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// // //                   onPressed: () {
// // //                     pauseTimer();
// // //                     showDialog(
// // //                       context: context,
// // //                       builder:
// // //                           (context) => AlertDialog(
// // //                             title: const Text('홈으로 이동'),
// // //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// // //                             actions: [
// // //                               TextButton(
// // //                                 onPressed: () {
// // //                                   Navigator.of(context).pop();
// // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // //                                 },
// // //                                 child: const Text('설정 유지'),
// // //                               ),
// // //                               TextButton(
// // //                                 onPressed: () {
// // //                                   resetAll();
// // //                                   Navigator.of(context).pop();
// // //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// // //                                 },
// // //                                 child: const Text('초기화 후 이동'),
// // //                               ),
// // //                               TextButton(
// // //                                 onPressed: () => Navigator.of(context).pop(),
// // //                                 child: const Text('취소'),
// // //                               ),
// // //                             ],
// // //                           ),
// // //                     );
// // //                   },
// // //                 ),
// // //               ),
// // //             ],
// // //           ),
// // //         ),
// // //       ),
// // //     );
// // //   }
// // // }

// // import 'package:flutter/material.dart';
// // import 'package:flutter_screenutil/flutter_screenutil.dart';
// // import 'package:flutter/cupertino.dart';
// // import 'dart:async';
// // import 'dart:convert';
// // import 'package:shared_preferences/shared_preferences.dart';
// // import 'package:flutter_feather_icons/flutter_feather_icons.dart';

// // void main() async {
// //   WidgetsFlutterBinding.ensureInitialized();
// //   final prefs = await SharedPreferences.getInstance();
// //   final lastUsed = prefs.getString('last_used_preset');
// //   runApp(MyApp(lastUsedPreset: lastUsed));
// // }

// // class MyApp extends StatelessWidget {
// //   final String? lastUsedPreset;
// //   const MyApp({super.key, this.lastUsedPreset});

// //   @override
// //   Widget build(BuildContext context) {
// //     return ScreenUtilInit(
// //       designSize: const Size(390, 844),
// //       builder:
// //           (context, child) => MaterialApp(
// //             debugShowCheckedModeBanner: false,
// //             title: 'Multi Player Timer',
// //             theme: ThemeData(
// //               scaffoldBackgroundColor: Colors.white,
// //               fontFamily: 'Roboto',
// //               textTheme: TextTheme(
// //                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
// //                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
// //                 bodyLarge: TextStyle(fontSize: 16.sp),
// //               ),
// //               elevatedButtonTheme: ElevatedButtonThemeData(
// //                 style: ElevatedButton.styleFrom(
// //                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
// //                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
// //                 ),
// //               ),
// //             ),
// //             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
// //           ),
// //     );
// //   }
// // }

// // class Player {
// //   String name;
// //   int seconds;
// //   int originalSeconds;
// //   Color color;
// //   bool isCompleted;
// //   int elapsedSeconds = 0;

// //   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
// //     : originalSeconds = seconds;

// //   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

// //   static Player fromJson(Map<String, dynamic> json) =>
// //       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// // }

// // class PlayerSetupScreen extends StatefulWidget {
// //   final String? lastUsedPreset;
// //   const PlayerSetupScreen({super.key, this.lastUsedPreset});

// //   @override
// //   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// // }

// // class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
// //   final List<Player> players = [];
// //   final List<TextEditingController> nameControllers = [];
// //   String? currentPresetName;

// //   @override
// //   void initState() {
// //     super.initState();
// //     if (widget.lastUsedPreset != null) {
// //       currentPresetName = widget.lastUsedPreset;
// //       loadPreset(widget.lastUsedPreset!, autoLoad: true);
// //     } else {
// //       initializePlayers(2);
// //     }
// //   }

// //   void initializePlayers(int count) {
// //     players.clear();
// //     nameControllers.clear();
// //     for (int i = 0; i < count; i++) {
// //       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
// //       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
// //     }
// //     setState(() {});
// //   }

// //   void addPlayer() {
// //     final newIndex = players.length;
// //     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
// //     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
// //     setState(() {});
// //   }

// //   void removePlayer(int index) {
// //     players.removeAt(index);
// //     nameControllers.removeAt(index);
// //     setState(() {});
// //   }

// //   Future<void> saveCurrentSettings(String presetName) async {
// //     if (presetName.isEmpty) return;
// //     final prefs = await SharedPreferences.getInstance();
// //     final encoded = players.map((p) => p.toJson()).toList();
// //     await prefs.setString('preset_$presetName', jsonEncode(encoded));
// //     await prefs.setString('last_used_preset', presetName);
// //     final names = prefs.getStringList('preset_names') ?? [];
// //     if (!names.contains(presetName)) {
// //       names.add(presetName);
// //       await prefs.setStringList('preset_names', names);
// //     }
// //     setState(() {
// //       currentPresetName = presetName;
// //     });
// //   }

// //   Future<void> deletePreset(String presetName) async {
// //     final prefs = await SharedPreferences.getInstance();
// //     await prefs.remove('preset_$presetName');
// //     final names = prefs.getStringList('preset_names') ?? [];
// //     names.remove(presetName);
// //     await prefs.setStringList('preset_names', names);
// //     final lastUsed = prefs.getString('last_used_preset');
// //     if (lastUsed == presetName) {
// //       await prefs.remove('last_used_preset');
// //       setState(() {
// //         currentPresetName = null;
// //       });
// //     }
// //   }

// //   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
// //     try {
// //       final prefs = await SharedPreferences.getInstance();
// //       final jsonString = prefs.getString('preset_$presetName');
// //       if (jsonString == null) return;
// //       final List decoded = jsonDecode(jsonString);
// //       players.clear();
// //       nameControllers.clear();
// //       for (var p in decoded) {
// //         final player = Player.fromJson(p);
// //         players.add(player);
// //         nameControllers.add(TextEditingController(text: player.name));
// //       }
// //       setState(() {
// //         currentPresetName = presetName;
// //       });
// //       if (!autoLoad) {
// //         await prefs.setString('last_used_preset', presetName);
// //       }
// //     } catch (_) {
// //       ScaffoldMessenger.of(
// //         context,
// //       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
// //     }
// //   }

// //   void showSaveDialog() async {
// //     final controller = TextEditingController();
// //     await showDialog(
// //       context: context,
// //       builder:
// //           (ctx) => AlertDialog(
// //             title: const Text("설정 이름 저장"),
// //             content: TextField(
// //               controller: controller,
// //               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
// //             ),
// //             actions: [
// //               TextButton(
// //                 onPressed: () async {
// //                   await saveCurrentSettings(controller.text.trim());
// //                   Navigator.of(ctx).pop();
// //                 },
// //                 child: const Text("저장"),
// //               ),
// //             ],
// //           ),
// //     );
// //   }

// //   void showLoadDialog() async {
// //     final prefs = await SharedPreferences.getInstance();
// //     final presetNames = prefs.getStringList('preset_names') ?? [];
// //     if (presetNames.isEmpty) {
// //       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
// //       return;
// //     }
// //     await showDialog(
// //       context: context,
// //       builder:
// //           (ctx) => AlertDialog(
// //             title: const Text("불러올 설정 선택"),
// //             content: SingleChildScrollView(
// //               child: Column(
// //                 mainAxisSize: MainAxisSize.min,
// //                 children:
// //                     presetNames.map((name) {
// //                       return ListTile(
// //                         title: Text(name),
// //                         trailing: IconButton(
// //                           icon: const Icon(Icons.delete, color: Colors.red),
// //                           onPressed: () async {
// //                             Navigator.of(ctx).pop();
// //                             await deletePreset(name);
// //                           },
// //                         ),
// //                         onTap: () async {
// //                           Navigator.of(ctx).pop();
// //                           await loadPreset(name);
// //                         },
// //                       );
// //                     }).toList(),
// //               ),
// //             ),
// //           ),
// //     );
// //   }

// //   void clearAllSettings() async {
// //     initializePlayers(2);
// //     final prefs = await SharedPreferences.getInstance();
// //     await prefs.remove('last_used_preset');
// //     setState(() {
// //       currentPresetName = null;
// //     });
// //   }

// //   @override
// //   Widget build(BuildContext context) {
// //     return Scaffold(
// //       body: SafeArea(
// //         child: Padding(
// //           padding: EdgeInsets.all(24.w),
// //           child: Column(
// //             crossAxisAlignment: CrossAxisAlignment.start,
// //             children: [
// //               SizedBox(height: 40.h),
// //               Text(
// //                 'TimeSquad',
// //                 style: TextStyle(
// //                   fontSize: 36.sp,
// //                   fontWeight: FontWeight.w800,
// //                   letterSpacing: 1.2,
// //                   color: Colors.black87,
// //                 ),
// //               ),
// //               SizedBox(height: 4.h),
// //               Row(
// //                 children: [
// //                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
// //                   const Spacer(),
// //                   Row(
// //                     mainAxisSize: MainAxisSize.min,
// //                     children: [
// //                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
// //                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
// //                       IconButton(
// //                         icon: const Icon(FeatherIcons.rotateCcw),
// //                         onPressed: clearAllSettings,
// //                       ),
// //                     ],
// //                   ),
// //                 ],
// //               ),
// //               SizedBox(height: 24.h),
// //               Expanded(
// //                 child: ReorderableListView.builder(
// //                   padding: EdgeInsets.only(bottom: 120.h),
// //                   buildDefaultDragHandles: false,
// //                   proxyDecorator: (child, index, animation) {
// //                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
// //                     return ScaleTransition(
// //                       scale: scale,
// //                       child: Material(
// //                         elevation: 0,
// //                         shadowColor: Colors.transparent,
// //                         color: Colors.transparent,
// //                         child: child,
// //                       ),
// //                     );
// //                   },
// //                   itemCount: players.length,
// //                   onReorder: (oldIndex, newIndex) {
// //                     setState(() {
// //                       if (newIndex > oldIndex) newIndex--;
// //                       final player = players.removeAt(oldIndex);
// //                       final controller = nameControllers.removeAt(oldIndex);
// //                       players.insert(newIndex, player);
// //                       nameControllers.insert(newIndex, controller);
// //                     });
// //                   },
// //                   itemBuilder: (context, index) {
// //                     final player = players[index];
// //                     const double borderRadius = 20.0;

// //                     return ReorderableDelayedDragStartListener(
// //                       key: ValueKey(player),
// //                       index: index,
// //                       child: Padding(
// //                         padding: EdgeInsets.only(bottom: 12.h),
// //                         child: Container(
// //                           // Card 대신 Container 사용
// //                           margin: EdgeInsets.zero,
// //                           decoration: BoxDecoration(
// //                             // 여기에 바로 둥근 모서리 적용
// //                             color: Color.lerp(Colors.white, player.color, 0.2), // Card의 기본 색상처럼 설정
// //                             borderRadius: BorderRadius.circular(borderRadius.r),
// //                           ),
// //                           clipBehavior: Clip.antiAlias, // Container에도 clipBehavior 적용
// //                           child: ClipRRect(
// //                             // <--- Apply ClipRRect here, around the entire Dismissible
// //                             borderRadius: BorderRadius.circular(
// //                               borderRadius.r,
// //                             ), // Match the container's radius
// //                             child: Dismissible(
// //                               key: ValueKey(player),
// //                               direction: DismissDirection.horizontal,
// //                               background: Container(
// //                                 alignment: Alignment.centerLeft,
// //                                 padding: EdgeInsets.only(left: 20.w),
// //                                 decoration: BoxDecoration(
// //                                   color: Colors.redAccent,
// //                                   borderRadius: BorderRadius.only(
// //                                     topLeft: Radius.circular(borderRadius.r),
// //                                     bottomLeft: Radius.circular(borderRadius.r),
// //                                   ),
// //                                 ),
// //                                 child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// //                               ),
// //                               secondaryBackground: Container(
// //                                 alignment: Alignment.centerRight,
// //                                 padding: EdgeInsets.only(right: 20.w),
// //                                 decoration: BoxDecoration(
// //                                   color: Colors.redAccent,
// //                                   borderRadius: BorderRadius.only(
// //                                     topRight: Radius.circular(borderRadius.r),
// //                                     bottomRight: Radius.circular(borderRadius.r),
// //                                   ),
// //                                 ),
// //                                 child: Icon(Icons.delete, color: Colors.white, size: 30.sp),
// //                               ),
// //                               onDismissed: (_) {
// //                                 setState(() {
// //                                   players.remove(player);
// //                                   nameControllers.removeAt(index);
// //                                 });
// //                               },
// //                               child: Container(
// //                                 // 이 부분이 실제 표시될 플레이어 카드 내용
// //                                 padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
// //                                 // 이 Container의 decoration은 이제 불필요합니다.
// //                                 // 색상은 바깥쪽 Container (이전 Card 역할)에서 이미 설정했습니다.
// //                                 // decoration: BoxDecoration(
// //                                 //   color: Color.lerp(Colors.white, player.color, 0.2),
// //                                 // ),
// //                                 child: Row(
// //                                   children: [
// //                                     Container(
// //                                       width: 40.w,
// //                                       height: 40.w,
// //                                       alignment: Alignment.center,
// //                                       decoration: BoxDecoration(
// //                                         color: Colors.white,
// //                                         borderRadius: BorderRadius.circular(12.r),
// //                                       ),
// //                                       child: Text(
// //                                         '${index + 1}',
// //                                         style: TextStyle(
// //                                           fontSize: 18.sp,
// //                                           fontWeight: FontWeight.bold,
// //                                         ),
// //                                       ),
// //                                     ),
// //                                     SizedBox(width: 12.w),
// //                                     Expanded(
// //                                       child: Column(
// //                                         crossAxisAlignment: CrossAxisAlignment.start,
// //                                         children: [
// //                                           Container(
// //                                             decoration: BoxDecoration(
// //                                               color: Colors.white.withOpacity(0.6),
// //                                               borderRadius: BorderRadius.circular(8.r),
// //                                             ),
// //                                             padding: EdgeInsets.symmetric(
// //                                               horizontal: 8.w,
// //                                               vertical: 4.h,
// //                                             ),
// //                                             child: TextField(
// //                                               controller: nameControllers[index],
// //                                               onChanged: (val) => players[index].name = val,
// //                                               style: TextStyle(
// //                                                 fontSize: 16.sp,
// //                                                 fontWeight: FontWeight.w500,
// //                                               ),
// //                                               decoration: const InputDecoration.collapsed(
// //                                                 hintText: 'Enter name',
// //                                               ),
// //                                             ),
// //                                           ),
// //                                           SizedBox(height: 8.h),
// //                                           GestureDetector(
// //                                             onTap: () async {
// //                                               Duration selectedDuration = Duration(
// //                                                 seconds: players[index].originalSeconds,
// //                                               );
// //                                               await showModalBottomSheet(
// //                                                 context: context,
// //                                                 builder:
// //                                                     (context) => SizedBox(
// //                                                       height: 200,
// //                                                       child: CupertinoTimerPicker(
// //                                                         mode: CupertinoTimerPickerMode.hms,
// //                                                         initialTimerDuration: selectedDuration,
// //                                                         onTimerDurationChanged: (
// //                                                           Duration newDuration,
// //                                                         ) {
// //                                                           setState(() {
// //                                                             players[index].seconds =
// //                                                                 newDuration.inSeconds;
// //                                                             players[index].originalSeconds =
// //                                                                 newDuration.inSeconds;
// //                                                           });
// //                                                         },
// //                                                       ),
// //                                                     ),
// //                                               );
// //                                             },
// //                                             child: Container(
// //                                               decoration: BoxDecoration(
// //                                                 color: Colors.white.withOpacity(0.6),
// //                                                 borderRadius: BorderRadius.circular(8.r),
// //                                               ),
// //                                               padding: EdgeInsets.symmetric(
// //                                                 horizontal: 12.w,
// //                                                 vertical: 10.h,
// //                                               ),
// //                                               child: Text(
// //                                                 'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
// //                                                 style: TextStyle(
// //                                                   fontSize: 16.sp,
// //                                                   fontWeight: FontWeight.w500,
// //                                                 ),
// //                                               ),
// //                                             ),
// //                                           ),
// //                                         ],
// //                                       ),
// //                                     ),
// //                                     SizedBox(width: 8.w),
// //                                     ElevatedButton(
// //                                       onPressed: () async {
// //                                         FocusScope.of(context).unfocus();
// //                                         final color = await showDialog<Color>(
// //                                           context: context,
// //                                           builder:
// //                                               (context) => AlertDialog(
// //                                                 title: const Text('Select Color'),
// //                                                 content: Wrap(
// //                                                   spacing: 8.w,
// //                                                   children:
// //                                                       Colors.primaries.map((c) {
// //                                                         return GestureDetector(
// //                                                           onTap: () => Navigator.pop(context, c),
// //                                                           child: Container(
// //                                                             width: 30.w,
// //                                                             height: 30.w,
// //                                                             decoration: BoxDecoration(
// //                                                               color: c,
// //                                                               borderRadius: BorderRadius.circular(
// //                                                                 15.r,
// //                                                               ),
// //                                                             ),
// //                                                           ),
// //                                                         );
// //                                                       }).toList(),
// //                                                 ),
// //                                               ),
// //                                         );
// //                                         if (color != null) {
// //                                           setState(() => players[index].color = color);
// //                                         }
// //                                       },
// //                                       style: ElevatedButton.styleFrom(
// //                                         backgroundColor: player.color,
// //                                         foregroundColor: Colors.white,
// //                                         shape: RoundedRectangleBorder(
// //                                           borderRadius: BorderRadius.circular(12.r),
// //                                         ),
// //                                       ),
// //                                       child: const Text('Color'),
// //                                     ),
// //                                   ],
// //                                 ),
// //                               ),
// //                             ),
// //                           ),
// //                         ),
// //                       ),
// //                     );
// //                   },
// //                 ),
// //               ),
// //             ],
// //           ),
// //         ),
// //       ),
// //       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
// //       floatingActionButton: Padding(
// //         padding: EdgeInsets.only(bottom: 16.h),
// //         child: Row(
// //           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
// //           children: [
// //             FloatingActionButton.extended(
// //               heroTag: 'addPlayerBtn',
// //               onPressed: addPlayer,
// //               icon: const Icon(Icons.person_add, color: Colors.white),
// //               label: const Text('추가', style: TextStyle(color: Colors.white)),
// //               backgroundColor: Colors.indigo,
// //             ),
// //             FloatingActionButton.extended(
// //               heroTag: 'startBtn',
// //               onPressed: () {
// //                 if (players.every((p) => p.name.isNotEmpty)) {
// //                   Navigator.push(
// //                     context,
// //                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
// //                   );
// //                 } else {
// //                   ScaffoldMessenger.of(
// //                     context,
// //                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
// //                 }
// //               },
// //               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
// //               label: const Text('시작', style: TextStyle(color: Colors.white)),
// //               backgroundColor: Colors.teal,
// //             ),
// //           ],
// //         ),
// //       ),
// //     );
// //   }
// // }

// // class TimerScreen extends StatefulWidget {
// //   final List<Player> players;
// //   const TimerScreen({super.key, required this.players});

// //   @override
// //   State<TimerScreen> createState() => _TimerScreenState();
// // }

// // class _TimerScreenState extends State<TimerScreen> {
// //   Timer? _timer;
// //   int currentIndex = 0;

// //   @override
// //   void initState() {
// //     super.initState();
// //     startTimer();
// //   }

// //   void startTimer() {
// //     _timer?.cancel();
// //     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
// //       setState(() {
// //         final player = widget.players[currentIndex];
// //         if (player.seconds > 0) {
// //           player.seconds--;
// //           player.elapsedSeconds++;
// //         } else {
// //           player.isCompleted = true;
// //           switchToNextPlayer();
// //         }
// //       });
// //     });
// //   }

// //   void pauseTimer() {
// //     _timer?.cancel();
// //   }

// //   void switchToNextPlayer() {
// //     pauseTimer();
// //     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
// //       showSummaryDialog();
// //       return;
// //     }
// //     do {
// //       currentIndex = (currentIndex + 1) % widget.players.length;
// //     } while (widget.players[currentIndex].isCompleted);
// //     startTimer();
// //   }

// //   void resetAll() {
// //     for (var p in widget.players) {
// //       p.seconds = p.originalSeconds;
// //       p.elapsedSeconds = 0;
// //       p.isCompleted = false;
// //     }
// //     setState(() {
// //       currentIndex = 0;
// //     });
// //     startTimer();
// //   }

// //   String formatDuration(int seconds) {
// //     final d = Duration(seconds: seconds);
// //     final hours = d.inHours.toString().padLeft(2, '0');
// //     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
// //     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
// //     return '$hours:$minutes:$secs';
// //   }

// //   void showSummaryDialog() {
// //     _timer?.cancel();
// //     showDialog(
// //       context: context,
// //       builder:
// //           (_) => AlertDialog(
// //             title: const Text('Round Complete'),
// //             content: Column(
// //               mainAxisSize: MainAxisSize.min,
// //               children:
// //                   widget.players.map((p) {
// //                     final formatted = formatDuration(p.elapsedSeconds);
// //                     return Text('${p.name} ⏱ $formatted');
// //                   }).toList(),
// //             ),
// //             actions: [
// //               TextButton(
// //                 onPressed: () {
// //                   Navigator.of(context).pop();
// //                   resetAll();
// //                 },
// //                 child: const Text('Next Round'),
// //               ),
// //               TextButton(
// //                 onPressed: () {
// //                   resetAll();
// //                   Navigator.of(context).popUntil((r) => r.isFirst);
// //                 },
// //                 child: const Text('Home'),
// //               ),
// //             ],
// //           ),
// //     );
// //   }

// //   @override
// //   void dispose() {
// //     _timer?.cancel();
// //     super.dispose();
// //   }

// //   @override
// //   Widget build(BuildContext context) {
// //     final player = widget.players[currentIndex];
// //     return Scaffold(
// //       backgroundColor: player.color,
// //       body: SafeArea(
// //         child: GestureDetector(
// //           behavior: HitTestBehavior.opaque,
// //           onTap: () {
// //             setState(() {
// //               pauseTimer();
// //               switchToNextPlayer();
// //             });
// //           },
// //           child: Stack(
// //             children: [
// //               Center(
// //                 child: Column(
// //                   mainAxisAlignment: MainAxisAlignment.center,
// //                   children: [
// //                     Text(player.name, style: TextStyle(fontSize: 28.sp, color: Colors.white)),
// //                     SizedBox(height: 16.h),
// //                     Text(
// //                       formatDuration(player.seconds),
// //                       style: TextStyle(
// //                         fontSize: 64.sp,
// //                         fontWeight: FontWeight.bold,
// //                         color: Colors.white,
// //                       ),
// //                     ),
// //                     SizedBox(height: 24.h),
// //                     ElevatedButton(
// //                       onPressed: () {
// //                         setState(() {
// //                           widget.players[currentIndex].isCompleted = true;
// //                           pauseTimer();
// //                           switchToNextPlayer();
// //                         });
// //                       },
// //                       child: const Text('Complete'),
// //                     ),
// //                     SizedBox(height: 12.h),
// //                     ElevatedButton(onPressed: resetAll, child: const Text('Restart')),
// //                   ],
// //                 ),
// //               ),
// //               Positioned(
// //                 top: 20.h,
// //                 right: 20.w,
// //                 child: IconButton(
// //                   icon: Icon(FeatherIcons.home, color: Colors.white, size: 28.sp),
// //                   onPressed: () {
// //                     pauseTimer();
// //                     showDialog(
// //                       context: context,
// //                       builder:
// //                           (context) => AlertDialog(
// //                             title: const Text('홈으로 이동'),
// //                             content: const Text('정말 홈으로 가시겠습니까? \n설정을 유지하거나 초기화할 수 있습니다.'),
// //                             actions: [
// //                               TextButton(
// //                                 onPressed: () {
// //                                   Navigator.of(context).pop();
// //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// //                                 },
// //                                 child: const Text('설정 유지'),
// //                               ),
// //                               TextButton(
// //                                 onPressed: () {
// //                                   resetAll();
// //                                   Navigator.of(context).pop();
// //                                   Navigator.of(context).popUntil((r) => r.isFirst);
// //                                 },
// //                                 child: const Text('초기화 후 이동'),
// //                               ),
// //                               TextButton(
// //                                 onPressed: () => Navigator.of(context).pop(),
// //                                 child: const Text('취소'),
// //                               ),
// //                             ],
// //                           ),
// //                     );
// //                   },
// //                 ),
// //               ),
// //             ],
// //           ),
// //         ),
// //       ),
// //     );
// //   }
// // }


// // 5월 23일 슬라이더블 패키지 적용용
// import 'package:flutter/material.dart';
// import 'package:flutter_screenutil/flutter_screenutil.dart';
// import 'package:flutter/cupertino.dart';
// import 'dart:async';
// import 'dart:convert';
// import 'package:shared_preferences/shared_preferences.dart';
// import 'package:flutter_feather_icons/flutter_feather_icons.dart';
// import 'package:flutter/services.dart';
// import 'package:flutter_slidable/flutter_slidable.dart'; // <--- Slidable 라이브러리 import

// void main() async {
//   WidgetsFlutterBinding.ensureInitialized();
//   final prefs = await SharedPreferences.getInstance();
//   final lastUsed = prefs.getString('last_used_preset');
//   runApp(MyApp(lastUsedPreset: lastUsed));
// }

// class MyApp extends StatelessWidget {
//   final String? lastUsedPreset;
//   const MyApp({super.key, this.lastUsedPreset});

//   @override
//   Widget build(BuildContext context) {
//     return ScreenUtilInit(
//       designSize: const Size(390, 844),
//       builder:
//           (context, child) => MaterialApp(
//             debugShowCheckedModeBanner: false,
//             title: 'Multi Player Timer',
//             theme: ThemeData(
//               scaffoldBackgroundColor: Colors.white,
//               fontFamily: 'Roboto',
//               textTheme: TextTheme(
//                 displaySmall: TextStyle(fontSize: 32.sp, fontWeight: FontWeight.bold),
//                 titleMedium: TextStyle(fontSize: 20.sp, fontWeight: FontWeight.w600),
//                 bodyLarge: TextStyle(fontSize: 16.sp),
//               ),
//               elevatedButtonTheme: ElevatedButtonThemeData(
//                 style: ElevatedButton.styleFrom(
//                   shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12.r)),
//                   padding: EdgeInsets.symmetric(horizontal: 24.w, vertical: 14.h),
//                 ),
//               ),
//             ),
//             home: PlayerSetupScreen(lastUsedPreset: lastUsedPreset),
//           ),
//     );
//   }
// }

// class Player {
//   String name;
//   int seconds;
//   int originalSeconds;
//   Color color;
//   bool isCompleted;
//   int elapsedSeconds = 0;

//   Player({required this.name, required this.seconds, required this.color, this.isCompleted = false})
//     : originalSeconds = seconds;

//   Map<String, dynamic> toJson() => {'name': name, 'seconds': originalSeconds, 'color': color.value};

//   static Player fromJson(Map<String, dynamic> json) =>
//       Player(name: json['name'], seconds: json['seconds'], color: Color(json['color']));
// }

// class PlayerSetupScreen extends StatefulWidget {
//   final String? lastUsedPreset;
//   const PlayerSetupScreen({super.key, this.lastUsedPreset});

//   @override
//   State<PlayerSetupScreen> createState() => _PlayerSetupScreenState();
// }

// class _PlayerSetupScreenState extends State<PlayerSetupScreen> {
//   final List<Player> players = [];
//   final List<TextEditingController> nameControllers = [];
//   String? currentPresetName;

//   @override
//   void initState() {
//     super.initState();
//     if (widget.lastUsedPreset != null) {
//       currentPresetName = widget.lastUsedPreset;
//       loadPreset(widget.lastUsedPreset!, autoLoad: true);
//     } else {
//       initializePlayers(2);
//     }
//   }

//   void initializePlayers(int count) {
//     players.clear();
//     nameControllers.clear();
//     for (int i = 0; i < count; i++) {
//       players.add(Player(name: 'Player ${i + 1}', seconds: 600, color: Colors.blue));
//       nameControllers.add(TextEditingController(text: 'Player ${i + 1}'));
//     }
//     setState(() {});
//   }

//   void addPlayer() {
//     final newIndex = players.length;
//     players.add(Player(name: 'Player ${newIndex + 1}', seconds: 600, color: Colors.blue));
//     nameControllers.add(TextEditingController(text: 'Player ${newIndex + 1}'));
//     setState(() {});
//   }

//   void removePlayer(int index) {
//     players.removeAt(index);
//     nameControllers.removeAt(index);
//     setState(() {});
//   }

//   Future<void> saveCurrentSettings(String presetName) async {
//     if (presetName.isEmpty) return;
//     final prefs = await SharedPreferences.getInstance();
//     final encoded = players.map((p) => p.toJson()).toList();
//     await prefs.setString('preset_$presetName', jsonEncode(encoded));
//     await prefs.setString('last_used_preset', presetName);
//     final names = prefs.getStringList('preset_names') ?? [];
//     if (!names.contains(presetName)) {
//       names.add(presetName);
//       await prefs.setStringList('preset_names', names);
//     }
//     setState(() {
//       currentPresetName = presetName;
//     });
//   }

//   Future<void> deletePreset(String presetName) async {
//     final prefs = await SharedPreferences.getInstance();
//     await prefs.remove('preset_$presetName');
//     final names = prefs.getStringList('preset_names') ?? [];
//     names.remove(presetName);
//     await prefs.setStringList('preset_names', names);
//     final lastUsed = prefs.getString('last_used_preset');
//     if (lastUsed == presetName) {
//       await prefs.remove('last_used_preset');
//       setState(() {
//         currentPresetName = null;
//       });
//     }
//   }

//   Future<void> loadPreset(String presetName, {bool autoLoad = false}) async {
//     try {
//       final prefs = await SharedPreferences.getInstance();
//       final jsonString = prefs.getString('preset_$presetName');
//       if (jsonString == null) return;
//       final List decoded = jsonDecode(jsonString);
//       players.clear();
//       nameControllers.clear();
//       for (var p in decoded) {
//         final player = Player.fromJson(p);
//         players.add(player);
//         nameControllers.add(TextEditingController(text: player.name));
//       }
//       setState(() {
//         currentPresetName = presetName;
//       });
//       if (!autoLoad) {
//         await prefs.setString('last_used_preset', presetName);
//       }
//     } catch (_) {
//       ScaffoldMessenger.of(
//         context,
//       ).showSnackBar(const SnackBar(content: Text("설정을 불러오는 중 오류가 발생했습니다.")));
//     }
//   }

//   void showSaveDialog() async {
//     final controller = TextEditingController();
//     await showDialog(
//       context: context,
//       builder:
//           (ctx) => AlertDialog(
//             title: const Text("설정 이름 저장"),
//             content: TextField(
//               controller: controller,
//               decoration: const InputDecoration(hintText: "예: 친구들과 타이머"),
//             ),
//             actions: [
//               TextButton(
//                 onPressed: () async {
//                   await saveCurrentSettings(controller.text.trim());
//                   Navigator.of(ctx).pop();
//                 },
//                 child: const Text("저장"),
//               ),
//             ],
//           ),
//     );
//   }

//   void showLoadDialog() async {
//     final prefs = await SharedPreferences.getInstance();
//     final presetNames = prefs.getStringList('preset_names') ?? [];
//     if (presetNames.isEmpty) {
//       ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text("저장된 설정이 없습니다.")));
//       return;
//     }
//     await showDialog(
//       context: context,
//       builder:
//           (ctx) => AlertDialog(
//             title: const Text("불러올 설정 선택"),
//             content: SingleChildScrollView(
//               child: Column(
//                 mainAxisSize: MainAxisSize.min,
//                 children:
//                     presetNames.map((name) {
//                       return ListTile(
//                         title: Text(name),
//                         trailing: IconButton(
//                           icon: const Icon(Icons.delete, color: Colors.red),
//                           onPressed: () async {
//                             Navigator.of(ctx).pop();
//                             await deletePreset(name);
//                           },
//                         ),
//                         onTap: () async {
//                           Navigator.of(ctx).pop();
//                           await loadPreset(name);
//                         },
//                       );
//                     }).toList(),
//               ),
//             ),
//           ),
//     );
//   }

//   void clearAllSettings() async {
//     initializePlayers(2);
//     final prefs = await SharedPreferences.getInstance();
//     await prefs.remove('last_used_preset');
//     setState(() {
//       currentPresetName = null;
//     });
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       body: SafeArea(
//         child: Padding(
//           padding: EdgeInsets.all(24.w),
//           child: Column(
//             crossAxisAlignment: CrossAxisAlignment.start,
//             children: [
//               SizedBox(height: 40.h),
//               Text(
//                 'TimeSquad',
//                 style: TextStyle(
//                   fontSize: 36.sp,
//                   fontWeight: FontWeight.w800,
//                   letterSpacing: 1.2,
//                   color: Colors.black87,
//                 ),
//               ),
//               SizedBox(height: 4.h),
//               Row(
//                 children: [
//                   Text('Settings', style: TextStyle(fontSize: 18.sp, color: Colors.grey[700])),
//                   const Spacer(),
//                   Row(
//                     mainAxisSize: MainAxisSize.min,
//                     children: [
//                       IconButton(icon: const Icon(FeatherIcons.save), onPressed: showSaveDialog),
//                       IconButton(icon: const Icon(FeatherIcons.folder), onPressed: showLoadDialog),
//                       IconButton(
//                         icon: const Icon(FeatherIcons.rotateCcw),
//                         onPressed: clearAllSettings,
//                       ),
//                     ],
//                   ),
//                 ],
//               ),
//               SizedBox(height: 24.h),
//               Expanded(
//                 child: ReorderableListView.builder(
//                   padding: EdgeInsets.only(bottom: 120.h),
//                   buildDefaultDragHandles: false,
//                   proxyDecorator: (child, index, animation) {
//                     final scale = Tween<double>(begin: 1.0, end: 1.03).animate(animation);
//                     return ScaleTransition(
//                       scale: scale,
//                       child: Material(
//                         elevation: 0,
//                         shadowColor: Colors.transparent,
//                         color: Colors.transparent,
//                         child: child,
//                       ),
//                     );
//                   },
//                   itemCount: players.length,
//                   onReorder: (oldIndex, newIndex) {
//                     setState(() {
//                       if (newIndex > oldIndex) newIndex--;
//                       final player = players.removeAt(oldIndex);
//                       final controller = nameControllers.removeAt(oldIndex);
//                       players.insert(newIndex, player);
//                       nameControllers.insert(newIndex, controller);
//                     });
//                   },
//                   itemBuilder: (context, index) {
//                     final player = players[index];
//                     const double borderRadius = 20.0;

//                     return ReorderableDelayedDragStartListener(
//                       key: ValueKey(player),
//                       index: index,
//                       child: Padding(
//                         padding: EdgeInsets.only(bottom: 12.h),
//                         child: Container(
//                           margin: EdgeInsets.zero,
//                           decoration: BoxDecoration(
//                             color: Color.lerp(Colors.white, player.color, 0.2),
//                             borderRadius: BorderRadius.circular(borderRadius.r),
//                           ),
//                           clipBehavior: Clip.antiAlias,
//                           child: ClipRRect(
//                             borderRadius: BorderRadius.circular(borderRadius.r),
//                             child: Slidable(
//                               key: ValueKey(player),
//                               endActionPane: ActionPane(
//                                 motion: const ScrollMotion(),
//                                 dismissible: DismissiblePane(
//                                   onDismissed: () {
//                                     HapticFeedback.lightImpact(); // 햅틱 피드백
//                                     setState(() {
//                                       players.remove(player);
//                                       nameControllers.removeAt(index);
//                                     });
//                                   },
//                                 ),
//                                 children: [
//                                   SlidableAction(
//                                     flex: 1,
//                                     onPressed: (context) {
//                                       // DismissiblePane에서 이미 처리되므로 여기서는 아무것도 안함
//                                     },
//                                     backgroundColor: Colors.redAccent, // 배경색 직접 설정
//                                     foregroundColor: Colors.white, // 전경색(아이콘, 텍스트) 직접 설정
//                                     borderRadius: BorderRadius.only(
//                                       topRight: Radius.circular(borderRadius.r),
//                                       bottomRight: Radius.circular(borderRadius.r),
//                                     ),
//                                     icon: Icons.delete, // 아이콘 직접 설정
//                                     label: '삭제', // 라벨 직접 설정
//                                   ),
//                                 ],
//                               ),
//                               startActionPane: ActionPane(
//                                 motion: const ScrollMotion(),
//                                 dismissible: DismissiblePane(
//                                   onDismissed: () {
//                                     HapticFeedback.lightImpact(); // 햅틱 피드백
//                                     setState(() {
//                                       players.remove(player);
//                                       nameControllers.removeAt(index);
//                                     });
//                                   },
//                                 ),
//                                 children: [
//                                   SlidableAction(
//                                     flex: 1,
//                                     onPressed: (context) {
//                                       // DismissiblePane이 처리
//                                     },
//                                     backgroundColor: Colors.redAccent,
//                                     foregroundColor: Colors.white,
//                                     borderRadius: BorderRadius.only(
//                                       topLeft: Radius.circular(borderRadius.r),
//                                       bottomLeft: Radius.circular(borderRadius.r),
//                                     ),
//                                     icon: Icons.delete,
//                                     label: '삭제',
//                                   ),
//                                 ],
//                               ),
//                               child: Container(
//                                 // 실제 표시될 플레이어 카드 내용
//                                 padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 12.h),
//                                 child: Row(
//                                   children: [
//                                     Container(
//                                       width: 40.w,
//                                       height: 40.w,
//                                       alignment: Alignment.center,
//                                       decoration: BoxDecoration(
//                                         color: Colors.white,
//                                         borderRadius: BorderRadius.circular(12.r),
//                                       ),
//                                       child: Text(
//                                         '${index + 1}',
//                                         style: TextStyle(
//                                           fontSize: 18.sp,
//                                           fontWeight: FontWeight.bold,
//                                         ),
//                                       ),
//                                     ),
//                                     SizedBox(width: 12.w),
//                                     Expanded(
//                                       child: Column(
//                                         crossAxisAlignment: CrossAxisAlignment.start,
//                                         children: [
//                                           Container(
//                                             decoration: BoxDecoration(
//                                               color: Colors.white.withOpacity(0.6),
//                                               borderRadius: BorderRadius.circular(8.r),
//                                             ),
//                                             padding: EdgeInsets.symmetric(
//                                               horizontal: 8.w,
//                                               vertical: 4.h,
//                                             ),
//                                             child: TextField(
//                                               controller: nameControllers[index],
//                                               onChanged: (val) => players[index].name = val,
//                                               style: TextStyle(
//                                                 fontSize: 16.sp,
//                                                 fontWeight: FontWeight.w500,
//                                               ),
//                                               decoration: const InputDecoration.collapsed(
//                                                 hintText: 'Enter name',
//                                               ),
//                                             ),
//                                           ),
//                                           SizedBox(height: 8.h),
//                                           GestureDetector(
//                                             onTap: () async {
//                                               Duration selectedDuration = Duration(
//                                                 seconds: players[index].originalSeconds,
//                                               );
//                                               await showModalBottomSheet(
//                                                 context: context,
//                                                 builder:
//                                                     (context) => SizedBox(
//                                                       height: 200,
//                                                       child: CupertinoTimerPicker(
//                                                         mode: CupertinoTimerPickerMode.hms,
//                                                         initialTimerDuration: selectedDuration,
//                                                         onTimerDurationChanged: (
//                                                           Duration newDuration,
//                                                         ) {
//                                                           setState(() {
//                                                             players[index].seconds =
//                                                                 newDuration.inSeconds;
//                                                             players[index].originalSeconds =
//                                                                 newDuration.inSeconds;
//                                                           });
//                                                         },
//                                                       ),
//                                                     ),
//                                               );
//                                             },
//                                             child: Container(
//                                               decoration: BoxDecoration(
//                                                 color: Colors.white.withOpacity(0.6),
//                                                 borderRadius: BorderRadius.circular(8.r),
//                                               ),
//                                               padding: EdgeInsets.symmetric(
//                                                 horizontal: 12.w,
//                                                 vertical: 10.h,
//                                               ),
//                                               child: Text(
//                                                 'Time: ${Duration(seconds: players[index].originalSeconds).toString().split('.').first.padLeft(8, "0")}',
//                                                 style: TextStyle(
//                                                   fontSize: 16.sp,
//                                                   fontWeight: FontWeight.w500,
//                                                 ),
//                                               ),
//                                             ),
//                                           ),
//                                         ],
//                                       ),
//                                     ),
//                                     SizedBox(width: 8.w),
//                                     ElevatedButton(
//                                       onPressed: () async {
//                                         FocusScope.of(context).unfocus();
//                                         final color = await showDialog<Color>(
//                                           context: context,
//                                           builder:
//                                               (context) => AlertDialog(
//                                                 title: const Text('Select Color'),
//                                                 content: Wrap(
//                                                   spacing: 8.w,
//                                                   children:
//                                                       Colors.primaries.map((c) {
//                                                         return GestureDetector(
//                                                           onTap: () => Navigator.pop(context, c),
//                                                           child: Container(
//                                                             width: 30.w,
//                                                             height: 30.w,
//                                                             decoration: BoxDecoration(
//                                                               color: c,
//                                                               borderRadius: BorderRadius.circular(
//                                                                 15.r,
//                                                               ),
//                                                             ),
//                                                           ),
//                                                         );
//                                                       }).toList(),
//                                                 ),
//                                               ),
//                                         );
//                                         if (color != null) {
//                                           setState(() => players[index].color = color);
//                                         }
//                                       },
//                                       style: ElevatedButton.styleFrom(
//                                         backgroundColor: player.color,
//                                         foregroundColor: Colors.white,
//                                         shape: RoundedRectangleBorder(
//                                           borderRadius: BorderRadius.circular(12.r),
//                                         ),
//                                       ),
//                                       child: const Text('Color'),
//                                     ),
//                                   ],
//                                 ),
//                               ),
//                             ),
//                           ),
//                         ),
//                       ),
//                     );
//                   },
//                 ),
//               ),
//             ],
//           ),
//         ),
//       ),
//       floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
//       floatingActionButton: Padding(
//         padding: EdgeInsets.only(bottom: 16.h),
//         child: Row(
//           mainAxisAlignment: MainAxisAlignment.spaceEvenly,
//           children: [
//             FloatingActionButton.extended(
//               heroTag: 'addPlayerBtn',
//               onPressed: addPlayer,
//               icon: const Icon(Icons.person_add, color: Colors.white),
//               label: const Text('추가', style: TextStyle(color: Colors.white)),
//               backgroundColor: Colors.indigo,
//             ),
//             FloatingActionButton.extended(
//               heroTag: 'startBtn',
//               onPressed: () {
//                 if (players.every((p) => p.name.isNotEmpty)) {
//                   Navigator.push(
//                     context,
//                     MaterialPageRoute(builder: (_) => TimerScreen(players: players)),
//                   );
//                 } else {
//                   ScaffoldMessenger.of(
//                     context,
//                   ).showSnackBar(const SnackBar(content: Text("모든 플레이어의 이름을 입력해주세요.")));
//                 }
//               },
//               icon: const Icon(FeatherIcons.arrowRightCircle, color: Colors.white),
//               label: const Text('시작', style: TextStyle(color: Colors.white)),
//               backgroundColor: Colors.teal,
//             ),
//           ],
//         ),
//       ),
//     );
//   }
// }

// class TimerScreen extends StatefulWidget {
//   final List<Player> players;
//   const TimerScreen({super.key, required this.players});

//   @override
//   State<TimerScreen> createState() => _TimerScreenState();
// }

// class _TimerScreenState extends State<TimerScreen> {
//   Timer? _timer;
//   int currentIndex = 0;

//   @override
//   void initState() {
//     super.initState();
//     startTimer();
//   }

//   void startTimer() {
//     _timer?.cancel();
//     _timer = Timer.periodic(const Duration(seconds: 1), (_) {
//       setState(() {
//         final player = widget.players[currentIndex];
//         if (player.seconds > 0) {
//           player.seconds--;
//           player.elapsedSeconds++;
//         } else {
//           player.isCompleted = true;
//           switchToNextPlayer();
//         }
//       });
//     });
//   }

//   void pauseTimer() {
//     _timer?.cancel();
//   }

//   void switchToNextPlayer() {
//     pauseTimer();
//     if (widget.players.where((p) => !p.isCompleted).isEmpty) {
//       showSummaryDialog();
//       return;
//     }
//     do {
//       currentIndex = (currentIndex + 1) % widget.players.length;
//     } while (widget.players[currentIndex].isCompleted);
//     startTimer();
//   }

//   void resetAll() {
//     for (var p in widget.players) {
//       p.seconds = p.originalSeconds;
//       p.elapsedSeconds = 0;
//       p.isCompleted = false;
//     }
//     setState(() {
//       currentIndex = 0;
//     });
//     startTimer();
//   }

//   String formatDuration(int seconds) {
//     final d = Duration(seconds: seconds);
//     final hours = d.inHours.toString().padLeft(2, '0');
//     final minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
//     final secs = (d.inSeconds % 60).toString().padLeft(2, '0');
//     return '$hours:$minutes:$secs';
//   }

//   void showSummaryDialog() {
//     _timer?.cancel();
//     showDialog(
//       context: context,
//       builder:
//           (_) => AlertDialog(
//             title: const Text('Round Complete'),
//             content: Column(
//               mainAxisSize: MainAxisSize.min,
//               children:
//                   widget.players.map((p) {
//                     final formatted = formatDuration(p.elapsedSeconds);
//                     return Text('${p.name} ⏱ $formatted');
//                   }).toList(),
//             ),
//             actions: [
//               TextButton(
//                 onPressed: () {
//                   Navigator.of(context).pop();
//                   resetAll();
//                 },
//                 child: const Text('Next Round'),
//               ),
//               TextButton(
//                 onPressed: () {
//                   resetAll();
//                   Navigator.of(context).popUntil((r) => r.isFirst);
//                 },
//                 child: const Text('Home'),
//               ),
//             ],
//           ),
//     );
//   }

//   @override
//   void dispose() {
//     _timer?.cancel();
//     super.dispose();
//   }

//   @override
//   Widget build(BuildContext context) {
//     final player = widget.players[currentIndex];
//     return Scaffold(
//       backgroundColor: player.color,
//       body: SafeArea(
//         child: GestureDetector(
//           behavior: HitTestBehavior.opaque,
//           onTap: () {
//             setState(() {
//               pauseTimer();
//               switchToNextPlayer();
//             });
//           },
//           child: Stack(
//             children: [
//               Center(
//                 child: Column(
//                   mainAxisAlignment: MainAxisAlignment.center,
//                   children: [
//                     Text(
//                       player.name,
//                       style: TextStyle(
//                         fontSize: 48.sp,
//                         fontWeight: FontWeight.bold,
//                         color: Colors.white,
//                       ),
//                     ),
//                     SizedBox(height: 20.h),
//                     Text(
//                       formatDuration(player.seconds),
//                       style: TextStyle(
//                         fontSize: 80.sp,
//                         fontWeight: FontWeight.bold,
//                         color: Colors.white,
//                       ),
//                     ),
//                   ],
//                 ),
//               ),
//             ],
//           ),
//         ),
//       ),
//     );
//   }
// }
